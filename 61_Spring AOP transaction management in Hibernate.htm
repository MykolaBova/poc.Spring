<!DOCTYPE html><html lang="en"><title>Spring AOP transaction management in Hibernate</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='Quartz 1.6 scheduler tutorial' href='http://www.mkyong.com/java/quartz-scheduler-example/' /><link rel='next' title='Spring 3 + Quartz 1.8.6 scheduler example' href='http://www.mkyong.com/spring/spring-quartz-scheduler-example/' /><link rel='shortlink' href='http://www.mkyong.com/?p=4135' /><meta name="keywords" content="aop,hibernate,spring,transaction" /><link rel="canonical" href="http://www.mkyong.com/spring/spring-aop-transaction-management-in-hibernate/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-4135"><header><h1> Spring AOP transaction management in Hibernate</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-04-04T13:11:43+00:00">April 4, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : August 30, 2012 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><p>Transaction management is required to ensure the data integrity and consistency in database. Spring&#8217;s AOP technique is allow developers to manage the transaction declarative.</p><p>Here&#8217;s an example to show how to manage the Hibernate transaction with Spring AOP.</p><p><em>P.S Many Hibernate and Spring configuration files are hidden, only some important files are shown, if you want hand-on, download the full project at the end of the article.</em></p><h4>1. Table creation</h4><p>MySQL table scripts, a <strong>&#8216;product</strong>&#8216; table and a &#8216;<strong>product quantity on hand</strong>&#8216; table.</p><div class="wp_syntax"><div class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>  <span style="color: #ff0000;">`mkyong`</span><span style="color: #66cc66;">.</span><span style="color: #ff0000;">`product`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`PRODUCT_ID`</span> <span style="color: #993333; font-weight: bold;">BIGINT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`PRODUCT_CODE`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`PRODUCT_DESC`</span> <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">255</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`PRODUCT_ID`</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">USING</span> BTREE
<span style="color: #66cc66;">&#41;</span> ENGINE<span style="color: #66cc66;">=</span>InnoDB <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> CHARSET<span style="color: #66cc66;">=</span>utf8;
&nbsp;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>  <span style="color: #ff0000;">`mkyong`</span><span style="color: #66cc66;">.</span><span style="color: #ff0000;">`product_qoh`</span> <span style="color: #66cc66;">&#40;</span>
  <span style="color: #ff0000;">`QOH_ID`</span> <span style="color: #993333; font-weight: bold;">BIGINT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`PRODUCT_ID`</span> <span style="color: #993333; font-weight: bold;">BIGINT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #ff0000;">`QTY`</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">UNSIGNED</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`QOH_ID`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #ff0000;">`FK_product_qoh_product_id`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`PRODUCT_ID`</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
  <span style="color: #993333; font-weight: bold;">CONSTRAINT</span> <span style="color: #ff0000;">`FK_product_qoh_product_id`</span> <span style="color: #993333; font-weight: bold;">FOREIGN</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`PRODUCT_ID`</span><span style="color: #66cc66;">&#41;</span> 
  <span style="color: #993333; font-weight: bold;">REFERENCES</span> <span style="color: #ff0000;">`product`</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">`PRODUCT_ID`</span><span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#41;</span> ENGINE<span style="color: #66cc66;">=</span>InnoDB <span style="color: #993333; font-weight: bold;">AUTO_INCREMENT</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> CHARSET<span style="color: #66cc66;">=</span>utf8;</pre></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>2. Product Business Object</h4><p>In this &#8216;<strong>productBo</strong>&#8216; implementation, the <strong>save()</strong> method will insert a record into the &#8216;<strong>product</strong>&#8216; table via <strong>&#8216;productDao</strong>&#8216; class and a quantity on hand record into the &#8216;<strong>productQoh</strong>&#8216; table via &#8216;<strong>productQohBo</strong>&#8216; class.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.product.bo.impl</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.product.bo.ProductBo</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.product.bo.ProductQohBo</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.product.dao.ProductDao</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.product.model.Product</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.product.model.ProductQoh</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> ProductBoImpl <span style="color: #000000; font-weight: bold;">implements</span> ProductBo<span style="color: #009900;">&#123;</span>
&nbsp;
	ProductDao productDao<span style="color: #339933;">;</span>
	ProductQohBo productQohBo<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setProductDao<span style="color: #009900;">&#40;</span>ProductDao productDao<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">productDao</span> <span style="color: #339933;">=</span> productDao<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setProductQohBo<span style="color: #009900;">&#40;</span>ProductQohBo productQohBo<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">productQohBo</span> <span style="color: #339933;">=</span> productQohBo<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//this method need to be transactional</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> save<span style="color: #009900;">&#40;</span>Product product, <span style="color: #000066; font-weight: bold;">int</span> qoh<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
&nbsp;
		productDao.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>product<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Product Inserted&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		ProductQoh productQoh <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> ProductQoh<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		productQoh.<span style="color: #006633;">setProductId</span><span style="color: #009900;">&#40;</span>product.<span style="color: #006633;">getProductId</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		productQoh.<span style="color: #006633;">setQty</span><span style="color: #009900;">&#40;</span>qoh<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		productQohBo.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>productQoh<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;ProductQoh Inserted&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Spring&#8217;s bean configuration file.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">   <span style="color: #808080; font-style: italic;">&lt;!-- Product business object --&gt;</span>
   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;productBo&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.product.bo.impl.ProductBoImpl&quot;</span> <span style="color: #000000; font-weight: bold;">&gt;</span></span>
   	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;productDao&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;productDao&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
   	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;productQohBo&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;productQohBo&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
   <span style="color: #808080; font-style: italic;">&lt;!-- Product Data Access Object --&gt;</span>
   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;productDao&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.product.dao.impl.ProductDaoImpl&quot;</span> <span style="color: #000000; font-weight: bold;">&gt;</span></span>
   	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;sessionFactory&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;sessionFactory&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Run it</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">	Product product <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Product<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    product.<span style="color: #006633;">setProductCode</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;ABC&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    product.<span style="color: #006633;">setProductDesc</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;This is product ABC&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    ProductBo productBo <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>ProductBo<span style="color: #009900;">&#41;</span>appContext.<span style="color: #006633;">getBean</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;productBo&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    productBo.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>product, <span style="color: #cc66cc;">100</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div><p>Assume the <strong>save()</strong> does not has the transactional feature, if an Exception throw by <strong>productQohBo.save()</strong>, you will insert a record into &#8216;<strong>product</strong>&#8216; table only, no record will be insert into the &#8216;<strong>productQoh</strong>&#8216; table. This is a serious problem and break the data consistency in your database.</p><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>3. Transaction Management</h4><p>Declared a &#8216;<strong>TransactionInterceptor</strong>&#8216; bean, and a &#8216;<strong>HibernateTransactionManager</strong>&#8216; for the Hibernate transaction, and passing the necessary property.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;"><span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;"><span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;transactionInterceptor&quot;</span> </span>
<span style="color: #009900;">       <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.transaction.interceptor.TransactionInterceptor&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;transactionManager&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;transactionManager&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;transactionAttributes&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
	   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;props<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;prop</span> <span style="color: #000066;">key</span>=<span style="color: #ff0000;">&quot;save&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>PROPAGATION_REQUIRED<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/prop<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/props<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;transactionManager&quot;</span> </span>
<span style="color: #009900;">        <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.orm.hibernate3.HibernateTransactionManager&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
	  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;dataSource&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;dataSource&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;sessionFactory&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;sessionFactory&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
    <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h5>Transaction Attributes</h5><p>In transaction interceptor, you have to define which transaction’s attributes &#8216;<strong>propagation behavior</strong>&#8216; should be use. It means if a transactional <strong>&#8216;ProductBoImpl.save()</strong>&#8216; method is called another method &#8216;<strong>productQohBo.save()</strong>&#8216;, how the transaction should be propagated? Should it continue to run within the existing transaction? or start a new transaction for its own.</p><p>There are 7 types of propagation supported by Spring :</p><ul><li><strong>PROPAGATION_REQUIRED</strong> &#8211; Support a current transaction; create a new one if none exists.</li><li><strong>PROPAGATION_SUPPORTS</strong> &#8211; Support a current transaction; execute non-transactionally if none exists.</li><li><strong>PROPAGATION_MANDATORY</strong> &#8211; Support a current transaction; throw an exception if no current transaction exists.</li><li><strong>PROPAGATION_REQUIRES_NEW</strong> &#8211; Create a new transaction, suspending the current transaction if one exists.</li><li><strong>PROPAGATION_NOT_SUPPORTED</strong> &#8211; Do not support a current transaction; rather always execute non-transactionally.</li><li><strong>PROPAGATION_NEVER</strong> &#8211; Do not support a current transaction; throw an exception if a current transaction exists.</li><li><strong>PROPAGATION_NESTED</strong> &#8211; Execute within a nested transaction if a current transaction exists, behave like PROPAGATION_REQUIRED  else.</li></ul><p>In most cases, you may just need to use the PROPAGATION_REQUIRED.</p><p>In addition, you have to define the method to support this transaction attributes as well. The method name is supported wild card format, a <strong>save*</strong> will match all method name start with save(&#8230;).</p><h5>Transaction Manager</h5><p>In Hibernate transaction, you need to use <strong>HibernateTransactionManager</strong>. If you only deal with pure JDBC, use <strong>DataSourceTransactionManager</strong>; while JTA, use <strong>JtaTransactionManager</strong>.</p><h4>4. Proxy Factory Bean</h4><p>Create a new proxy factory bean for <strong>ProductBo</strong>, and set the &#8216;<strong>interceptorNames</strong>&#8216; property.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">   <span style="color: #808080; font-style: italic;">&lt;!-- Product business object --&gt;</span>
   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;productBo&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.product.bo.impl.ProductBoImpl&quot;</span> <span style="color: #000000; font-weight: bold;">&gt;</span></span>
   	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;productDao&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;productDao&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
   	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;productQohBo&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;productQohBo&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
   <span style="color: #808080; font-style: italic;">&lt;!-- Product Data Access Object --&gt;</span>
   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;productDao&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.product.dao.impl.ProductDaoImpl&quot;</span> <span style="color: #000000; font-weight: bold;">&gt;</span></span>
   	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;sessionFactory&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;sessionFactory&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;productBoProxy&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;target&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;productBo&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;interceptorNames&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>transactionInterceptor<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
  <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Run it</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">    Product product <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Product<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    product.<span style="color: #006633;">setProductCode</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;ABC&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    product.<span style="color: #006633;">setProductDesc</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;This is product ABC&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    ProductBo productBo <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>ProductBo<span style="color: #009900;">&#41;</span>appContext.<span style="color: #006633;">getBean</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;productBoProxy&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    productBo.<span style="color: #006633;">save</span><span style="color: #009900;">&#40;</span>product, <span style="color: #cc66cc;">100</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div><p>Get your proxy bean &#8216;<strong>productBoProxy</strong>&#8216;, and your <strong>save()</strong> method is support transactional now, any exceptions inside <strong>productBo.save()</strong> method will cause the whole transaction to rollback, no data will be insert into the database.</p><h4>Download Source Code</h4><div class="download"> Download it &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2010/03/Spring-Hibernate-Transaction-Example.zip'>Spring-Hibernate-Transaction-Example.zip</a></div><h4>References</h4><ol><li><a href="http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/transaction/TransactionDefinition.html" target="_blank">http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/transaction/TransactionDefinition.html</a></li><li><a href="http://static.springsource.org/spring/docs/2.5.x/reference/transaction.html" target="_blank">http://static.springsource.org/spring/docs/2.5.x/reference/transaction.html</a></li></ol><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/aop/" rel="tag">aop</a> <a href="http://www.mkyong.com/tag/hibernate/" rel="tag">hibernate</a> <a href="http://www.mkyong.com/tag/spring/" rel="tag">spring</a> <a href="http://www.mkyong.com/tag/transaction/" rel="tag">transaction</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/spring3/spring-aop-aspectj-in-xml-configuration-example/" title="Spring AOP + AspectJ in XML configuration example">Spring AOP + AspectJ in XML configuration example</a></li><li><a href="http://www.mkyong.com/spring3/spring-aop-aspectj-annotation-example/" title="Spring AOP + AspectJ annotation example">Spring AOP + AspectJ annotation example</a></li><li><a href="http://www.mkyong.com/jsf2/jsf-2-0-spring-hibernate-integration-example/" title="JSF 2.0 + Spring + Hibernate integration example">JSF 2.0 + Spring + Hibernate integration example</a></li><li><a href="http://www.mkyong.com/struts2/struts-2-spring-hibernate-integration-example/" title="Struts 2 + Spring + Hibernate integration example">Struts 2 + Spring + Hibernate integration example</a></li><li><a href="http://www.mkyong.com/struts/struts-spring-hibernate-integration-example/" title="Struts + Spring + Hibernate integration example">Struts + Spring + Hibernate integration example</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/spring-tutorials/' title='Spring Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/struts-2-tutorials/' title='Struts 2.x Tutorials'><div class='images img-border img-struts2'></div></a></li><li><a href='/tutorials/jax-ws-tutorials/' title='JAX-WS Tutorials'><div class='images img-border img-jaxws'></div></a></li><li><a href='/tutorials/jsf-2-0-tutorials/' title='JSF 2 Tutorials'><div class='images img-border img-jsf2'></div></a></li><li><a href='/tutorials/jax-rs-tutorial/' title='JAX-RS Tutorials'><div class='images img-border img-jaxrs'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-139209"><div id="dsq-comment-header-139209" class="dsq-comment-header"> <cite id="dsq-cite-139209"> <span id="dsq-author-user-139209">Eric</span> </cite></div><div id="dsq-comment-body-139209" class="dsq-comment-body"><div id="dsq-comment-message-139209" class="dsq-comment-message"><p>Good post, but imho it&#8217;s not an AOP basic configuration, regards, Eric.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138013"><div id="dsq-comment-header-138013" class="dsq-comment-header"> <cite id="dsq-cite-138013"> <span id="dsq-author-user-138013">Deepak</span> </cite></div><div id="dsq-comment-body-138013" class="dsq-comment-body"><div id="dsq-comment-message-138013" class="dsq-comment-message"><p>Hi,<br /> I m a newbie.When i tried running your example in my eclipse i get the following error:</p><p>log4j:WARN No appenders could be found for logger (org.springframework.context.support.ClassPathXmlApplicationContext).<br /> log4j:WARN Please initialize the log4j system properly.<br /> Exception in thread &#8220;main&#8221; org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#8216;dataSource&#8217; defined in class path resource [spring/database/DataSource.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:<br /> PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property &#8216;driverClassName&#8217; threw exception; nested exception is java.lang.IllegalStateException: Could not load JDBC driver class [com.mysql.jdbc.Driver]<br /> at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)<br /> at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)<br /> at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)<br /> at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)<br /> at java.security.AccessController.doPrivileged(Native Method)<br /> at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)<br /> at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)<br /> at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)<br /> at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)<br /> at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)<br /> at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)</p><p> at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)<br /> at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)<br /> at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)<br /> at org.springframework.context.support.ClassPathXmlApplicationContext.(ClassPathXmlApplicationContext.java:139)<br /> at org.springframework.context.support.ClassPathXmlApplicationContext.(ClassPathXmlApplicationContext.java:83)<br /> at com.mkyong.common.App.main(App.java:13)<br /> Caused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:<br /> PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property &#8216;driverClassName&#8217; threw exception; nested exception is java.lang.IllegalStateException: Could not load JDBC driver class [com.mysql.jdbc.Driver]<br /> at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:104)<br /> at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59)<br /> at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)<br /> &#8230; 16 more</p><p>PLZ&#8230;..HELP ME UP</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-137099"><div id="dsq-comment-header-137099" class="dsq-comment-header"> <cite id="dsq-cite-137099"> http://Mathalan.com <span id="dsq-author-user-137099">sara</span> </cite></div><div id="dsq-comment-body-137099" class="dsq-comment-body"><div id="dsq-comment-message-137099" class="dsq-comment-message"><p>Niyamay Yong oya nam pattama weda karayek</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-136568"><div id="dsq-comment-header-136568" class="dsq-comment-header"> <cite id="dsq-cite-136568"> <span id="dsq-author-user-136568">rio</span> </cite></div><div id="dsq-comment-body-136568" class="dsq-comment-body"><div id="dsq-comment-message-136568" class="dsq-comment-message"><p>hi&#8230;<br /> have you try nested transaction with spring ?</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-132041"><div id="dsq-comment-header-132041" class="dsq-comment-header"> <cite id="dsq-cite-132041"> <span id="dsq-author-user-132041">Yadab Raj Ojha</span> </cite></div><div id="dsq-comment-body-132041" class="dsq-comment-body"><div id="dsq-comment-message-132041" class="dsq-comment-message"><p>Very much clean and complete project! Thank u so much mkyoung for your great post. It works for me without any error in eclipse as well as in netbean(after just copy + paste of source package)*****5star</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-131611"><div id="dsq-comment-header-131611" class="dsq-comment-header"> <cite id="dsq-cite-131611"> <span id="dsq-author-user-131611">FTorterolo</span> </cite></div><div id="dsq-comment-body-131611" class="dsq-comment-body"><div id="dsq-comment-message-131611" class="dsq-comment-message"><p>Muchas gracias, fue de mucha ayuda para mi tarea.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-129825"><div id="dsq-comment-header-129825" class="dsq-comment-header"> <cite id="dsq-cite-129825"> <span id="dsq-author-user-129825">Manjeet Rulhania</span> </cite></div><div id="dsq-comment-body-129825" class="dsq-comment-body"><div id="dsq-comment-message-129825" class="dsq-comment-message"><p>thanks a ton :)</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-127940"><div id="dsq-comment-header-127940" class="dsq-comment-header"> <cite id="dsq-cite-127940"> <span id="dsq-author-user-127940">jagan</span> </cite></div><div id="dsq-comment-body-127940" class="dsq-comment-body"><div id="dsq-comment-message-127940" class="dsq-comment-message"><p>Nice Tutorial ..,<br /> good work.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-126681"><div id="dsq-comment-header-126681" class="dsq-comment-header"> <cite id="dsq-cite-126681"> <span id="dsq-author-user-126681">John</span> </cite></div><div id="dsq-comment-body-126681" class="dsq-comment-body"><div id="dsq-comment-message-126681" class="dsq-comment-message"><p>Hi,</p><p>Is this really a SPRING AOP TRANSACTION MANAGEMENT, then where are the adivce and  point cuts &#8230;. i think this eaxmple is SPRING DECLARATIVE PROXY BASED example not the AOP based.<br /> Can you please change the title of of project as many of them will get confused..</p><p>John</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-126274"><div id="dsq-comment-header-126274" class="dsq-comment-header"> <cite id="dsq-cite-126274"> <span id="dsq-author-user-126274">Solipuram</span> </cite></div><div id="dsq-comment-body-126274" class="dsq-comment-body"><div id="dsq-comment-message-126274" class="dsq-comment-message"><p>Hi MK,</p><p>Regularly i am following your site for upgrading my knowledge thanks for your post.</p><p>I have one problem in spring transaction.<br /> The above example is working fine for me when i am running as a stand alone application, but when i am trying to implement same transaction support in my web application it&#8217;s not working can you guide me please.</p><p>Thanks in advance.</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-126648"><div id="dsq-comment-header-126648" class="dsq-comment-header"> <cite id="dsq-cite-126648"> <span id="dsq-author-user-126648">Solipuram</span> </cite></div><div id="dsq-comment-body-126648" class="dsq-comment-body"><div id="dsq-comment-message-126648" class="dsq-comment-message"><p>Above issue is resolved.<br /> Problem is in my code i handled the exceptions in try catch so the method is executing normally so it can&#8217;t performed the rollback operation.</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-125635"><div id="dsq-comment-header-125635" class="dsq-comment-header"> <cite id="dsq-cite-125635"> <span id="dsq-author-user-125635">appesh</span> </cite></div><div id="dsq-comment-body-125635" class="dsq-comment-body"><div id="dsq-comment-message-125635" class="dsq-comment-message"><p>Thnks..useful</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-94115"><div id="dsq-comment-header-94115" class="dsq-comment-header"> <cite id="dsq-cite-94115"> <span id="dsq-author-user-94115">Anil Kumar</span> </cite></div><div id="dsq-comment-body-94115" class="dsq-comment-body"><div id="dsq-comment-message-94115" class="dsq-comment-message"><p>What is the difference between PROPAGATION_REQUIRES_NEW and PROPAGATION_NESTED . ?<br /> In both cases if transaction already exists will create a new sub transaction .</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-83331"><div id="dsq-comment-header-83331" class="dsq-comment-header"> <cite id="dsq-cite-83331"> <span id="dsq-author-user-83331">Vivek</span> </cite></div><div id="dsq-comment-body-83331" class="dsq-comment-body"><div id="dsq-comment-message-83331" class="dsq-comment-message"><p>I find your posts/tutorials very helpful.<br /> Keep up the good work.</p><p>I was however not able to build the project on the pom from the zip.<br /> Could you please confirm that it is correct?</p><p>I am getting an error for</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">	<span style="color: #ddbb00;">&amp;lt;</span>dependency<span style="color: #ddbb00;">&amp;gt;</span>
		<span style="color: #ddbb00;">&amp;lt;</span>groupId<span style="color: #ddbb00;">&amp;gt;</span>hibernate<span style="color: #ddbb00;">&amp;lt;</span>/groupId<span style="color: #ddbb00;">&amp;gt;</span>
		<span style="color: #ddbb00;">&amp;lt;</span>artifactId<span style="color: #ddbb00;">&amp;gt;</span>hibernate3<span style="color: #ddbb00;">&amp;lt;</span>/artifactId<span style="color: #ddbb00;">&amp;gt;</span>
		<span style="color: #ddbb00;">&amp;lt;</span>version<span style="color: #ddbb00;">&amp;gt;</span>3.2.3.GA<span style="color: #ddbb00;">&amp;lt;</span>/version<span style="color: #ddbb00;">&amp;gt;</span>
	<span style="color: #ddbb00;">&amp;lt;</span>/dependency<span style="color: #ddbb00;">&amp;gt;</span></pre></div></div><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #009900;">&#91;</span>ERROR<span style="color: #009900;">&#93;</span> Failed to execute goal on project SpringExample<span style="color: #339933;">:</span> Could not resolve dependencies <span style="color: #000000; font-weight: bold;">for</span> project com.<span style="color: #006633;">mkyong</span>.<span style="color: #006633;">common</span><span style="color: #339933;">:</span>SpringExample<span style="color: #339933;">:</span>jar<span style="color: #339933;">:</span><span style="color: #cc66cc;">1.0</span><span style="color: #339933;">-</span>SNAPSHOT<span style="color: #339933;">:</span> Failure t
o find hibernate<span style="color: #339933;">:</span>hibernate3<span style="color: #339933;">:</span>jar<span style="color: #339933;">:</span>3.2.3.<span style="color: #006633;">GA</span> in http<span style="color: #339933;">:</span><span style="color: #666666; font-style: italic;">//repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -&amp;gt; [Help 1]</span></pre></div></div></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-121965"><div id="dsq-comment-header-121965" class="dsq-comment-header"> <cite id="dsq-cite-121965"> <span id="dsq-author-user-121965">JSF_Learner</span> </cite></div><div id="dsq-comment-body-121965" class="dsq-comment-body"><div id="dsq-comment-message-121965" class="dsq-comment-message"><p>Is this Error of yours Resolved?</p></div></div></li><li class="comment odd alt depth-2" id="dsq-comment-125636"><div id="dsq-comment-header-125636" class="dsq-comment-header"> <cite id="dsq-cite-125636"> <span id="dsq-author-user-125636">appesh</span> </cite></div><div id="dsq-comment-body-125636" class="dsq-comment-body"><div id="dsq-comment-message-125636" class="dsq-comment-message"><p>Google the maven dependencies for hibernate and replace it will work fine.</p></div></div><ul class="children"><li class="comment even depth-3" id="dsq-comment-134556"><div id="dsq-comment-header-134556" class="dsq-comment-header"> <cite id="dsq-cite-134556"> <span id="dsq-author-user-134556">Shakhal Levinson</span> </cite></div><div id="dsq-comment-body-134556" class="dsq-comment-body"><div id="dsq-comment-message-134556" class="dsq-comment-message"><p> org.hibernate<br /> hibernate-entitymanager<br /> 3.3.2.GA</p></div></div></li></ul></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-80830"><div id="dsq-comment-header-80830" class="dsq-comment-header"> <cite id="dsq-cite-80830"> http://.html <span id="dsq-author-user-80830">Elroy Willoughby</span> </cite></div><div id="dsq-comment-body-80830" class="dsq-comment-body"><div id="dsq-comment-message-80830" class="dsq-comment-message"><p>Fascinating post. I&#8217;ll be sticking about to hear significantly a lot more from you guys. Thanks!</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-80225"><div id="dsq-comment-header-80225" class="dsq-comment-header"> <cite id="dsq-cite-80225"> <span id="dsq-author-user-80225">raza</span> </cite></div><div id="dsq-comment-body-80225" class="dsq-comment-body"><div id="dsq-comment-message-80225" class="dsq-comment-message"><p>can u please post code using  AOP</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-78956"><div id="dsq-comment-header-78956" class="dsq-comment-header"> <cite id="dsq-cite-78956"> <span id="dsq-author-user-78956">Raghu</span> </cite></div><div id="dsq-comment-body-78956" class="dsq-comment-body"><div id="dsq-comment-message-78956" class="dsq-comment-message"><p>How to check if there was rollback? Is there a way to find the status of transaction on individual tables.</p><p>Example:</p><p>In a single method called checkout,there are insertion on tables and then a confirmation email is sent.</p><p>This method is declaratively wrapped by transaction.</p><p>I want to know if the sql&#8217;s are ok before sending email.</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-80860"><div id="dsq-comment-header-80860" class="dsq-comment-header"> <cite id="dsq-cite-80860"> <span id="dsq-author-user-80860">raza</span> </cite></div><div id="dsq-comment-body-80860" class="dsq-comment-body"><div id="dsq-comment-message-80860" class="dsq-comment-message"><p>It&#8217;s better not to put send email in trnasaction as the tables will be locked by the transaction till the transaction is completed. You can have after transaction event method.</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-94235"><div id="dsq-comment-header-94235" class="dsq-comment-header"> <cite id="dsq-cite-94235"> <span id="dsq-author-user-94235">husain</span> </cite></div><div id="dsq-comment-body-94235" class="dsq-comment-body"><div id="dsq-comment-message-94235" class="dsq-comment-message"><p>thanks for the reply.</p></div></div></li><li class="comment even depth-3" id="dsq-comment-122788"><div id="dsq-comment-header-122788" class="dsq-comment-header"> <cite id="dsq-cite-122788"> http://www.azizkhani.net <span id="dsq-author-user-122788">ali akbar azizkhani</span> </cite></div><div id="dsq-comment-body-122788" class="dsq-comment-body"><div id="dsq-comment-message-122788" class="dsq-comment-message"><p>mishe begi chi neveshti :D</p></div></div></li></ul></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-77798"><div id="dsq-comment-header-77798" class="dsq-comment-header"> <cite id="dsq-cite-77798"> http://gabhi.com <span id="dsq-author-user-77798">Abhijit</span> </cite></div><div id="dsq-comment-body-77798" class="dsq-comment-body"><div id="dsq-comment-message-77798" class="dsq-comment-message"><p>I am getting following error</p><p>Exception in thread &#8220;main&#8221; org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#8216;productBoProxy&#8217;: FactoryBean threw exception on object creation; nested exception is org.springframework.aop.framework.AopConfigException: Unknown advisor type class org.springframework.transaction.interceptor.TransactionInterceptor; Can only include Advisor or Advice type beans in interceptorNames chain except for last entry,which may also be target or TargetSource; nested exception is org.springframework.aop.framework.adapter.UnknownAdviceTypeException: Advice object [org.springframework.transaction.interceptor.TransactionInterceptor@65d9e279] is neither a supported subinterface of [org.aopalliance.aop.Advice] nor an [org.springframework.aop.Advisor]</p><p>I m a newbie, in your source code are you missing productBoProxy?</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-76222"><div id="dsq-comment-header-76222" class="dsq-comment-header"> <cite id="dsq-cite-76222"> <span id="dsq-author-user-76222">Gaurav</span> </cite></div><div id="dsq-comment-body-76222" class="dsq-comment-body"><div id="dsq-comment-message-76222" class="dsq-comment-message"><p>Hi  mk :)</p><p>I am getting an error while trying to run this tutorial as  follows</p><p>Error creating bean with name &#8216;sessionFactory&#8217; defined in class path resource [spring/database/Hibernate.xml]: Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: javax/transaction/TransactionManager</p><p>Please help me &#8230;.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-76343"><div id="dsq-comment-header-76343" class="dsq-comment-header"> <cite id="dsq-cite-76343"> http://www.mkyong.com <span id="dsq-author-user-76343">mkyong</span> </cite></div><div id="dsq-comment-body-76343" class="dsq-comment-body"><div id="dsq-comment-message-76343" class="dsq-comment-message"><p>you need javee.jar, which you can locate in JavaEE SDK.</p></div></div></li></ul></li><li class="comment even thread-even depth-1" id="dsq-comment-75346"><div id="dsq-comment-header-75346" class="dsq-comment-header"> <cite id="dsq-cite-75346"> <span id="dsq-author-user-75346">Mohamed</span> </cite></div><div id="dsq-comment-body-75346" class="dsq-comment-body"><div id="dsq-comment-message-75346" class="dsq-comment-message"><p>transaction rollback not working right: If I have an exception in insert ProductQoh the insert of Product does not get rolled back.</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-125476"><div id="dsq-comment-header-125476" class="dsq-comment-header"> <cite id="dsq-cite-125476"> <span id="dsq-author-user-125476">Ryan</span> </cite></div><div id="dsq-comment-body-125476" class="dsq-comment-body"><div id="dsq-comment-message-125476" class="dsq-comment-message"><p>Yes me too, transaction rollback aint working right</p></div></div><ul class="children"><li class="comment even depth-3" id="dsq-comment-125656"><div id="dsq-comment-header-125656" class="dsq-comment-header"> <cite id="dsq-cite-125656"> <span id="dsq-author-user-125656">Raza</span> </cite></div><div id="dsq-comment-body-125656" class="dsq-comment-body"><div id="dsq-comment-message-125656" class="dsq-comment-message"><p>Transaction rollback worked perfectly for me. Are you using spring declarative transactions. Please feel free to elaborate you problem, I have done enough research on this.</p></div></div><ul class="children"><li class="comment odd alt depth-4" id="dsq-comment-125882"><div id="dsq-comment-header-125882" class="dsq-comment-header"> <cite id="dsq-cite-125882"> <span id="dsq-author-user-125882">Auton</span> </cite></div><div id="dsq-comment-body-125882" class="dsq-comment-body"><div id="dsq-comment-message-125882" class="dsq-comment-message"><p>Hi Raza, I&#8217;m facing the same problem like Mohamed and Ryan does.<br /> I&#8217;m running the code as I had downloaded from here. Have you changed<br /> something in the source code to make transaction to be rolled-back properly?</p></div></div><ul class="children"><li class="comment even depth-5" id="dsq-comment-129122"><div id="dsq-comment-header-129122" class="dsq-comment-header"> <cite id="dsq-cite-129122"> <span id="dsq-author-user-129122">Vijay</span> </cite></div><div id="dsq-comment-body-129122" class="dsq-comment-body"><div id="dsq-comment-message-129122" class="dsq-comment-message"><p>Good job. Appreciate it.</p><p>-Vijay</p></div></div></li></ul></li><li class="comment odd alt depth-4" id="dsq-comment-130553"><div id="dsq-comment-header-130553" class="dsq-comment-header"> <cite id="dsq-cite-130553"> <span id="dsq-author-user-130553">jerry</span> </cite></div><div id="dsq-comment-body-130553" class="dsq-comment-body"><div id="dsq-comment-message-130553" class="dsq-comment-message"><p>Hi,</p><p>I am facing that Exception while running the program</p><p>Error creating bean with name &#8216;sessionFactory&#8217; defined in class path resource [Hibernate.xml]: Invocation of init method failed; nested exception is java.lang.AbstractMethodError: org.slf4j.impl.JDK14LoggerAdapter.isTraceEnabled()Z</p><p>Please help me to resolve that.</p><p>Thanks</p></div></div></li></ul></li></ul></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/tutorials/spring-tutorials/' rel='external nofollow' class='url'>Spring Tutorials | Tutorials</a></p></li></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/spring/spring-aop-transaction-management-in-hibernate/';var disqus_identifier='4135 http://www.mkyong.com/?p=4135';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Spring AOP transaction management in Hibernate";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=4135';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">var DsqLocal={'trackbacks':[{'author_name':"Spring Tutorials | Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/spring-tutorials\/",'date':"05\/02\/2010 09:53 PM",'excerpt':"[...] Spring AOP transaction management in Hibernate Example to show how to manage the Hibernate transaction with Spring AOP. [...] ",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/spring\/spring-aop-transaction-management-in-hibernate\/trackback\/"};</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="4135" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>