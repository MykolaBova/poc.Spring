<!DOCTYPE html><html lang="en"><title>Spring MVC form handling annotation example</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='Spring MVC &#8211; Neither BindingResult nor plain target object for bean name &#8216;xxx&#8217; available as request attribute.' href='http://www.mkyong.com/spring-mvc/spring-mvc-neither-bindingresult-nor-plain-target-object-for-bean-name-xxx-available-as-request-attribute/' /><link rel='next' title='Spring MVC Tutorial' href='http://www.mkyong.com/tutorials/spring-mvc-tutorials/' /><link rel='shortlink' href='http://www.mkyong.com/?p=6799' /><meta name="keywords" content="annotation,form,spring mvc" /><link rel="canonical" href="http://www.mkyong.com/spring-mvc/spring-mvc-form-handling-annotation-example/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-6799"><header><h1> Spring MVC form handling annotation example</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-08-20T05:44:07+00:00">August 20, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : August 29, 2012 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><p>In this tutorial, we show you how to do form handling by using annotation in Spring MVC web application.</p><div class="note"> <strong>Note</strong><br /> This annotation-based example is converted from the last Spring MVC <a href="http://www.mkyong.com/spring-mvc/spring-mvc-form-handling-example/" target="_blank">form handling XML-based example</a>. So, please compare and spots the different.</div><h4>1. SimpleFormController vs @Controller</h4><p>In XML-based Spring MVC web application, you create a form controller by extending the <code>SimpleFormController</code> class.</p><p>In annotation-based, you can use <em>@Controller</em> instead.</p><p><em>SimpleFormController</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> CustomerController <span style="color: #000000; font-weight: bold;">extends</span> SimpleFormController<span style="color: #009900;">&#123;</span>
      <span style="color: #666666; font-style: italic;">//...</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p><em>Annotation</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">@Controller
@RequestMapping<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;/customer.htm&quot;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> CustomerController<span style="color: #009900;">&#123;</span>
      <span style="color: #666666; font-style: italic;">//...</span>
<span style="color: #009900;">&#125;</span></pre></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>2. formBackingObject() vs RequestMethod.GET</h4><p>In SimpleFormController, you can initialize the command object for binding in the <strong>formBackingObject()</strong> method. In annotation-based, you can do the same by annotated the method name with <strong>@RequestMapping(method = RequestMethod.GET)</strong>.</p><p><em>SimpleFormController</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">        @Override
	<span style="color: #000000; font-weight: bold;">protected</span> <span style="color: #003399;">Object</span> formBackingObject<span style="color: #009900;">&#40;</span>HttpServletRequest request<span style="color: #009900;">&#41;</span>
		<span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">Exception</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		Customer cust <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Customer<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #666666; font-style: italic;">//Make &quot;Spring MVC&quot; as default checked value</span>
		cust.<span style="color: #006633;">setFavFramework</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">String</span> <span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span><span style="color: #009900;">&#123;</span><span style="color: #0000ff;">&quot;Spring MVC&quot;</span><span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">return</span> cust<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span></pre></div></div><p><em>Annotation</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">        @RequestMapping<span style="color: #009900;">&#40;</span>method <span style="color: #339933;">=</span> RequestMethod.<span style="color: #006633;">GET</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> initForm<span style="color: #009900;">&#40;</span>ModelMap model<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
&nbsp;
		Customer cust <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Customer<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #666666; font-style: italic;">//Make &quot;Spring MVC&quot; as default checked value</span>
		cust.<span style="color: #006633;">setFavFramework</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">String</span> <span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span><span style="color: #009900;">&#123;</span><span style="color: #0000ff;">&quot;Spring MVC&quot;</span><span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//command object</span>
		model.<span style="color: #006633;">addAttribute</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;customer&quot;</span>, cust<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//return form view</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #0000ff;">&quot;CustomerForm&quot;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span></pre></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>3. onSubmit() vs RequestMethod.POST</h4><p>In SimpleFormController, the form submission is handle by the <strong>onSubmit()</strong> method. In annotation-based, you can do the same by annotated the method name with <strong>@RequestMapping(method = RequestMethod.POST)</strong>.</p><p><em>SimpleFormController</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">       @Override
	<span style="color: #000000; font-weight: bold;">protected</span> ModelAndView onSubmit<span style="color: #009900;">&#40;</span>HttpServletRequest request,
		HttpServletResponse response, <span style="color: #003399;">Object</span> command, <span style="color: #003399;">BindException</span> errors<span style="color: #009900;">&#41;</span>
		<span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">Exception</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		Customer customer <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>Customer<span style="color: #009900;">&#41;</span>command<span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000000; font-weight: bold;">new</span> ModelAndView<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;CustomerSuccess&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #009900;">&#125;</span></pre></div></div><p><em>Annotation</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">	@RequestMapping<span style="color: #009900;">&#40;</span>method <span style="color: #339933;">=</span> RequestMethod.<span style="color: #006633;">POST</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> processSubmit<span style="color: #009900;">&#40;</span>
		@ModelAttribute<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;customer&quot;</span><span style="color: #009900;">&#41;</span> Customer customer,
		BindingResult result, SessionStatus status<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//clear the command object from the session</span>
		status.<span style="color: #006633;">setComplete</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> 
&nbsp;
		<span style="color: #666666; font-style: italic;">//return form success view</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #0000ff;">&quot;CustomerSuccess&quot;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #009900;">&#125;</span></pre></div></div><h4>4. referenceData() vs @ModelAttribute</h4><p>In SimpleFormController, usually you put the reference data in model via <strong>referenceData()</strong> method, so that the form view can access it. In annotation-based, you can do the same by annotated the method name with <strong>@ModelAttribute</strong>.</p><p><em>SimpleFormController</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">	@Override
	<span style="color: #000000; font-weight: bold;">protected</span> <span style="color: #003399;">Map</span> referenceData<span style="color: #009900;">&#40;</span>HttpServletRequest request<span style="color: #009900;">&#41;</span> <span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">Exception</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #003399;">Map</span> referenceData <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">HashMap</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//Data referencing for web framework checkboxes</span>
		List<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> webFrameworkList <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> ArrayList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Spring MVC&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Struts 1&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Struts 2&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;JSF&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Apache Wicket&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		referenceData.<span style="color: #006633;">put</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;webFrameworkList&quot;</span>, webFrameworkList<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">return</span> referenceData<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span></pre></div></div><p><em>Spring&#8217;s form</em></p><div class="wp_syntax"><div class="code"><pre class="html4strict" style="font-family:monospace;">	<span style="color: #009900;">&lt;form:checkboxes items<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;${webFrameworkList}&quot;</span> path<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;favFramework&quot;</span> <span style="color: #66cc66;">/</span>&gt;</span></pre></div></div><p><strong>Annotation</strong></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">	@ModelAttribute<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;webFrameworkList&quot;</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> List<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> populateWebFrameworkList<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//Data referencing for web framework checkboxes</span>
		List<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> webFrameworkList <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> ArrayList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Spring MVC&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Struts 1&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Struts 2&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;JSF&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Apache Wicket&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">return</span> webFrameworkList<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span></pre></div></div><p><em>Spring&#8217;s form</em></p><div class="wp_syntax"><div class="code"><pre class="html4strict" style="font-family:monospace;">	<span style="color: #009900;">&lt;form:checkboxes items<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;${webFrameworkList}&quot;</span> path<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;favFramework&quot;</span> <span style="color: #66cc66;">/</span>&gt;</span></pre></div></div><h4>5. initBinder() vs @InitBinder</h4><p>In SimpleFormController, you define the binding or register the custom property editor via <strong>initBinder()</strong> method. In annotation-based, you can do the same by annotated the method name with <strong>@InitBinder</strong>.</p><p><em>SimpleFormController</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">    <span style="color: #000000; font-weight: bold;">protected</span> <span style="color: #000066; font-weight: bold;">void</span> initBinder<span style="color: #009900;">&#40;</span>HttpServletRequest request,
		ServletRequestDataBinder binder<span style="color: #009900;">&#41;</span> <span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">Exception</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #003399;">SimpleDateFormat</span> dateFormat <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">SimpleDateFormat</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;yyyy-MM-dd&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		binder.<span style="color: #006633;">registerCustomEditor</span><span style="color: #009900;">&#40;</span><span style="color: #003399;">Date</span>.<span style="color: #000000; font-weight: bold;">class</span>, <span style="color: #000000; font-weight: bold;">new</span> CustomDateEditor<span style="color: #009900;">&#40;</span>dateFormat, <span style="color: #000066; font-weight: bold;">true</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span></pre></div></div><p><em>Annotation</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">	@InitBinder
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> initBinder<span style="color: #009900;">&#40;</span>WebDataBinder binder<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">SimpleDateFormat</span> dateFormat <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">SimpleDateFormat</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;yyyy-MM-dd&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		binder.<span style="color: #006633;">registerCustomEditor</span><span style="color: #009900;">&#40;</span><span style="color: #003399;">Date</span>.<span style="color: #000000; font-weight: bold;">class</span>, <span style="color: #000000; font-weight: bold;">new</span> CustomDateEditor<span style="color: #009900;">&#40;</span>dateFormat, <span style="color: #000066; font-weight: bold;">true</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span></pre></div></div><h3>From Validation</h3><p>In SimpleFormController, you have to register and map the validator class to the controller class via XML bean configuration file, and the validation checking and work flows will be executed automatically.</p><p>In annotation-based, you have to explicitly execute the validator and define the validation flow in the <strong>@Controller</strong> class manually. See the different :</p><p><em>SimpleFormController</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.controller.CustomerController&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
                <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;formView&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;CustomerForm&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;successView&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;CustomerSuccess&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
		<span style="color: #808080; font-style: italic;">&lt;!-- Map a validator --&gt;</span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;validator&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.validator.CustomerValidator&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p><em>Annotation</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">@Controller
@RequestMapping<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;/customer.htm&quot;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> CustomerController<span style="color: #009900;">&#123;</span>
&nbsp;
	CustomerValidator customerValidator<span style="color: #339933;">;</span>
&nbsp;
	@Autowired
	<span style="color: #000000; font-weight: bold;">public</span> CustomerController<span style="color: #009900;">&#40;</span>CustomerValidator customerValidator<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">customerValidator</span> <span style="color: #339933;">=</span> customerValidator<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@RequestMapping<span style="color: #009900;">&#40;</span>method <span style="color: #339933;">=</span> RequestMethod.<span style="color: #006633;">POST</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> processSubmit<span style="color: #009900;">&#40;</span>
		@ModelAttribute<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;customer&quot;</span><span style="color: #009900;">&#41;</span> Customer customer,
		BindingResult result, SessionStatus status<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		customerValidator.<span style="color: #006633;">validate</span><span style="color: #009900;">&#40;</span>customer, result<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>result.<span style="color: #006633;">hasErrors</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
			<span style="color: #666666; font-style: italic;">//if validator failed</span>
			<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #0000ff;">&quot;CustomerForm&quot;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">else</span> <span style="color: #009900;">&#123;</span>
			status.<span style="color: #006633;">setComplete</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
			<span style="color: #666666; font-style: italic;">//form success</span>
			<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #0000ff;">&quot;CustomerSuccess&quot;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>
	<span style="color: #009900;">&#125;</span>
	<span style="color: #666666; font-style: italic;">//...</span></pre></div></div><h3>Full Example</h3><p>See a complete @Controller example.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.customer.controller</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.sql.Date</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.text.SimpleDateFormat</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.ArrayList</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.LinkedHashMap</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.List</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Map</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.beans.factory.annotation.Autowired</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.beans.propertyeditors.CustomDateEditor</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.stereotype.Controller</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.ui.ModelMap</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.validation.BindingResult</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.web.bind.WebDataBinder</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.web.bind.annotation.InitBinder</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.web.bind.annotation.ModelAttribute</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.web.bind.annotation.RequestMapping</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.web.bind.annotation.RequestMethod</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.web.bind.support.SessionStatus</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.customer.model.Customer</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.customer.validator.CustomerValidator</span><span style="color: #339933;">;</span>
&nbsp;
@Controller
@RequestMapping<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;/customer.htm&quot;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> CustomerController<span style="color: #009900;">&#123;</span>
&nbsp;
	CustomerValidator customerValidator<span style="color: #339933;">;</span>
&nbsp;
	@Autowired
	<span style="color: #000000; font-weight: bold;">public</span> CustomerController<span style="color: #009900;">&#40;</span>CustomerValidator customerValidator<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">customerValidator</span> <span style="color: #339933;">=</span> customerValidator<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@RequestMapping<span style="color: #009900;">&#40;</span>method <span style="color: #339933;">=</span> RequestMethod.<span style="color: #006633;">POST</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> processSubmit<span style="color: #009900;">&#40;</span>
		@ModelAttribute<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;customer&quot;</span><span style="color: #009900;">&#41;</span> Customer customer,
		BindingResult result, SessionStatus status<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		customerValidator.<span style="color: #006633;">validate</span><span style="color: #009900;">&#40;</span>customer, result<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>result.<span style="color: #006633;">hasErrors</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
			<span style="color: #666666; font-style: italic;">//if validator failed</span>
			<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #0000ff;">&quot;CustomerForm&quot;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">else</span> <span style="color: #009900;">&#123;</span>
			status.<span style="color: #006633;">setComplete</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
			<span style="color: #666666; font-style: italic;">//form success</span>
			<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #0000ff;">&quot;CustomerSuccess&quot;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@RequestMapping<span style="color: #009900;">&#40;</span>method <span style="color: #339933;">=</span> RequestMethod.<span style="color: #006633;">GET</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> initForm<span style="color: #009900;">&#40;</span>ModelMap model<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
&nbsp;
		Customer cust <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Customer<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #666666; font-style: italic;">//Make &quot;Spring MVC&quot; as default checked value</span>
		cust.<span style="color: #006633;">setFavFramework</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">String</span> <span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span><span style="color: #009900;">&#123;</span><span style="color: #0000ff;">&quot;Spring MVC&quot;</span><span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//Make &quot;Make&quot; as default radio button selected value</span>
		cust.<span style="color: #006633;">setSex</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;M&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//make &quot;Hibernate&quot; as the default java skills selection</span>
		cust.<span style="color: #006633;">setJavaSkills</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Hibernate&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//initilize a hidden value</span>
		cust.<span style="color: #006633;">setSecretValue</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;I'm hidden value&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//command object</span>
		model.<span style="color: #006633;">addAttribute</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;customer&quot;</span>, cust<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//return form view</span>
		<span style="color: #000000; font-weight: bold;">return</span> <span style="color: #0000ff;">&quot;CustomerForm&quot;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
&nbsp;
	@ModelAttribute<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;webFrameworkList&quot;</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> List<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> populateWebFrameworkList<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//Data referencing for web framework checkboxes</span>
		List<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> webFrameworkList <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> ArrayList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Spring MVC&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Struts 1&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Struts 2&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;JSF&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		webFrameworkList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Apache Wicket&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">return</span> webFrameworkList<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@InitBinder
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> initBinder<span style="color: #009900;">&#40;</span>WebDataBinder binder<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">SimpleDateFormat</span> dateFormat <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">SimpleDateFormat</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;yyyy-MM-dd&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		binder.<span style="color: #006633;">registerCustomEditor</span><span style="color: #009900;">&#40;</span><span style="color: #003399;">Date</span>.<span style="color: #000000; font-weight: bold;">class</span>, <span style="color: #000000; font-weight: bold;">new</span> CustomDateEditor<span style="color: #009900;">&#40;</span>dateFormat, <span style="color: #000066; font-weight: bold;">true</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@ModelAttribute<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;numberList&quot;</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> List<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> populateNumberList<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//Data referencing for number radiobuttons</span>
		List<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span> numberList <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> ArrayList<span style="color: #339933;">&lt;</span>String<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		numberList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Number 1&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		numberList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Number 2&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		numberList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Number 3&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		numberList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Number 4&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		numberList.<span style="color: #006633;">add</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Number 5&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">return</span> numberList<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@ModelAttribute<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;javaSkillsList&quot;</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> Map<span style="color: #339933;">&lt;</span><span style="color: #003399;">String</span>,String<span style="color: #339933;">&gt;</span> populateJavaSkillList<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//Data referencing for java skills list box</span>
		Map<span style="color: #339933;">&lt;</span><span style="color: #003399;">String</span>,String<span style="color: #339933;">&gt;</span> javaSkill <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> LinkedHashMap<span style="color: #339933;">&lt;</span><span style="color: #003399;">String</span>,String<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		javaSkill.<span style="color: #006633;">put</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Hibernate&quot;</span>, <span style="color: #0000ff;">&quot;Hibernate&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		javaSkill.<span style="color: #006633;">put</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Spring&quot;</span>, <span style="color: #0000ff;">&quot;Spring&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		javaSkill.<span style="color: #006633;">put</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Apache Wicket&quot;</span>, <span style="color: #0000ff;">&quot;Apache Wicket&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		javaSkill.<span style="color: #006633;">put</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Struts&quot;</span>, <span style="color: #0000ff;">&quot;Struts&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">return</span> javaSkill<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	@ModelAttribute<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;countryList&quot;</span><span style="color: #009900;">&#41;</span>
	<span style="color: #000000; font-weight: bold;">public</span> Map<span style="color: #339933;">&lt;</span><span style="color: #003399;">String</span>,String<span style="color: #339933;">&gt;</span> populateCountryList<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">//Data referencing for java skills list box</span>
		Map<span style="color: #339933;">&lt;</span><span style="color: #003399;">String</span>,String<span style="color: #339933;">&gt;</span> country <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> LinkedHashMap<span style="color: #339933;">&lt;</span><span style="color: #003399;">String</span>,String<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		country.<span style="color: #006633;">put</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;US&quot;</span>, <span style="color: #0000ff;">&quot;United Stated&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		country.<span style="color: #006633;">put</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;CHINA&quot;</span>, <span style="color: #0000ff;">&quot;China&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		country.<span style="color: #006633;">put</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;SG&quot;</span>, <span style="color: #0000ff;">&quot;Singapore&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		country.<span style="color: #006633;">put</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;MY&quot;</span>, <span style="color: #0000ff;">&quot;Malaysia&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">return</span> country<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>To make annotation work, you have to enable the component auto scanning feature in Spring.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:context</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/context&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans </span>
<span style="color: #009900;">	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</span>
<span style="color: #009900;">	http://www.springframework.org/schema/context</span>
<span style="color: #009900;">	http://www.springframework.org/schema/context/spring-context-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;context:component-scan</span> <span style="color: #000066;">base-package</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.controller&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.validator.CustomerValidator&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
 	<span style="color: #808080; font-style: italic;">&lt;!-- Register the Customer.properties --&gt;</span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;messageSource&quot;</span></span>
<span style="color: #009900;">		<span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.context.support.ResourceBundleMessageSource&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;basename&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;com/mkyong/customer/properties/Customer&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;viewResolver&quot;</span></span>
<span style="color: #009900;">	      <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span style="color: #000000; font-weight: bold;">&gt;</span></span>
              <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;prefix&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
                 <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>/WEB-INF/pages/<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
              <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
              <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;suffix&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
                 <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>.jsp<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
              <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
        <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>Download Source Code</h4><div class="download"> Download it &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2010/08/SpringMVC-Form-Handling-Annotation-Example.zip'>SpringMVC-Form-Handling-Annotation-Example.zip</a> (12KB)</div><h4>Reference</h4><ol><li><a href="http://blog.springsource.com/2007/11/14/annotated-web-mvc-controllers-in-spring-25/" target="_blank">Annotated web mvc controllers in spring 2.5</a></li><li><a href="http://www.mkyong.com/spring-mvc/spring-mvc-form-handling-example/" target="_blank">Spring MVC form handling example &#8211; XML version</a></li><li><a href="http://www.mkyong.com/spring-mvc/spring-mvc-hello-world-annotation-example/" target="_blank">Spring MVC hello world annotation example</a></li><li><a href="http://www.mkyong.com/spring-mvc/spring-mvc-multiactioncontroller-annotation-example/" target="_blank">Spring MVC MultiActionController annotation example</a></li></ol><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/annotation/" rel="tag">annotation</a> <a href="http://www.mkyong.com/tag/form/" rel="tag">form</a> <a href="http://www.mkyong.com/tag/spring-mvc/" rel="tag">spring mvc</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/spring-mvc/spring-mvc-hello-world-annotation-example/" title="Spring MVC hello world annotation example">Spring MVC hello world annotation example</a></li><li><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/" title="Spring Security + Hibernate Annotation Example">Spring Security + Hibernate Annotation Example</a></li><li><a href="http://www.mkyong.com/java/how-to-get-http-request-header-in-java/" title="How To Get HTTP Request Header In Java">How To Get HTTP Request Header In Java</a></li><li><a href="http://www.mkyong.com/java/java-custom-annotations-example/" title="Java Custom Annotations Example">Java Custom Annotations Example</a></li><li><a href="http://www.mkyong.com/spring-mvc/spring-mvc-how-to-include-js-or-css-files-in-a-jsp-page/" title="Spring MVC &#8211; How to include JS or CSS files in a JSP page">Spring MVC &#8211; How to include JS or CSS files in a JSP page</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/spring-mvc-tutorials/' title='Spring MVC Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/java-mongodb-tutorials/' title='Java MongoDB Tutorials'><div class='images img-border img-mongodb'></div></a></li><li><a href='/tag/java/' title='Java Tutorials'><div class='images img-border img-java'></div></a></li><li><a href='/tutorials/jsf-2-0-tutorials/' title='JSF 2 Tutorials'><div class='images img-border img-jsf2'></div></a></li><li><a href='/tutorials/maven-tutorials/' title='Maven Tutorials'><div class='images img-border img-maven'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-139379"><div id="dsq-comment-header-139379" class="dsq-comment-header"> <cite id="dsq-cite-139379"> <span id="dsq-author-user-139379">neha agrawal</span> </cite></div><div id="dsq-comment-body-139379" class="dsq-comment-body"><div id="dsq-comment-message-139379" class="dsq-comment-message"><p>Hi Mkyong,<br /> Thanks for your tutorials!! It has helped me a lot to learn Spring. Though I have one doubt in this tutorial. Why are you using custom validator in this example and not jsr-303 validator? Is there any limitation with JSR-303 validator?<br /> Also I don&#8217;t understand the use of @InitBinder in this example as you haven&#8217;t used date field in your model/jsp. I also read somewhere that you register your custom Validator in the Controller using @InitBinder.  But I don&#8217;t see that you are registering it. Can you please clear by doubts. I would really appreciate it. Thanks!!</p><p>Regards,<br /> Neha</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-139451"><div id="dsq-comment-header-139451" class="dsq-comment-header"> <cite id="dsq-cite-139451"> <span id="dsq-author-user-139451">safe</span> </cite></div><div id="dsq-comment-body-139451" class="dsq-comment-body"><div id="dsq-comment-message-139451" class="dsq-comment-message"><p>Hello,</p><p>I asked almost the same question just one week ago (see below) but it seems to be a site left abandoned.</p><p>No reaction. It&#8217;s not cool !</p><p>Sorry.</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-139065"><div id="dsq-comment-header-139065" class="dsq-comment-header"> <cite id="dsq-cite-139065"> <span id="dsq-author-user-139065">safeghost</span> </cite></div><div id="dsq-comment-body-139065" class="dsq-comment-body"><div id="dsq-comment-message-139065" class="dsq-comment-message"><p>Hi,</p><p>Good job, thank you.</p><p>However, i didn&#8217;t understand the role of @InitBinder in this example since you never invoked a random date issue in all your tutorials.</p><p>Can you explain what is the roler of your @InitBinder with date issue and its role in a general manner since i google it and it&#8217;s not yet clear for me.</p><p>Regards.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-137614"><div id="dsq-comment-header-137614" class="dsq-comment-header"> <cite id="dsq-cite-137614"> <span id="dsq-author-user-137614">abhishek</span> </cite></div><div id="dsq-comment-body-137614" class="dsq-comment-body"><div id="dsq-comment-message-137614" class="dsq-comment-message"><p>hello<br /> in apring annotation based form handling how do i identify that the value from the  form will be mapped to  CUstomer pojo</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-135967"><div id="dsq-comment-header-135967" class="dsq-comment-header"> <cite id="dsq-cite-135967"> <span id="dsq-author-user-135967">kumar</span> </cite></div><div id="dsq-comment-body-135967" class="dsq-comment-body"><div id="dsq-comment-message-135967" class="dsq-comment-message"><p>thank u</p><p>i&#8217;m facing problem with including .js and .css file in jsp please help on this</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-138222"><div id="dsq-comment-header-138222" class="dsq-comment-header"> <cite id="dsq-cite-138222"> <span id="dsq-author-user-138222">VP</span> </cite></div><div id="dsq-comment-body-138222" class="dsq-comment-body"><div id="dsq-comment-message-138222" class="dsq-comment-message"><p>Place your resources (static files ) folder inside webapp ( but not inside WEB-INFO).</p><p>For example, if you want to include js/*<br /> Go to your dispatcher servlet xml, add the following code after the line where you&#8217;ve declared the base-package.</p></div></div><ul class="children"><li class="comment even depth-3" id="dsq-comment-138223"><div id="dsq-comment-header-138223" class="dsq-comment-header"> <cite id="dsq-cite-138223"> <span id="dsq-author-user-138223">VP</span> </cite></div><div id="dsq-comment-body-138223" class="dsq-comment-body"><div id="dsq-comment-message-138223" class="dsq-comment-message"><p> ;</p></div></div></li><li class="comment odd alt depth-3" id="dsq-comment-138224"><div id="dsq-comment-header-138224" class="dsq-comment-header"> <cite id="dsq-cite-138224"> <span id="dsq-author-user-138224">VP</span> </cite></div><div id="dsq-comment-body-138224" class="dsq-comment-body"><div id="dsq-comment-message-138224" class="dsq-comment-message"><p>&lt;mvc:resources mapping=&#8221;/js/**&#8221; location=&#8221;/js/&#8221; /&lt;</p></div></div></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="dsq-comment-135604"><div id="dsq-comment-header-135604" class="dsq-comment-header"> <cite id="dsq-cite-135604"> <span id="dsq-author-user-135604">Fateme</span> </cite></div><div id="dsq-comment-body-135604" class="dsq-comment-body"><div id="dsq-comment-message-135604" class="dsq-comment-message"><p>You show differences very good, thanks  for this good article.<br /> good luck</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-135581"><div id="dsq-comment-header-135581" class="dsq-comment-header"> <cite id="dsq-cite-135581"> <span id="dsq-author-user-135581">rajesh</span> </cite></div><div id="dsq-comment-body-135581" class="dsq-comment-body"><div id="dsq-comment-message-135581" class="dsq-comment-message"><p>Dear sir,<br /> i got it with the knowledge given by you with the previous tutorials i rectified that error. thanks for your posts.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-135580"><div id="dsq-comment-header-135580" class="dsq-comment-header"> <cite id="dsq-cite-135580"> <span id="dsq-author-user-135580">rajesh</span> </cite></div><div id="dsq-comment-body-135580" class="dsq-comment-body"><div id="dsq-comment-message-135580" class="dsq-comment-message"><p>Yhanks mkyong. Your tutorials are helped me a lot. For this tutorial(annotation based form validation) i did as you said above but i am getting error as :-</p><p>org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name &#8216;customerForm&#8217; available as request attribute</p><p>root cause</p><p>java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name &#8216;customerForm&#8217; available as request attribute</p><p>note The full stack traces of the exception and its root causes are available in the GlassFish Server Open Source Edition 3.1.2 logs.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-134522"><div id="dsq-comment-header-134522" class="dsq-comment-header"> <cite id="dsq-cite-134522"> <span id="dsq-author-user-134522">Shoaib Chikate</span> </cite></div><div id="dsq-comment-body-134522" class="dsq-comment-body"><div id="dsq-comment-message-134522" class="dsq-comment-message"><p>When i am using the Validator<br /> it is wroking for blank space</p><p>but not for int value&#8230;.as i want the value int value min 4 and max 12</p><p>And i m using @Min and @Max annotation as</p><p>public class Student{</p><p> @Id<br /> @GeneratedValue(strategy=GenerationType.Identity)<br /> private int studentId</p><p> @NotBlank(message=&#8221;Please enter your name&#8221;)<br /> private String studentName;</p><p> @Min(value=&#8221;18&#8243;,message=&#8221;Age cannot be less 18&#8243;)<br /> @Max(value=&#8221;99&#8243;,message=&#8221;Age cannot be greater than 99&#8243;)<br /> private int age;</p><p>//setters and getters</p><p>Validation on studentName is working but not on age<br /> Any specific reason??</p><p>Reply your answer<br /> I will be waiting</p><p>}</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-132372"><div id="dsq-comment-header-132372" class="dsq-comment-header"> <cite id="dsq-cite-132372"> http://www.luxurydreamhermes.com/hermes-new-bags-c-10_28.html <span id="dsq-author-user-132372">replica hermes new</span> </cite></div><div id="dsq-comment-body-132372" class="dsq-comment-body"><div id="dsq-comment-message-132372" class="dsq-comment-message"><p>Hello, your articles here Spring MVC form handling annotation example  to write well, thanks for sharing!</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-131958"><div id="dsq-comment-header-131958" class="dsq-comment-header"> <cite id="dsq-cite-131958"> <span id="dsq-author-user-131958">Thiru</span> </cite></div><div id="dsq-comment-body-131958" class="dsq-comment-body"><div id="dsq-comment-message-131958" class="dsq-comment-message"><p>Hi Mkyong,</p><p>I copied the same code, but i&#8217;m unable to access the MVCForm using this following URL.<br /> Please help me out to resolve this issue.</p><p><a href="http://localhost:8080/SpringMVCForm/customer.htm" rel="nofollow">http://localhost:8080/SpringMVCForm/customer.htm</a></p><p>Thanks &#8216;n&#8217; Regards,<br /> Thirunavukkarasu</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-137338"><div id="dsq-comment-header-137338" class="dsq-comment-header"> <cite id="dsq-cite-137338"> <span id="dsq-author-user-137338">Docaohuynh</span> </cite></div><div id="dsq-comment-body-137338" class="dsq-comment-body"><div id="dsq-comment-message-137338" class="dsq-comment-message"><p>U can see SpringMVC in file pom.xml<br /> and used this link<br /> <a href="http://localhost:8080/SpringMVC/customer.htm" rel="nofollow">http://localhost:8080/SpringMVC/customer.htm</a></p><p>If you want to used this link <a href="http://localhost:8080/SpringMVCForm/customer.htm" rel="nofollow">http://localhost:8080/SpringMVCForm/customer.htm</a><br /> You must change value in SpringMVC to SpringMVCForm</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-131487"><div id="dsq-comment-header-131487" class="dsq-comment-header"> <cite id="dsq-cite-131487"> http://weekdayworker.blogspot.co.uk/ <span id="dsq-author-user-131487">at work</span> </cite></div><div id="dsq-comment-body-131487" class="dsq-comment-body"><div id="dsq-comment-message-131487" class="dsq-comment-message"><p>An intriguing discussion is worth comment. I believe that you ought to publish more about this issue, it may not be a taboo subject but usually people do not discuss these issues. To the next! All the best!!</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.blogosfera.co.uk/2013/04/simple-navigation-through-pages-spring/' rel='external nofollow' class='url'>Simple navigation through pages spring | BlogoSfera</a></p></li></li><li class="post pingback"><p>Pingback: <a href='http://howtovideo.eu/simple-navigation-through-pages-spring/' rel='external nofollow' class='url'>Simple navigation through pages spring - How-To Video</a></p></li></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-124507"><div id="dsq-comment-header-124507" class="dsq-comment-header"> <cite id="dsq-cite-124507"> <span id="dsq-author-user-124507">chandan modi</span> </cite></div><div id="dsq-comment-body-124507" class="dsq-comment-body"><div id="dsq-comment-message-124507" class="dsq-comment-message"><p>you are real hero in java in internet till now i  have read.<br /> really appreciate u a lot , to write such a fantastic example.<br /> thankx a lot mkyong.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-102652"><div id="dsq-comment-header-102652" class="dsq-comment-header"> <cite id="dsq-cite-102652"> <span id="dsq-author-user-102652">kunal</span> </cite></div><div id="dsq-comment-body-102652" class="dsq-comment-body"><div id="dsq-comment-message-102652" class="dsq-comment-message"><p>If u have any good tutorial on spring JPA pls share it</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-102650"><div id="dsq-comment-header-102650" class="dsq-comment-header"> <cite id="dsq-cite-102650"> <span id="dsq-author-user-102650">kunal</span> </cite></div><div id="dsq-comment-body-102650" class="dsq-comment-body"><div id="dsq-comment-message-102650" class="dsq-comment-message"><p>good one&#8230;</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-97356"><div id="dsq-comment-header-97356" class="dsq-comment-header"> <cite id="dsq-cite-97356"> <span id="dsq-author-user-97356">samuel</span> </cite></div><div id="dsq-comment-body-97356" class="dsq-comment-body"><div id="dsq-comment-message-97356" class="dsq-comment-message"><p>Hi Mkyong,</p><p>Could you add tutorials on Spring JPA?</p><p>Thanks,<br /> Samuel</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-85023"><div id="dsq-comment-header-85023" class="dsq-comment-header"> <cite id="dsq-cite-85023"> <span id="dsq-author-user-85023">Tapas</span> </cite></div><div id="dsq-comment-body-85023" class="dsq-comment-body"><div id="dsq-comment-message-85023" class="dsq-comment-message"><p>Thank you very much.It was very useful blog I have came across so far.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-84954"><div id="dsq-comment-header-84954" class="dsq-comment-header"> <cite id="dsq-cite-84954"> <span id="dsq-author-user-84954">Balachandar Chinnaraj</span> </cite></div><div id="dsq-comment-body-84954" class="dsq-comment-body"><div id="dsq-comment-message-84954" class="dsq-comment-message"><p>Hi Mkyong,<br /> Your example /tutorials are very nice and very useful. The only problem i am facing is, Not able identify which one is Spring 3.0 except one /two examples( Top).</p><p>If possible kindly mention the spring version in each and every example, So that it will be more helpful for me and others also.<br /> If you don&#8217;t mind, Can you kindly send me Professional (Wrox publication) pdf for spring3.0 version.<br /> Look forward your positive reply.</p><p>Thanks &amp; Regards,<br /> Balachandar.C<br /> 651 315 2180</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-84356"><div id="dsq-comment-header-84356" class="dsq-comment-header"> <cite id="dsq-cite-84356"> <span id="dsq-author-user-84356">Rady</span> </cite></div><div id="dsq-comment-body-84356" class="dsq-comment-body"><div id="dsq-comment-message-84356" class="dsq-comment-message"><p>Hi</p><p><a href="http://localhost:8080/SpringMVC/customer.htm" rel="nofollow">http://localhost:8080/SpringMVC/customer.htm</a></p><p>It displays nothing , just see something at console:</p><p>15:04:02,937 WARN  [org.springframework.web.servlet.PageNotFound] (http-localhost-127.0.0.1-8080-1) No mapping found for HTTP request with URI [/SpringMVC/customer.htm] in DispatcherServlet with name &#8216;mvc-dispatcher&#8217;</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-84363"><div id="dsq-comment-header-84363" class="dsq-comment-header"> <cite id="dsq-cite-84363"> <span id="dsq-author-user-84363">Rady</span> </cite></div><div id="dsq-comment-body-84363" class="dsq-comment-body"><div id="dsq-comment-message-84363" class="dsq-comment-message"><p>Because of JBoss AS 7.1 doesn&#8217;t work with Spring 2.5.6.<br /> (it should upgrade to Spring 3.0.5.RELEASE).</p><p>Spring 2.5.6 works with JBoss AS 4.2.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-3" id="dsq-comment-84376"><div id="dsq-comment-header-84376" class="dsq-comment-header"> <cite id="dsq-cite-84376"> http://www.mkyong.com <span id="dsq-author-user-84376">mkyong</span> </cite></div><div id="dsq-comment-body-84376" class="dsq-comment-body"><div id="dsq-comment-message-84376" class="dsq-comment-message"><p>Thanks for your extra info.</p></div></div><ul class="children"><li class="comment odd alt depth-4" id="dsq-comment-133263"><div id="dsq-comment-header-133263" class="dsq-comment-header"> <cite id="dsq-cite-133263"> <span id="dsq-author-user-133263">veeru</span> </cite></div><div id="dsq-comment-body-133263" class="dsq-comment-body"><div id="dsq-comment-message-133263" class="dsq-comment-message"><p>hi tell me how to configure springmvc+hibernate(hibernatetemplateclass) for crud operations in spring 3.0</p></div></div></li></ul></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="dsq-comment-83625"><div id="dsq-comment-header-83625" class="dsq-comment-header"> <cite id="dsq-cite-83625"> <span id="dsq-author-user-83625">Spring Guy</span> </cite></div><div id="dsq-comment-body-83625" class="dsq-comment-body"><div id="dsq-comment-message-83625" class="dsq-comment-message"><p><a href="http://static.springsource.org/spring/docs/3.0.0.RC3/reference/html/ch05s07.html" rel="nofollow">http://static.springsource.org/spring/docs/3.0.0.RC3/reference/html/ch05s07.html</a> describes configuring annotation based auto-executing validators.  It also emphasizes the fact that Spring 3 is JSR-303 compliant in and of itself without the need for Hibernate validators.  This is relatively cutting edge so it&#8217;s understandable that the information is not covered here, but it&#8217;s important knowledge.  You no longer have to manually execute validators to do annotation based config if you use the proper mechanisms covered in that spring article.</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.bluerayplus.com/Spring-MVC-form-handling-annotation-example' rel='external nofollow' class='url'>Blue Ray Plus - Latest Technology News</a></p></li></li><li class="post pingback"><p>Pingback: <a href='http://samjdev.wordpress.com/2012/04/07/java-registration-form-with-spring/' rel='external nofollow' class='url'>JAVA: Registration form with Spring &laquo; since 06 &#8211; 28 &#8211; 2011</a></p></li></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-80823"><div id="dsq-comment-header-80823" class="dsq-comment-header"> <cite id="dsq-cite-80823"> <span id="dsq-author-user-80823">Shrileckha</span> </cite></div><div id="dsq-comment-body-80823" class="dsq-comment-body"><div id="dsq-comment-message-80823" class="dsq-comment-message"><p>Thank you. This post is very useful. I understood the user of @ModelAttribute</p><p>-Shrileckha Chaithanya</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-77350"><div id="dsq-comment-header-77350" class="dsq-comment-header"> <cite id="dsq-cite-77350"> <span id="dsq-author-user-77350">John</span> </cite></div><div id="dsq-comment-body-77350" class="dsq-comment-body"><div id="dsq-comment-message-77350" class="dsq-comment-message"><p>Thanks for the article. It really helped me put some the annotation-driven Spring pieces together.</p><p>There seems to be one missing piece for me&#8230; If I have a controller method similar to your processSubmit() method, where HTTP Parameters will be bound to available setters in the data object (Customer in your example), is there a way to explicitly supply that Consumer object as a Spring bean?</p><p>For example, I might want to configure a Consumer object in a Spring XML file (so I can inject values into some members via XML where those members won&#8217;t be populated from HTTP parameters).  Can that be done?</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-73367"><div id="dsq-comment-header-73367" class="dsq-comment-header"> <cite id="dsq-cite-73367"> <span id="dsq-author-user-73367">Maruf Hassan</span> </cite></div><div id="dsq-comment-body-73367" class="dsq-comment-body"><div id="dsq-comment-message-73367" class="dsq-comment-message"><p>Thanks a lot&#8230;You save my life&#8230;</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.imrantariq.com/blog/?p=667' rel='external nofollow' class='url'>Spring MVC 2 vs Spring MVC 3 form handling | Imran Tariq&#039;s Blog</a></p></li></li><li class="comment even thread-even depth-1" id="dsq-comment-69036"><div id="dsq-comment-header-69036" class="dsq-comment-header"> <cite id="dsq-cite-69036"> <span id="dsq-author-user-69036">Everett Zhou</span> </cite></div><div id="dsq-comment-body-69036" class="dsq-comment-body"><div id="dsq-comment-message-69036" class="dsq-comment-message"><p>Thank you for this example. I have one question:</p><p>For Java Skills, you can select multiple ones, but it is String javaSkills in the Customer.java. Would that work, if I select more than one skills?</p><p>Thanks.</p><p>Everett</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-69047"><div id="dsq-comment-header-69047" class="dsq-comment-header"> <cite id="dsq-cite-69047"> http://www.mkyong.com <span id="dsq-author-user-69047">mkyong</span> </cite></div><div id="dsq-comment-body-69047" class="dsq-comment-body"><div id="dsq-comment-message-69047" class="dsq-comment-message"><p>if not mistake, the selected value will be separated by comma. Try download the attachment and play the code.</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-65415"><div id="dsq-comment-header-65415" class="dsq-comment-header"> <cite id="dsq-cite-65415"> http://javaelation.blogspot.com/ <span id="dsq-author-user-65415">Vishnu Agarwal</span> </cite></div><div id="dsq-comment-body-65415" class="dsq-comment-body"><div id="dsq-comment-message-65415" class="dsq-comment-message"><p>This is the good tutorial for freshers to understand the things</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-63965"><div id="dsq-comment-header-63965" class="dsq-comment-header"> <cite id="dsq-cite-63965"> <span id="dsq-author-user-63965">Andrea</span> </cite></div><div id="dsq-comment-body-63965" class="dsq-comment-body"><div id="dsq-comment-message-63965" class="dsq-comment-message"><p>Hi, I like very much your tutorials, but I&#8217;m having troubles setting my IDE to launch the sources.<br /> I use MyEclipse For Spring 9, can you kindly make a step to step import and build guide?<br /> I would love to learn from all your examples, but I can&#8217;t run them because I always miss something (now a library, now a component I don&#8217;t know, for example maven, ecc).<br /> Thanks in advance, keep with your good job!!<br /> Andrea</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-64013"><div id="dsq-comment-header-64013" class="dsq-comment-header"> <cite id="dsq-cite-64013"> http://www.mkyong.com <span id="dsq-author-user-64013">mkyong</span> </cite></div><div id="dsq-comment-body-64013" class="dsq-comment-body"><div id="dsq-comment-message-64013" class="dsq-comment-message"><p>&#8220;<em>I can’t run them because I always miss something</em>&#8220;, this is why people switch to use Maven, it handle all dependencies for you. In this site, almost examples are build with Maven. Refer to Maven tutorial for detail.</p><p>Normally, add dependencies in pom.xml and build it with Maven &#8220;mvn&#8221; command.</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-64194"><div id="dsq-comment-header-64194" class="dsq-comment-header"> <cite id="dsq-cite-64194"> <span id="dsq-author-user-64194">Andrea</span> </cite></div><div id="dsq-comment-body-64194" class="dsq-comment-body"><div id="dsq-comment-message-64194" class="dsq-comment-message"><p>Though maven gave me an error when I clicked on assembly:assembly it created me a war, so even though I don&#8217;t have an eclipse project, I put it anyway in tomcat webapps, it created SpringMVC folder, but I can&#8217;t access it from my browser. There&#8217;s no index.jsp or whatever welcome page&#8230; Can you point me the url to try your project? For now I tried <a href="http://10.0.2.15:8080/SpringMVC/" rel="nofollow">http://10.0.2.15:8080/SpringMVC/</a>, <a href="http://10.0.2.15:8080/SpringMVC/CustomerForm" rel="nofollow">http://10.0.2.15:8080/SpringMVC/CustomerForm</a>, <a href="http://10.0.2.15:8080/SpringMVC/CustomerForm.jsp" rel="nofollow">http://10.0.2.15:8080/SpringMVC/CustomerForm.jsp</a>. I&#8217;m sorry to bother you with this stupid question.<br /> Thanks again for you support.<br /> Andrea</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-4" id="dsq-comment-64203"><div id="dsq-comment-header-64203" class="dsq-comment-header"> <cite id="dsq-cite-64203"> http://www.mkyong.com <span id="dsq-author-user-64203">mkyong</span> </cite></div><div id="dsq-comment-body-64203" class="dsq-comment-body"><div id="dsq-comment-message-64203" class="dsq-comment-message"><p>Take sometime to learn Maven, most projects are switched to Maven for easy maintenance.</p><p>Download attached example, navigate to the project folder where &#8220;pom.xml&#8221; is located. In command prompts, type &#8220;mvn eclipse:eclipse -Dwtpversion=2.0&#8243;, it will download all the dependencies, and convert it to Eclipse project.</p><p>To deploy, just war it with &#8220;mvn war:war&#8221;.</p></div></div></li><li class="comment odd alt depth-4" id="dsq-comment-76897"><div id="dsq-comment-header-76897" class="dsq-comment-header"> <cite id="dsq-cite-76897"> <span id="dsq-author-user-76897">Roman</span> </cite></div><div id="dsq-comment-body-76897" class="dsq-comment-body"><div id="dsq-comment-message-76897" class="dsq-comment-message"><p><a href="http://localhost:8080/SpringMVCForm/customer.htm" rel="nofollow">http://localhost:8080/SpringMVCForm/customer.htm</a></p></div></div></li></ul></li></ul></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-58057"><div id="dsq-comment-header-58057" class="dsq-comment-header"> <cite id="dsq-cite-58057"> <span id="dsq-author-user-58057">Pagio</span> </cite></div><div id="dsq-comment-body-58057" class="dsq-comment-body"><div id="dsq-comment-message-58057" class="dsq-comment-message"><p>Good Work! Very useful. Thanks</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-41074"><div id="dsq-comment-header-41074" class="dsq-comment-header"> <cite id="dsq-cite-41074"> <span id="dsq-author-user-41074">yan</span> </cite></div><div id="dsq-comment-body-41074" class="dsq-comment-body"><div id="dsq-comment-message-41074" class="dsq-comment-message"><p>Very GOOD!!!!!!!!!</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-18980"><div id="dsq-comment-header-18980" class="dsq-comment-header"> <cite id="dsq-cite-18980"> <span id="dsq-author-user-18980">RonX</span> </cite></div><div id="dsq-comment-body-18980" class="dsq-comment-body"><div id="dsq-comment-message-18980" class="dsq-comment-message"><p>Fucked if it works!<br /> SEVERE: Neither BindingResult nor plain target object for bean name &#8216;customer&#8217; available as request attribute<br /> java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name &#8216;customer&#8217; available as request attribute<br /> at org.springframework.web.servlet.support.BindStatus.(BindStatus.java:141)<br /> &#8230;&#8230;&#8230;&#8230;..</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-19573"><div id="dsq-comment-header-19573" class="dsq-comment-header"> <cite id="dsq-cite-19573"> http://www.mkyong.com <span id="dsq-author-user-19573">mkyong</span> </cite></div><div id="dsq-comment-body-19573" class="dsq-comment-body"><div id="dsq-comment-message-19573" class="dsq-comment-message"><p>Did you enabled the component auto scanning in Spring? Look like the customer bean is not found in the Spring container.</p></div></div></li><li class="comment even depth-2" id="dsq-comment-49068"><div id="dsq-comment-header-49068" class="dsq-comment-header"> <cite id="dsq-cite-49068"> <span id="dsq-author-user-49068">rmrfboy</span> </cite></div><div id="dsq-comment-body-49068" class="dsq-comment-body"><div id="dsq-comment-message-49068" class="dsq-comment-message"><p>i think in initForm,</p><p>model.addAttribute(&#8220;customer&#8221;, cust);</p><p>should be</p><p>model.addAttribute(&#8220;customerForm&#8221;, cust);</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-17084"><div id="dsq-comment-header-17084" class="dsq-comment-header"> <cite id="dsq-cite-17084"> http://www.pcornelissen.de <span id="dsq-author-user-17084">Patrick</span> </cite></div><div id="dsq-comment-body-17084" class="dsq-comment-body"><div id="dsq-comment-message-17084" class="dsq-comment-message"><p>Good tutorial, nice to see that you have also provided an annotation based example. It may be worth to mention that you can name the functions as you like, when you&#8217;re using the annotations. This enables you to choose name that are more closely related to the business case you are implementing.<br /> And you can also handle multiple forms with one controller and determine which function should be called by for example path fragments. In Spring 3.0 you can even us variables in the path which are then mapped to function parameters. This has been added for the REST support, but I think it should also work for regular pages.<br /> Anyway, keep up the good work!</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-45687"><div id="dsq-comment-header-45687" class="dsq-comment-header"> <cite id="dsq-cite-45687"> <span id="dsq-author-user-45687">lakshmi</span> </cite></div><div id="dsq-comment-body-45687" class="dsq-comment-body"><div id="dsq-comment-message-45687" class="dsq-comment-message"><p>if u have any spring tutorial , please send me.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-3" id="dsq-comment-45858"><div id="dsq-comment-header-45858" class="dsq-comment-header"> <cite id="dsq-cite-45858"> http://www.mkyong.com <span id="dsq-author-user-45858">mkyong</span> </cite></div><div id="dsq-comment-body-45858" class="dsq-comment-body"><div id="dsq-comment-message-45858" class="dsq-comment-message"><p><a href="http://www.mkyong.com/tutorials/spring-tutorials/" rel="nofollow">http://www.mkyong.com/tutorials/spring-tutorials/</a><br /> <a href="http://www.mkyong.com/tutorials/spring-mvc-tutorials/" rel="nofollow">http://www.mkyong.com/tutorials/spring-mvc-tutorials/</a></p></div></div></li></ul></li></ul></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/spring-mvc/spring-mvc-form-handling-annotation-example/';var disqus_identifier='6799 http://www.mkyong.com/?p=6799';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Spring MVC form handling annotation example";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=6799';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Spring MVC 2 vs Spring MVC 3 form handling | Imran Tariq&#039;s Blog",'author_url':"http:\/\/www.imrantariq.com\/blog\/?p=667",'date':"11\/21\/2011 02:17 PM",'excerpt':"[...] Reference       Posted by Imran Computer, Java, Java, web  Subscribe to RSS feed &hellip;",'type':"pingback"},{'author_name':"JAVA: Registration form with Spring &laquo; since 06 &#8211; 28 &#8211; 2011",'author_url':"http:\/\/samjdev.wordpress.com\/2012\/04\/07\/java-registration-form-with-spring\/",'date':"04\/08\/2012 01:24 AM",'excerpt':"[...] Mkyong Share this:TwitterFacebookLike this:LikeBe the first to like this [...] ",'type':"pingback"},{'author_name':"Blue Ray Plus - Latest Technology News",'author_url':"http:\/\/www.bluerayplus.com\/Spring-MVC-form-handling-annotation-example",'date':"04\/27\/2012 07:22 PM",'excerpt':"Spring MVC form handling annotation example...<br \/><br \/>Thank you for submitting this cool story - Trackback from Blue Ray Plus - Latest &hellip;",'type':"trackback"},{'author_name':"Simple navigation through pages spring - How-To Video",'author_url':"http:\/\/howtovideo.eu\/simple-navigation-through-pages-spring\/",'date':"04\/08\/2013 05:55 PM",'excerpt':"[...] I am a Spring beginner and was recently looking at this tutorial www.mkyong.com\/spring-mvc\/spri&#8230; [...] ",'type':"pingback"},{'author_name':"Simple navigation through pages spring | BlogoSfera",'author_url':"http:\/\/www.blogosfera.co.uk\/2013\/04\/simple-navigation-through-pages-spring\/",'date':"04\/08\/2013 06:02 PM",'excerpt':"[...] I am a Spring beginner and was recently looking at this tutorial http:\/\/www.mkyong.com\/spring-mvc\/spring-mvc-form-handling-annotation-example\/ [...] ",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/spring-mvc\/spring-mvc-form-handling-annotation-example\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="6799" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>