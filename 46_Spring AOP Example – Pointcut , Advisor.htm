<!DOCTYPE html><html lang="en"><title>Spring AOP Example &#8211; Pointcut , Advisor</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='Spring AOP Example &#8211; Advice' href='http://www.mkyong.com/spring/spring-aop-examples-advice/' /><link rel='next' title='Spring bean scopes example' href='http://www.mkyong.com/spring/spring-bean-scopes-examples/' /><link rel='shortlink' href='http://www.mkyong.com/?p=4012' /><meta name="keywords" content="aop,spring" /><link rel="canonical" href="http://www.mkyong.com/spring/spring-aop-example-pointcut-advisor/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-4012"><header><h1> Spring AOP Example &#8211; Pointcut , Advisor</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-03-26T00:55:27+00:00">March 26, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : August 30, 2012 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><p>In last <a href="http://www.mkyong.com/spring/spring-aop-examples-advice/" >Spring AOP advice examples</a>, the entire methods of a class are intercepted automatically. But for most cases, you may just need a way to intercept only one or two methods, this is what &#8216;Pointcut&#8217; come for. It allow you to intercept a method by it&#8217;s method name. In addition, a &#8216;Pointcut&#8217; must be associated with an &#8216;Advisor&#8217;.</p><p>In Spring AOP, comes with three very technical terms &#8211; <strong> Advices, Pointcut , Advisor</strong>, put it in unofficial way&#8230;</p><ul><li>Advice &#8211; Indicate the action to take either before or after the method execution.</li><li>Pointcut &#8211; Indicate which method should be intercept, by method name or regular expression pattern.</li><li>Advisor &#8211; Group &#8216;Advice&#8217; and &#8216;Pointcut&#8217; into a single unit, and pass it to a proxy factory object.</li></ul><p>Review last <a href="http://www.mkyong.com/spring/spring-aop-examples-advice/" >Spring AOP advice examples</a> again.</p><p><em>File : CustomerService.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.customer.services</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> CustomerService
<span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> name<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> url<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setName<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> name<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">name</span> <span style="color: #339933;">=</span> name<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setUrl<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> url<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">url</span> <span style="color: #339933;">=</span> url<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> printName<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Customer name : &quot;</span> <span style="color: #339933;">+</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">name</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> printURL<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Customer website : &quot;</span> <span style="color: #339933;">+</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">url</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> printThrowException<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">IllegalArgumentException</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div><p><em>File : Spring-Customer.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.services.CustomerService&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;name&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;Yong Mook Kim&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;url&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;http://www.mkyong.com&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;hijackAroundMethodBeanAdvice&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.aop.HijackAroundMethod&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerServiceProxy&quot;</span> </span>
<span style="color: #009900;">                <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;target&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;interceptorNames&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
				<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hijackAroundMethodBeanAdvice<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p><em>File : HijackAroundMethod.java</em></p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.aop</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Arrays</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.aopalliance.intercept.MethodInterceptor</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.aopalliance.intercept.MethodInvocation</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> HijackAroundMethod <span style="color: #000000; font-weight: bold;">implements</span> MethodInterceptor <span style="color: #009900;">&#123;</span>
	@Override
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Object</span> invoke<span style="color: #009900;">&#40;</span>MethodInvocation methodInvocation<span style="color: #009900;">&#41;</span> <span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">Throwable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Method name : &quot;</span>
				<span style="color: #339933;">+</span> methodInvocation.<span style="color: #006633;">getMethod</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">getName</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Method arguments : &quot;</span>
				<span style="color: #339933;">+</span> <span style="color: #003399;">Arrays</span>.<span style="color: #006633;">toString</span><span style="color: #009900;">&#40;</span>methodInvocation.<span style="color: #006633;">getArguments</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;HijackAroundMethod : Before method hijacked!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span>
			<span style="color: #003399;">Object</span> result <span style="color: #339933;">=</span> methodInvocation.<span style="color: #006633;">proceed</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
			<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;HijackAroundMethod : Before after hijacked!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
			<span style="color: #000000; font-weight: bold;">return</span> result<span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">catch</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">IllegalArgumentException</span> e<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
			<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;HijackAroundMethod : Throw exception hijacked!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
			<span style="color: #000000; font-weight: bold;">throw</span> e<span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Run it</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.common</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.ApplicationContext</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.support.ClassPathXmlApplicationContext</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.customer.services.CustomerService</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> App <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		ApplicationContext appContext <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> ClassPathXmlApplicationContext<span style="color: #009900;">&#40;</span>
				<span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> <span style="color: #009900;">&#123;</span> <span style="color: #0000ff;">&quot;Spring-Customer.xml&quot;</span> <span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		CustomerService cust <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>CustomerService<span style="color: #009900;">&#41;</span> appContext
				.<span style="color: #006633;">getBean</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;customerServiceProxy&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;*************************&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		cust.<span style="color: #006633;">printName</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;*************************&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		cust.<span style="color: #006633;">printURL</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;*************************&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span>
			cust.<span style="color: #006633;">printThrowException</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">catch</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">Exception</span> e<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #009900;">&#125;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Output</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">*************************</span>
Method name : printName
Method arguments : <span style="color: #7a0874; font-weight: bold;">&#91;</span><span style="color: #7a0874; font-weight: bold;">&#93;</span>
HijackAroundMethod : Before method hijacked<span style="color: #000000; font-weight: bold;">!</span>
Customer name : Yong Mook Kim
HijackAroundMethod : Before after hijacked<span style="color: #000000; font-weight: bold;">!</span>
<span style="color: #000000; font-weight: bold;">*************************</span>
Method name : printURL
Method arguments : <span style="color: #7a0874; font-weight: bold;">&#91;</span><span style="color: #7a0874; font-weight: bold;">&#93;</span>
HijackAroundMethod : Before method hijacked<span style="color: #000000; font-weight: bold;">!</span>
Customer website : http:<span style="color: #000000; font-weight: bold;">//</span>www.mkyong.com
HijackAroundMethod : Before after hijacked<span style="color: #000000; font-weight: bold;">!</span>
<span style="color: #000000; font-weight: bold;">*************************</span>
Method name : printThrowException
Method arguments : <span style="color: #7a0874; font-weight: bold;">&#91;</span><span style="color: #7a0874; font-weight: bold;">&#93;</span>
HijackAroundMethod : Before method hijacked<span style="color: #000000; font-weight: bold;">!</span>
HijackAroundMethod : Throw exception hijacked<span style="color: #000000; font-weight: bold;">!</span></pre></div></div><p>The entire methods of customer service class are intercepted. Later, we show you how to use &#8220;<strong>pointcuts</strong>&#8221; to intercept only <code>printName()</code> method.</p><h4>Pointcuts example</h4><p>You can match the method via following two ways :</p><ol><li>Name match</li><li>Regular repression match</li></ol><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>1. Pointcuts &#8211; Name match example</h4><p>Intercept a printName() method via &#8216;pointcut&#8217; and &#8216;advisor&#8217;. Create a <strong>NameMatchMethodPointcut</strong> pointcut bean, and put the method name you want to intercept in the &#8216;<strong>mappedName</strong>&#8216; property value.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerPointcut&quot;</span></span>
<span style="color: #009900;">        <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.support.NameMatchMethodPointcut&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;mappedName&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;printName&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Create a <strong>DefaultPointcutAdvisor</strong> advisor bean, and associate both advice and pointcut.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerAdvisor&quot;</span></span>
<span style="color: #009900;">		<span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.support.DefaultPointcutAdvisor&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;pointcut&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;customerPointcut&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;advice&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;hijackAroundMethodBeanAdvice&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Replace the proxy&#8217;s &#8216;interceptorNames&#8217; to &#8216;customerAdvisor&#8217; (it was &#8216;hijackAroundMethodBeanAdvice&#8217;).</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerServiceProxy&quot;</span></span>
<span style="color: #009900;">		<span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;target&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;interceptorNames&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
				<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>customerAdvisor<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Full bean configuration file</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.services.CustomerService&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;name&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;Yong Mook Kim&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;url&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;http://www.mkyong.com&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;hijackAroundMethodBeanAdvice&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.aop.HijackAroundMethod&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerServiceProxy&quot;</span> </span>
<span style="color: #009900;">                <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;target&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;interceptorNames&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
				<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>customerAdvisor<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerPointcut&quot;</span> </span>
<span style="color: #009900;">                <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.support.NameMatchMethodPointcut&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;mappedName&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;printName&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerAdvisor&quot;</span> </span>
<span style="color: #009900;">                 <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.support.DefaultPointcutAdvisor&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;pointcut&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;customerPointcut&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;advice&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;hijackAroundMethodBeanAdvice&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Run it again, output</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">*************************</span>
Method name : printName
Method arguments : <span style="color: #7a0874; font-weight: bold;">&#91;</span><span style="color: #7a0874; font-weight: bold;">&#93;</span>
HijackAroundMethod : Before method hijacked<span style="color: #000000; font-weight: bold;">!</span>
Customer name : Yong Mook Kim
HijackAroundMethod : Before after hijacked<span style="color: #000000; font-weight: bold;">!</span>
<span style="color: #000000; font-weight: bold;">*************************</span>
Customer website : http:<span style="color: #000000; font-weight: bold;">//</span>www.mkyong.com
<span style="color: #000000; font-weight: bold;">*************************</span></pre></div></div><p>Now, you only intercept the printName() method.</p><div class="note"> <strong>PointcutAdvisor</strong><br /> Spring comes with <strong>PointcutAdvisor</strong> class to save your work to declare advisor and pointcut into different beans, you can use <strong>NameMatchMethodPointcutAdvisor</strong> to combine both into a single bean.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerAdvisor&quot;</span></span>
<span style="color: #009900;">		<span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.support.NameMatchMethodPointcutAdvisor&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;mappedName&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;printName&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;advice&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;hijackAroundMethodBeanAdvice&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>2. Pointcut &#8211; Regular expression example</h4><p>You can also match the method&#8217;s name by using regular expression pointcut &#8211; <strong>RegexpMethodPointcutAdvisor</strong>.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerAdvisor&quot;</span></span>
<span style="color: #009900;">		<span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.support.RegexpMethodPointcutAdvisor&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;patterns&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
				<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>.*URL.*<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;advice&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;hijackAroundMethodBeanAdvice&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Now, it intercepts the method which has words &#8216;URL&#8217; within the method name. In practice, you can use it to manage DAO layer, where you can declare &#8220;<strong>.*DAO.*</strong>&#8221; to intercept all your DAO classes to support transaction.</p><h4>Download Source Code</h4><div class="download"> Download it &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2010/03/Spring-AOP-Pointcuts-Advisor-Example.zip'>Spring-AOP-Pointcuts-Advisor-Example.zip</a></div><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/aop/" rel="tag">aop</a> <a href="http://www.mkyong.com/tag/spring/" rel="tag">spring</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/spring3/spring-aop-aspectj-in-xml-configuration-example/" title="Spring AOP + AspectJ in XML configuration example">Spring AOP + AspectJ in XML configuration example</a></li><li><a href="http://www.mkyong.com/spring3/spring-aop-aspectj-annotation-example/" title="Spring AOP + AspectJ annotation example">Spring AOP + AspectJ annotation example</a></li><li><a href="http://www.mkyong.com/spring/spring-aop-transaction-management-in-hibernate/" title="Spring AOP transaction management in Hibernate">Spring AOP transaction management in Hibernate</a></li><li><a href="http://www.mkyong.com/spring/spring-aop-examples-advice/" title="Spring AOP Example &#8211; Advice">Spring AOP Example &#8211; Advice</a></li><li><a href="http://www.mkyong.com/spring/spring-aop-error-cannot-proxy-target-class-because-cglib2-is-not-available/" title="Spring AOP Error : Cannot proxy target class because CGLIB2 is not available">Spring AOP Error : Cannot proxy target class because CGLIB2 is not available</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/spring-tutorials/' title='Spring Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/jax-rs-tutorial/' title='JAX-RS Tutorials'><div class='images img-border img-jaxrs'></div></a></li><li><a href='/tutorials/jsf-2-0-tutorials/' title='JSF 2 Tutorials'><div class='images img-border img-jsf2'></div></a></li><li><a href='/tutorials/jdbc-tutorials/' title='JDBC Tutorials'><div class='images img-border img-jdbc'></div></a></li><li><a href='/tutorials/wicket-tutorials/' title='Apache Wicket Tutorials'><div class='images img-border img-wicket'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-139029"><div id="dsq-comment-header-139029" class="dsq-comment-header"> <cite id="dsq-cite-139029"> <span id="dsq-author-user-139029">JPJR</span> </cite></div><div id="dsq-comment-body-139029" class="dsq-comment-body"><div id="dsq-comment-message-139029" class="dsq-comment-message"><p>nice job &#8211; thank you.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-136658"><div id="dsq-comment-header-136658" class="dsq-comment-header"> <cite id="dsq-cite-136658"> <span id="dsq-author-user-136658">reetesh</span> </cite></div><div id="dsq-comment-body-136658" class="dsq-comment-body"><div id="dsq-comment-message-136658" class="dsq-comment-message"><p>Awesome..very good explaination</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-133229"><div id="dsq-comment-header-133229" class="dsq-comment-header"> <cite id="dsq-cite-133229"> <span id="dsq-author-user-133229">Brad</span> </cite></div><div id="dsq-comment-body-133229" class="dsq-comment-body"><div id="dsq-comment-message-133229" class="dsq-comment-message"><p>Thanks for the valuable tutorial! Does this style of Spring AoP framework support the interception of calls with specific parameters and return values? For example, if printName was declared like:</p><p> public String printName(String param1, String param2){}</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-133230"><div id="dsq-comment-header-133230" class="dsq-comment-header"> <cite id="dsq-cite-133230"> <span id="dsq-author-user-133230">Brad</span> </cite></div><div id="dsq-comment-body-133230" class="dsq-comment-body"><div id="dsq-comment-message-133230" class="dsq-comment-message"><p>And more importantly for my circumstances, could we intercept a class that was not a bean? For example, if the CustomerService class was a non-bean java class, could we reference and intercept one of its methods?</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-133202"><div id="dsq-comment-header-133202" class="dsq-comment-header"> <cite id="dsq-cite-133202"> <span id="dsq-author-user-133202">Ali</span> </cite></div><div id="dsq-comment-body-133202" class="dsq-comment-body"><div id="dsq-comment-message-133202" class="dsq-comment-message"><p>Excelent tutorial,</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-132240"><div id="dsq-comment-header-132240" class="dsq-comment-header"> <cite id="dsq-cite-132240"> <span id="dsq-author-user-132240">sridhar</span> </cite></div><div id="dsq-comment-body-132240" class="dsq-comment-body"><div id="dsq-comment-message-132240" class="dsq-comment-message"><p>Very nice and informative&#8230; its helping me in many situation</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-132163"><div id="dsq-comment-header-132163" class="dsq-comment-header"> <cite id="dsq-cite-132163"> <span id="dsq-author-user-132163">Ayodeji</span> </cite></div><div id="dsq-comment-body-132163" class="dsq-comment-body"><div id="dsq-comment-message-132163" class="dsq-comment-message"><p>Thanks for your continuous help mykong</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-131251"><div id="dsq-comment-header-131251" class="dsq-comment-header"> <cite id="dsq-cite-131251"> <span id="dsq-author-user-131251">SivaKarthik</span> </cite></div><div id="dsq-comment-body-131251" class="dsq-comment-body"><div id="dsq-comment-message-131251" class="dsq-comment-message"><p>was tried a lot to unederstand aop concepts.. read few articles nd books.. but not got clear idea abt whats the purpose of aop..<br /> after reading this tutorial, now i got clear idea.. its clearly explained&#8230; thank you.</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-128013"><div id="dsq-comment-header-128013" class="dsq-comment-header"> <cite id="dsq-cite-128013"> <span id="dsq-author-user-128013">Divya</span> </cite></div><div id="dsq-comment-body-128013" class="dsq-comment-body"><div id="dsq-comment-message-128013" class="dsq-comment-message"><p>Its very clear&#8230;</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-127314"><div id="dsq-comment-header-127314" class="dsq-comment-header"> <cite id="dsq-cite-127314"> <span id="dsq-author-user-127314">var</span> </cite></div><div id="dsq-comment-body-127314" class="dsq-comment-body"><div id="dsq-comment-message-127314" class="dsq-comment-message"><p>awesome nice explanation :)</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-127098"><div id="dsq-comment-header-127098" class="dsq-comment-header"> <cite id="dsq-cite-127098"> <span id="dsq-author-user-127098">Basavaraj</span> </cite></div><div id="dsq-comment-body-127098" class="dsq-comment-body"><div id="dsq-comment-message-127098" class="dsq-comment-message"><p>Good article..!</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-127097"><div id="dsq-comment-header-127097" class="dsq-comment-header"> <cite id="dsq-cite-127097"> <span id="dsq-author-user-127097">Basavaraj</span> </cite></div><div id="dsq-comment-body-127097" class="dsq-comment-body"><div id="dsq-comment-message-127097" class="dsq-comment-message"><p>Good article..!Easy to grasp the basics..!</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-127054"><div id="dsq-comment-header-127054" class="dsq-comment-header"> <cite id="dsq-cite-127054"> <span id="dsq-author-user-127054">Prashant Bhagwani</span> </cite></div><div id="dsq-comment-body-127054" class="dsq-comment-body"><div id="dsq-comment-message-127054" class="dsq-comment-message"><p>Great Work !!</p><p>Thanks alot</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-127041"><div id="dsq-comment-header-127041" class="dsq-comment-header"> <cite id="dsq-cite-127041"> <span id="dsq-author-user-127041">subash961</span> </cite></div><div id="dsq-comment-body-127041" class="dsq-comment-body"><div id="dsq-comment-message-127041" class="dsq-comment-message"><p>really good tutorial..</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://tsangsaicheong.wordpress.com/2012/11/29/spring-aop/' rel='external nofollow' class='url'>Spring aop | fatkwong14&#039;s Blog</a></p></li></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-124334"><div id="dsq-comment-header-124334" class="dsq-comment-header"> <cite id="dsq-cite-124334"> <span id="dsq-author-user-124334">Gopal Nayk</span> </cite></div><div id="dsq-comment-body-124334" class="dsq-comment-body"><div id="dsq-comment-message-124334" class="dsq-comment-message"><p>find  solution to this sight.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-122996"><div id="dsq-comment-header-122996" class="dsq-comment-header"> <cite id="dsq-cite-122996"> <span id="dsq-author-user-122996">lakshmi</span> </cite></div><div id="dsq-comment-body-122996" class="dsq-comment-body"><div id="dsq-comment-message-122996" class="dsq-comment-message"><p>Awesome. Your explanation is very good and easy to understand. Thanks for it.</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-122736"><div id="dsq-comment-header-122736" class="dsq-comment-header"> <cite id="dsq-cite-122736"> http://mkyong <span id="dsq-author-user-122736">venkat</span> </cite></div><div id="dsq-comment-body-122736" class="dsq-comment-body"><div id="dsq-comment-message-122736" class="dsq-comment-message"><p>cau you please explain callback methods in hibernate.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-104075"><div id="dsq-comment-header-104075" class="dsq-comment-header"> <cite id="dsq-cite-104075"> <span id="dsq-author-user-104075">shankar</span> </cite></div><div id="dsq-comment-body-104075" class="dsq-comment-body"><div id="dsq-comment-message-104075" class="dsq-comment-message"><p>great tutorial&#8230;now I can understand spring aop.</p><p> thanks a lot !!</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-85796"><div id="dsq-comment-header-85796" class="dsq-comment-header"> <cite id="dsq-cite-85796"> <span id="dsq-author-user-85796">Wojtek</span> </cite></div><div id="dsq-comment-body-85796" class="dsq-comment-body"><div id="dsq-comment-message-85796" class="dsq-comment-message"><p>&#8220;put it in unofficial way&#8221; &#8211; I wish everybody writing tutorials concentrated on simplicity, even at the cost of putting something in an unofficial way. Those one-line explanations of these terms really appeal to me :)</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor odd alt depth-2" id="dsq-comment-85850"><div id="dsq-comment-header-85850" class="dsq-comment-header"> <cite id="dsq-cite-85850"> http://www.mkyong.com <span id="dsq-author-user-85850">mkyong</span> </cite></div><div id="dsq-comment-body-85850" class="dsq-comment-body"><div id="dsq-comment-message-85850" class="dsq-comment-message"><p>Thanks for your comment, agreed. Most tutorials are too technical to understand.</p></div></div><ul class="children"><li class="comment even depth-3" id="dsq-comment-124333"><div id="dsq-comment-header-124333" class="dsq-comment-header"> <cite id="dsq-cite-124333"> <span id="dsq-author-user-124333">Gopal Nayk</span> </cite></div><div id="dsq-comment-body-124333" class="dsq-comment-body"><div id="dsq-comment-message-124333" class="dsq-comment-message"><p>Your explanation is very good and easy to understand I facing many problem in spring.</p></div></div></li><li class="comment odd alt depth-3" id="dsq-comment-125965"><div id="dsq-comment-header-125965" class="dsq-comment-header"> <cite id="dsq-cite-125965"> <span id="dsq-author-user-125965">Fahim</span> </cite></div><div id="dsq-comment-body-125965" class="dsq-comment-body"><div id="dsq-comment-message-125965" class="dsq-comment-message"><p>Simply awesome explanation. I read a whole book chapter on the same subject, but this one page explanation  is far more better than that.</p></div></div></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="dsq-comment-85751"><div id="dsq-comment-header-85751" class="dsq-comment-header"> <cite id="dsq-cite-85751"> <span id="dsq-author-user-85751">Ajay</span> </cite></div><div id="dsq-comment-body-85751" class="dsq-comment-body"><div id="dsq-comment-message-85751" class="dsq-comment-message"><p>Very helpfull</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-84459"><div id="dsq-comment-header-84459" class="dsq-comment-header"> <cite id="dsq-cite-84459"> <span id="dsq-author-user-84459">Beniton</span> </cite></div><div id="dsq-comment-body-84459" class="dsq-comment-body"><div id="dsq-comment-message-84459" class="dsq-comment-message"><p>Super</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-81162"><div id="dsq-comment-header-81162" class="dsq-comment-header"> <cite id="dsq-cite-81162"> <span id="dsq-author-user-81162">Prashant</span> </cite></div><div id="dsq-comment-body-81162" class="dsq-comment-body"><div id="dsq-comment-message-81162" class="dsq-comment-message"><p>Great work! awesome</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-72019"><div id="dsq-comment-header-72019" class="dsq-comment-header"> <cite id="dsq-cite-72019"> <span id="dsq-author-user-72019">tumit</span> </cite></div><div id="dsq-comment-body-72019" class="dsq-comment-body"><div id="dsq-comment-message-72019" class="dsq-comment-message"><p>Very nice tutorial</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/spring/spring-auto-proxy-creator-example/' rel='external nofollow' class='url'>Spring Auto proxy creator example</a></p></li></li><li class="comment even thread-even depth-1" id="dsq-comment-47297"><div id="dsq-comment-header-47297" class="dsq-comment-header"> <cite id="dsq-cite-47297"> <span id="dsq-author-user-47297">Nirm</span> </cite></div><div id="dsq-comment-body-47297" class="dsq-comment-body"><div id="dsq-comment-message-47297" class="dsq-comment-message"><p>Thanks This is wonderful examples.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-41683"><div id="dsq-comment-header-41683" class="dsq-comment-header"> <cite id="dsq-cite-41683"> <span id="dsq-author-user-41683">kusum</span> </cite></div><div id="dsq-comment-body-41683" class="dsq-comment-body"><div id="dsq-comment-message-41683" class="dsq-comment-message"><p>really a nice tutorial<br /> i was not able to find a good spring tutorial, then found this</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-27588"><div id="dsq-comment-header-27588" class="dsq-comment-header"> <cite id="dsq-cite-27588"> <span id="dsq-author-user-27588">vijaya</span> </cite></div><div id="dsq-comment-body-27588" class="dsq-comment-body"><div id="dsq-comment-message-27588" class="dsq-comment-message"><p>Could you please provide an example for exception handling in SPring by using AOP</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-27587"><div id="dsq-comment-header-27587" class="dsq-comment-header"> <cite id="dsq-cite-27587"> <span id="dsq-author-user-27587">vijaya</span> </cite></div><div id="dsq-comment-body-27587" class="dsq-comment-body"><div id="dsq-comment-message-27587" class="dsq-comment-message"><p>Nice tutorial.<br /> Need good tutorial for exception handling</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-21052"><div id="dsq-comment-header-21052" class="dsq-comment-header"> <cite id="dsq-cite-21052"> <span id="dsq-author-user-21052">Vijayaraja</span> </cite></div><div id="dsq-comment-body-21052" class="dsq-comment-body"><div id="dsq-comment-message-21052" class="dsq-comment-message"><p>Great Tutorial about Spring AOP.</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/tutorials/spring-tutorials/' rel='external nofollow' class='url'>Spring Tutorials</a></p></li></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/spring/spring-aop-examples-advice/' rel='external nofollow' class='url'>Spring AOP Example &#8211; Advice</a></p></li></li><li class="post pingback"><p>Pingback: <a href='http://adsense.uscocom.com/general/google-ppc-content-or-search' rel='external nofollow' class='url'>Google PPC: Content or Search? | Adsense</a></p></li></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/spring/spring-aop-example-pointcut-advisor/';var disqus_identifier='4012 http://www.mkyong.com/?p=4012';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Spring AOP Example &#8211; Pointcut , Advisor";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=4012';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Google PPC: Content or Search? | Adsense",'author_url':"http:\/\/adsense.uscocom.com\/general\/google-ppc-content-or-search",'date':"03\/26\/2010 04:18 PM",'excerpt':"[...] Spring AOP Example – Pointcut , Advisor | Spring [...] ",'type':"pingback"},{'author_name':"Spring AOP Example &#8211; Advice",'author_url':"http:\/\/www.mkyong.com\/spring\/spring-aop-examples-advice\/",'date':"07\/17\/2010 01:25 PM",'excerpt':"[...] service class are intercepted (advice) automatically. But for most cases, you may need to use Pointcut and Advisor to &hellip;",'type':"pingback"},{'author_name':"Spring Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/spring-tutorials\/",'date':"08\/20\/2010 02:22 PM",'excerpt':"[...] Spring AOP Example – Pointcut , Advisor Examples and explanations about different types of Spring&#8217;s Pointcut and Advisor. [...] ",'type':"pingback"},{'author_name':"Spring Auto proxy creator example",'author_url':"http:\/\/www.mkyong.com\/spring\/spring-auto-proxy-creator-example\/",'date':"06\/20\/2011 09:39 PM",'excerpt':"[...] 28, 2010 , Updated: June 20, 2011 , Author: mkyongprintIn last Spring AOP examples &#8211; advice, pointcut and advisor, &hellip;",'type':"pingback"},{'author_name':"Spring aop | fatkwong14&#039;s Blog",'author_url':"http:\/\/tsangsaicheong.wordpress.com\/2012\/11\/29\/spring-aop\/",'date':"12\/18\/2012 05:49 PM",'excerpt':"[...] http:\/\/www.mkyong.com\/spring\/spring-aop-example-pointcut-advisor\/ [...] ",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/spring\/spring-aop-example-pointcut-advisor\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="4012" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>