<!DOCTYPE html><html lang="en"><title>Spring AOP Example &#8211; Advice</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='Spring Filter components in auto scanning' href='http://www.mkyong.com/spring/spring-filtering-components-in-auto-scanning/' /><link rel='next' title='Spring AOP Example &#8211; Pointcut , Advisor' href='http://www.mkyong.com/spring/spring-aop-example-pointcut-advisor/' /><link rel='shortlink' href='http://www.mkyong.com/?p=3994' /><meta name="keywords" content="aop,spring" /><link rel="canonical" href="http://www.mkyong.com/spring/spring-aop-examples-advice/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-3994"><header><h1> Spring AOP Example &#8211; Advice</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-03-25T09:13:54+00:00">March 25, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : August 30, 2012 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><div class="note"> <strong>Spring AOP + AspectJ</strong><br /> Using AspectJ is more flexible and powerful, please refer to this tutorial &#8211; <a href="http://www.mkyong.com/spring3/spring-aop-aspectj-annotation-example/">Using AspectJ annotation in Spring AOP</a>.</div><p>Spring AOP (<strong>Aspect-oriented programming</strong>) framework is used to modularize cross-cutting concerns in aspects. Put it simple, it&#8217;s just an interceptor to intercept some processes, for example, when a method is execute, Spring AOP can hijack the executing method, and add extra functionality before or after the method execution.</p><p>In Spring AOP, 4 type of advices are supported :</p><ul><li>Before advice &#8211; Run before the method execution</li><li>After returning advice &#8211; Run after the method returns a result</li><li>After throwing advice &#8211; Run after the method throws an exception</li><li>Around advice &#8211;  Run around the method execution, combine all three advices above.</li></ul><p>Following example show you how Spring AOP advice works.</p><h4>Simple Spring example</h4><p>Create a simple customer service class with few print methods for demonstration later.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.customer.services</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> CustomerService <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> name<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #003399;">String</span> url<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setName<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> name<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">name</span> <span style="color: #339933;">=</span> name<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setUrl<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> url<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">url</span> <span style="color: #339933;">=</span> url<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> printName<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Customer name : &quot;</span> <span style="color: #339933;">+</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">name</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> printURL<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Customer website : &quot;</span> <span style="color: #339933;">+</span> <span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">url</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> printThrowException<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">IllegalArgumentException</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div><p>File : Spring-Customer.xml &#8211; A bean configuration file</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.services.CustomerService&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;name&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;Yong Mook Kim&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;url&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;http://www.mkyong.com&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Run it</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.common</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.ApplicationContext</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.support.ClassPathXmlApplicationContext</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.customer.services.CustomerService</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> App <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		ApplicationContext appContext <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> ClassPathXmlApplicationContext<span style="color: #009900;">&#40;</span>
				<span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> <span style="color: #009900;">&#123;</span> <span style="color: #0000ff;">&quot;Spring-Customer.xml&quot;</span> <span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		CustomerService cust <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>CustomerService<span style="color: #009900;">&#41;</span> appContext.<span style="color: #006633;">getBean</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;customerService&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;*************************&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		cust.<span style="color: #006633;">printName</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;*************************&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		cust.<span style="color: #006633;">printURL</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;*************************&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span>
			cust.<span style="color: #006633;">printThrowException</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">catch</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">Exception</span> e<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Output</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">*************************</span>
Customer name : Yong Mook Kim
<span style="color: #000000; font-weight: bold;">*************************</span>
Customer website : http:<span style="color: #000000; font-weight: bold;">//</span>www.mkyong.com
<span style="color: #000000; font-weight: bold;">*************************</span></pre></div></div><p>A simple Spring project to DI a bean and output some Strings.</p><h3>Spring AOP Advices</h3><p>Now, attach Spring AOP advices to above customer service.</p><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>1. Before advice</h4><p>It will execute before the method execution. Create a class which implements MethodBeforeAdvice interface.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.aop</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.lang.reflect.Method</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.aop.MethodBeforeAdvice</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> HijackBeforeMethod <span style="color: #000000; font-weight: bold;">implements</span> MethodBeforeAdvice
<span style="color: #009900;">&#123;</span>
	@Override
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> before<span style="color: #009900;">&#40;</span><span style="color: #003399;">Method</span> method, <span style="color: #003399;">Object</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args, <span style="color: #003399;">Object</span> target<span style="color: #009900;">&#41;</span>
		<span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">Throwable</span> <span style="color: #009900;">&#123;</span>
	        <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;HijackBeforeMethod : Before method hijacked!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>In bean configuration file (Spring-Customer.xml), create a bean for <strong>HijackBeforeMethod</strong> class , and a new proxy object named &#8216;<strong>customerServiceProxy</strong>&#8216;.</p><ul><li>&#8216;target&#8217; &#8211; Define which bean you want to hijack.</li><li>&#8216;interceptorNames&#8217; &#8211; Define which class (advice) you want to apply on this proxy /target object.</li></ul><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.services.CustomerService&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;name&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;Yong Mook Kim&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;url&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;http://www.mkyong.com&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;hijackBeforeMethodBean&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.aop.HijackBeforeMethod&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerServiceProxy&quot;</span> </span>
<span style="color: #009900;">                 <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;target&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;interceptorNames&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
				<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hijackBeforeMethodBean<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><div class="note"> <strong>Note</strong><br /> To use Spring proxy, you need to add CGLIB2 library. Add below in Maven pom.xml file.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>cglib<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>cglib<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>2.2.2<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div></div><p>Run it again, now you get the new <strong>customerServiceProxy</strong >bean instead of the original <strong>customerService</strong> bean.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.common</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.ApplicationContext</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.support.ClassPathXmlApplicationContext</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.customer.services.CustomerService</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> App <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		ApplicationContext appContext <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> ClassPathXmlApplicationContext<span style="color: #009900;">&#40;</span>
				<span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> <span style="color: #009900;">&#123;</span> <span style="color: #0000ff;">&quot;Spring-Customer.xml&quot;</span> <span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		CustomerService cust <span style="color: #339933;">=</span> 
                                <span style="color: #009900;">&#40;</span>CustomerService<span style="color: #009900;">&#41;</span> appContext.<span style="color: #006633;">getBean</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;customerServiceProxy&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;*************************&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		cust.<span style="color: #006633;">printName</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;*************************&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		cust.<span style="color: #006633;">printURL</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;*************************&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span>
			cust.<span style="color: #006633;">printThrowException</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">catch</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">Exception</span> e<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Output</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">*************************</span>
HijackBeforeMethod : Before method hijacked<span style="color: #000000; font-weight: bold;">!</span>
Customer name : Yong Mook Kim
<span style="color: #000000; font-weight: bold;">*************************</span>
HijackBeforeMethod : Before method hijacked<span style="color: #000000; font-weight: bold;">!</span>
Customer website : http:<span style="color: #000000; font-weight: bold;">//</span>www.mkyong.com
<span style="color: #000000; font-weight: bold;">*************************</span>
HijackBeforeMethod : Before method hijacked<span style="color: #000000; font-weight: bold;">!</span></pre></div></div><p>It will run the <strong>HijackBeforeMethod&#8217;s before()</strong> method, before every customerService&#8217;s methods are execute.</p><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>2. After returning advice</h4><p>It will execute after the method is returned a result. Create a class which implements <strong>AfterReturningAdvice</strong> interface.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.aop</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.lang.reflect.Method</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.aop.AfterReturningAdvice</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> HijackAfterMethod <span style="color: #000000; font-weight: bold;">implements</span> AfterReturningAdvice
<span style="color: #009900;">&#123;</span>
	@Override
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> afterReturning<span style="color: #009900;">&#40;</span><span style="color: #003399;">Object</span> returnValue, <span style="color: #003399;">Method</span> method,
		<span style="color: #003399;">Object</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args, <span style="color: #003399;">Object</span> target<span style="color: #009900;">&#41;</span> <span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">Throwable</span> <span style="color: #009900;">&#123;</span>
	        <span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;HijackAfterMethod : After method hijacked!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Bean configuration file</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.services.CustomerService&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;name&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;Yong Mook Kim&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;url&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;http://www.mkyong.com&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;hijackAfterMethodBean&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.aop.HijackAfterMethod&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerServiceProxy&quot;</span> </span>
<span style="color: #009900;">                <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;target&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;interceptorNames&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
				<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hijackAfterMethodBean<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Run it again, Output</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">*************************</span>
Customer name : Yong Mook Kim
HijackAfterMethod : After method hijacked<span style="color: #000000; font-weight: bold;">!</span>
<span style="color: #000000; font-weight: bold;">*************************</span>
Customer website : http:<span style="color: #000000; font-weight: bold;">//</span>www.mkyong.com
HijackAfterMethod : After method hijacked<span style="color: #000000; font-weight: bold;">!</span>
<span style="color: #000000; font-weight: bold;">*************************</span></pre></div></div><p>It will run the <strong>HijackAfterMethod&#8217;s afterReturning()</strong> method, after every customerService&#8217;s methods that are returned result.</p><h4>3. After throwing advice</h4><p>It will execute after the method throws an exception. Create a class which implements ThrowsAdvice interface, and create a <strong>afterThrowing</strong> method to hijack the <strong>IllegalArgumentException</strong> exception.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.aop</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.aop.ThrowsAdvice</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> HijackThrowException <span style="color: #000000; font-weight: bold;">implements</span> ThrowsAdvice <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> afterThrowing<span style="color: #009900;">&#40;</span><span style="color: #003399;">IllegalArgumentException</span> e<span style="color: #009900;">&#41;</span> <span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">Throwable</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;HijackThrowException : Throw exception hijacked!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Bean configuration file</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.services.CustomerService&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;name&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;Yong Mook Kim&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;url&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;http://www.mkyong.com&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;hijackThrowExceptionBean&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.aop.HijackThrowException&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerServiceProxy&quot;</span> </span>
<span style="color: #009900;">                 <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;target&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;interceptorNames&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
				<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hijackThrowExceptionBean<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Run it again, output</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">*************************</span>
Customer name : Yong Mook Kim
<span style="color: #000000; font-weight: bold;">*************************</span>
Customer website : http:<span style="color: #000000; font-weight: bold;">//</span>www.mkyong.com
<span style="color: #000000; font-weight: bold;">*************************</span>
HijackThrowException : Throw exception hijacked<span style="color: #000000; font-weight: bold;">!</span></pre></div></div><p>It will run the <strong>HijackThrowException&#8217;s afterThrowing()</strong> method, if customerService&#8217;s methods throw an exception.</p><h4>4. Around advice</h4><p>It combines all three advices above, and execute during method execution. Create a class which implements <strong>MethodInterceptor</strong> interface. You have to call the <strong>&#8220;methodInvocation.proceed();</strong>&#8221; to proceed on the original method execution, else the original method will not execute.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.aop</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.util.Arrays</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.aopalliance.intercept.MethodInterceptor</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.aopalliance.intercept.MethodInvocation</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> HijackAroundMethod <span style="color: #000000; font-weight: bold;">implements</span> MethodInterceptor <span style="color: #009900;">&#123;</span>
	@Override
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Object</span> invoke<span style="color: #009900;">&#40;</span>MethodInvocation methodInvocation<span style="color: #009900;">&#41;</span> <span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">Throwable</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Method name : &quot;</span>
				<span style="color: #339933;">+</span> methodInvocation.<span style="color: #006633;">getMethod</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">getName</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Method arguments : &quot;</span>
				<span style="color: #339933;">+</span> <span style="color: #003399;">Arrays</span>.<span style="color: #006633;">toString</span><span style="color: #009900;">&#40;</span>methodInvocation.<span style="color: #006633;">getArguments</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #666666; font-style: italic;">// same with MethodBeforeAdvice</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;HijackAroundMethod : Before method hijacked!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span>
			<span style="color: #666666; font-style: italic;">// proceed to original method call</span>
			<span style="color: #003399;">Object</span> result <span style="color: #339933;">=</span> methodInvocation.<span style="color: #006633;">proceed</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
			<span style="color: #666666; font-style: italic;">// same with AfterReturningAdvice</span>
			<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;HijackAroundMethod : Before after hijacked!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
			<span style="color: #000000; font-weight: bold;">return</span> result<span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">catch</span> <span style="color: #009900;">&#40;</span><span style="color: #003399;">IllegalArgumentException</span> e<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
			<span style="color: #666666; font-style: italic;">// same with ThrowsAdvice</span>
			<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;HijackAroundMethod : Throw exception hijacked!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
			<span style="color: #000000; font-weight: bold;">throw</span> e<span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Bean configuration file</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.services.CustomerService&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;name&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;Yong Mook Kim&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;url&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;http://www.mkyong.com&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;hijackAroundMethodBean&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.aop.HijackAroundMethod&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerServiceProxy&quot;</span> </span>
<span style="color: #009900;">                <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;target&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;interceptorNames&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
				<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>hijackAroundMethodBean<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/value<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/list<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/property<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Run it again, output</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">*************************</span>
Method name : printName
Method arguments : <span style="color: #7a0874; font-weight: bold;">&#91;</span><span style="color: #7a0874; font-weight: bold;">&#93;</span>
HijackAroundMethod : Before method hijacked<span style="color: #000000; font-weight: bold;">!</span>
Customer name : Yong Mook Kim
HijackAroundMethod : Before after hijacked<span style="color: #000000; font-weight: bold;">!</span>
<span style="color: #000000; font-weight: bold;">*************************</span>
Method name : printURL
Method arguments : <span style="color: #7a0874; font-weight: bold;">&#91;</span><span style="color: #7a0874; font-weight: bold;">&#93;</span>
HijackAroundMethod : Before method hijacked<span style="color: #000000; font-weight: bold;">!</span>
Customer website : http:<span style="color: #000000; font-weight: bold;">//</span>www.mkyong.com
HijackAroundMethod : Before after hijacked<span style="color: #000000; font-weight: bold;">!</span>
<span style="color: #000000; font-weight: bold;">*************************</span>
Method name : printThrowException
Method arguments : <span style="color: #7a0874; font-weight: bold;">&#91;</span><span style="color: #7a0874; font-weight: bold;">&#93;</span>
HijackAroundMethod : Before method hijacked<span style="color: #000000; font-weight: bold;">!</span>
HijackAroundMethod : Throw exception hijacked<span style="color: #000000; font-weight: bold;">!</span></pre></div></div><p>It will run the <strong>HijackAroundMethod&#8217;s invoke()</strong>method, after every customerService&#8217;s method execution.</p><h3>Conclusion</h3><p>Most of the Spring developers are just implements the &#8216;Around advice &#8216;, since it can apply all the advice type, but a better practice should choose the most suitable advice type to satisfy the requirements.</p><div class="note"> <strong>Pointcut</strong><br /> In this example, all the methods in a customer service class are intercepted (advice) automatically. But for most cases, you may need to use <a href="http://www.mkyong.com/spring/spring-aop-example-pointcut-advisor/" target="_blank">Pointcut and Advisor</a> to intercept a method via it&#8217;s method name.</div><h4>Download Source Code</h4><div class="download"> Download it &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2010/03/Spring-AOP-Advice-Examples.zip'>Spring-AOP-Advice-Examples.zip</a> (8 KB)</div><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/aop/" rel="tag">aop</a> <a href="http://www.mkyong.com/tag/spring/" rel="tag">spring</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/spring3/spring-aop-aspectj-in-xml-configuration-example/" title="Spring AOP + AspectJ in XML configuration example">Spring AOP + AspectJ in XML configuration example</a></li><li><a href="http://www.mkyong.com/spring3/spring-aop-aspectj-annotation-example/" title="Spring AOP + AspectJ annotation example">Spring AOP + AspectJ annotation example</a></li><li><a href="http://www.mkyong.com/spring/spring-aop-transaction-management-in-hibernate/" title="Spring AOP transaction management in Hibernate">Spring AOP transaction management in Hibernate</a></li><li><a href="http://www.mkyong.com/spring/spring-aop-example-pointcut-advisor/" title="Spring AOP Example &#8211; Pointcut , Advisor">Spring AOP Example &#8211; Pointcut , Advisor</a></li><li><a href="http://www.mkyong.com/spring/spring-aop-error-cannot-proxy-target-class-because-cglib2-is-not-available/" title="Spring AOP Error : Cannot proxy target class because CGLIB2 is not available">Spring AOP Error : Cannot proxy target class because CGLIB2 is not available</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/spring-tutorials/' title='Spring Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/java-mongodb-tutorials/' title='Java MongoDB Tutorials'><div class='images img-border img-mongodb'></div></a></li><li><a href='/tutorials/jax-rs-tutorial/' title='JAX-RS Tutorials'><div class='images img-border img-jaxrs'></div></a></li><li><a href='/tutorials/jsf-2-0-tutorials/' title='JSF 2 Tutorials'><div class='images img-border img-jsf2'></div></a></li><li><a href='/tutorials/struts-2-tutorials/' title='Struts 2.x Tutorials'><div class='images img-border img-struts2'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><div class="navigation"><div class="nav-previous"><a href="http://www.mkyong.com/spring/spring-aop-examples-advice/comment-page-1/#comments" ><span class="meta-nav">&larr;</span> Older Comments</a></div><div class="nav-next"></div></div><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-139264"><div id="dsq-comment-header-139264" class="dsq-comment-header"> <cite id="dsq-cite-139264"> <span id="dsq-author-user-139264">praveenambati</span> </cite></div><div id="dsq-comment-body-139264" class="dsq-comment-body"><div id="dsq-comment-message-139264" class="dsq-comment-message"><p>Why you not used namespace ?<br /> xmlns:aop=&#8221;http://www.springframework.org/schema/aop&#8221;</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138925"><div id="dsq-comment-header-138925" class="dsq-comment-header"> <cite id="dsq-cite-138925"> <span id="dsq-author-user-138925">suresh kumar</span> </cite></div><div id="dsq-comment-body-138925" class="dsq-comment-body"><div id="dsq-comment-message-138925" class="dsq-comment-message"><p>It&#8217;s a very good example for the AOP beginers</p><p>Thanks and Regards,<br /> suresh kumar. somarouthu</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-138901"><div id="dsq-comment-header-138901" class="dsq-comment-header"> <cite id="dsq-cite-138901"> http://<a class="__cf_email__" href="http://www.cloudflare.com/email-protection" data-cfemail="f487959a9f9c959b9a989d9a91b48d959c9b9bda979bda819f">[email&nbsp;protected]</a><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();
/* ]]> */
</script> <span id="dsq-author-user-138901">Sankha</span> </cite></div><div id="dsq-comment-body-138901" class="dsq-comment-body"><div id="dsq-comment-message-138901" class="dsq-comment-message"><p>Example was nice but I still get that java.lang.ClassCastException: $Proxy0 error. Anybody got past this issue? how?</p><p>Mr Mkyong, any suggestion please?</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138900"><div id="dsq-comment-header-138900" class="dsq-comment-header"> <cite id="dsq-cite-138900"> <span id="dsq-author-user-138900">Sankha</span> </cite></div><div id="dsq-comment-body-138900" class="dsq-comment-body"><div id="dsq-comment-message-138900" class="dsq-comment-message"><p>Example was nice, but I still get that java.lang.ClassCastException: $Proxy0 exception. Anybody get rid of this issue yet?<br /> Mr Mkyong, any suggestion please?</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-138144"><div id="dsq-comment-header-138144" class="dsq-comment-header"> <cite id="dsq-cite-138144"> <span id="dsq-author-user-138144">Mayur Mistry</span> </cite></div><div id="dsq-comment-body-138144" class="dsq-comment-body"><div id="dsq-comment-message-138144" class="dsq-comment-message"><p>Nice and Simple example for Beginners</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-137466"><div id="dsq-comment-header-137466" class="dsq-comment-header"> <cite id="dsq-cite-137466"> <span id="dsq-author-user-137466">swapnil</span> </cite></div><div id="dsq-comment-body-137466" class="dsq-comment-body"><div id="dsq-comment-message-137466" class="dsq-comment-message"><p>Thank you, this is really nice.<br /> Quite simple and straightforward explanation to understand for new person. Thank you again.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-136288"><div id="dsq-comment-header-136288" class="dsq-comment-header"> <cite id="dsq-cite-136288"> <span id="dsq-author-user-136288">sijo</span> </cite></div><div id="dsq-comment-body-136288" class="dsq-comment-body"><div id="dsq-comment-message-136288" class="dsq-comment-message"><p>Your tutorials are very useful . Great work &#8230;.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-136012"><div id="dsq-comment-header-136012" class="dsq-comment-header"> <cite id="dsq-cite-136012"> <span id="dsq-author-user-136012">prakash</span> </cite></div><div id="dsq-comment-body-136012" class="dsq-comment-body"><div id="dsq-comment-message-136012" class="dsq-comment-message"><p>Very nice article</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-135442"><div id="dsq-comment-header-135442" class="dsq-comment-header"> <cite id="dsq-cite-135442"> <span id="dsq-author-user-135442">Nathan</span> </cite></div><div id="dsq-comment-body-135442" class="dsq-comment-body"><div id="dsq-comment-message-135442" class="dsq-comment-message"><p>Hello,</p><p>I am a french student, beginner with Spring AOP Advice.</p><p>This article is very simple and usefull. However, I would like to know how to do when (for example) CustomerService extends a class which has got an Interface ?</p><p>I have the following error :<br /> &#8220;Exception in thread &#8220;main&#8221; java.lang.ClassCastException: $Proxy0 cannot be cast to com.mkyong.customer.services.CustomerService at com.mkyong.common.App.main(App.java:14)&#8221;</p><p>Thank you for your help :)</p><p>Have a nice day,</p><p>Regards,</p><p>Nathan</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-138367"><div id="dsq-comment-header-138367" class="dsq-comment-header"> <cite id="dsq-cite-138367"> <span id="dsq-author-user-138367">rohan</span> </cite></div><div id="dsq-comment-body-138367" class="dsq-comment-body"><div id="dsq-comment-message-138367" class="dsq-comment-message"><p>I am getting the same error.How did you solve $proxy error0(classcastexception)</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-133446"><div id="dsq-comment-header-133446" class="dsq-comment-header"> <cite id="dsq-cite-133446"> <span id="dsq-author-user-133446">Meghna</span> </cite></div><div id="dsq-comment-body-133446" class="dsq-comment-body"><div id="dsq-comment-message-133446" class="dsq-comment-message"><p>Nice post man&#8230; Even these <a href="http://www.compiletimeerror.com/search/label/Java-Spring%20framework" rel="nofollow">http://www.compiletimeerror.com/search/label/Java-Spring%20framework</a> might help&#8230; Have a look&#8230;</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-133149"><div id="dsq-comment-header-133149" class="dsq-comment-header"> <cite id="dsq-cite-133149"> <span id="dsq-author-user-133149">ali</span> </cite></div><div id="dsq-comment-body-133149" class="dsq-comment-body"><div id="dsq-comment-message-133149" class="dsq-comment-message"><p>fast and Clean sample!<br /> thanks</p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://aeroyid.wordpress.com/2013/04/27/java-aop-aspect-oriented-programming/' rel='external nofollow' class='url'>(Java) AOP &#8211; Aspect Oriented Programming | Aeroid</a></p></li></li><li class="post pingback"><p>Pingback: <a href='http://www.w3c.com.cn/spring%e5%89%8d%e7%bd%ae%e9%80%9a%e7%9f%a5%e5%8f%af%e5%90%a6%e9%98%bb%e6%ad%a2%e5%90%8e%e7%bb%ad%e4%bb%a3%e7%a0%81%e8%bf%90%e8%a1%8c%ef%bc%9f' rel='external nofollow' class='url'>spring??????????????? - ?????</a></p></li></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-131941"><div id="dsq-comment-header-131941" class="dsq-comment-header"> <cite id="dsq-cite-131941"> <span id="dsq-author-user-131941">Ashok</span> </cite></div><div id="dsq-comment-body-131941" class="dsq-comment-body"><div id="dsq-comment-message-131941" class="dsq-comment-message"><p>The most concise and simplest AOP examples to be found on the web. Thanks!</p><p>One minor update: the ThrowsAdvice interface seems to have become no-op in Spring 2.5.5:</p><p>// Compiled from ThrowsAdvice.java (version 1.4 : 48.0, no super bit)<br /> public abstract interface org.springframework.aop.ThrowsAdvice extends org.springframework.aop.AfterAdvice {<br /> }</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-131438"><div id="dsq-comment-header-131438" class="dsq-comment-header"> <cite id="dsq-cite-131438"> <span id="dsq-author-user-131438">mallesh</span> </cite></div><div id="dsq-comment-body-131438" class="dsq-comment-body"><div id="dsq-comment-message-131438" class="dsq-comment-message"><p>Really helpfull for beginners</p><p>thanks a lot</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-130541"><div id="dsq-comment-header-130541" class="dsq-comment-header"> <cite id="dsq-cite-130541"> <span id="dsq-author-user-130541">Sd590</span> </cite></div><div id="dsq-comment-body-130541" class="dsq-comment-body"><div id="dsq-comment-message-130541" class="dsq-comment-message"><p>Really superb article for beginners like me. It is simply crystal clear and very meaningful. Thanks.</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-128659"><div id="dsq-comment-header-128659" class="dsq-comment-header"> <cite id="dsq-cite-128659"> <span id="dsq-author-user-128659">Ali</span> </cite></div><div id="dsq-comment-body-128659" class="dsq-comment-body"><div id="dsq-comment-message-128659" class="dsq-comment-message"><p>Great work</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-130699"><div id="dsq-comment-header-130699" class="dsq-comment-header"> <cite id="dsq-cite-130699"> <span id="dsq-author-user-130699">anurag</span> </cite></div><div id="dsq-comment-body-130699" class="dsq-comment-body"><div id="dsq-comment-message-130699" class="dsq-comment-message"><p>A nice explanation</p></div></div></li></ul></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-128007"><div id="dsq-comment-header-128007" class="dsq-comment-header"> <cite id="dsq-cite-128007"> <span id="dsq-author-user-128007">Divya</span> </cite></div><div id="dsq-comment-body-128007" class="dsq-comment-body"><div id="dsq-comment-message-128007" class="dsq-comment-message"><p>Really helpful for Beginners.</p><p>Thanks a lot..</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-127079"><div id="dsq-comment-header-127079" class="dsq-comment-header"> <cite id="dsq-cite-127079"> <span id="dsq-author-user-127079">Vishwa</span> </cite></div><div id="dsq-comment-body-127079" class="dsq-comment-body"><div id="dsq-comment-message-127079" class="dsq-comment-message"><p>Very nice article.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-126374"><div id="dsq-comment-header-126374" class="dsq-comment-header"> <cite id="dsq-cite-126374"> http://www.prism-it.com <span id="dsq-author-user-126374">AK</span> </cite></div><div id="dsq-comment-body-126374" class="dsq-comment-body"><div id="dsq-comment-message-126374" class="dsq-comment-message"><p>Its Great. Good article.<br /> But I tried the same but it is not taking beforemethodadvice… I added cglib jar file in build path.. But only thing is @override annotation in HijackBeforeAdvice is throwing me compilation error.. If I remove that, compilation error goes off but NOT RUNNING the HijackBeforeMethod’s before() method.</p><p>Can anyone please help me in this regard…I get simple output not the advice output..</p><p>Pleaazzzzz</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-130123"><div id="dsq-comment-header-130123" class="dsq-comment-header"> <cite id="dsq-cite-130123"> <span id="dsq-author-user-130123">nabeel</span> </cite></div><div id="dsq-comment-body-130123" class="dsq-comment-body"><div id="dsq-comment-message-130123" class="dsq-comment-message"><p>which JVM version are you using? it should be 1.5 or above.</p></div></div></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-126371"><div id="dsq-comment-header-126371" class="dsq-comment-header"> <cite id="dsq-cite-126371"> http://www.prism-it.com <span id="dsq-author-user-126371">AK</span> </cite></div><div id="dsq-comment-body-126371" class="dsq-comment-body"><div id="dsq-comment-message-126371" class="dsq-comment-message"><p>Its Great. Good article.<br /> But I tried the same but it is not taking beforemethodadvice&#8230; I added cglib jar file in build path.. But only thing is @override annotation in HijackBeforeAdvice is throwing me compilation error.. If I remove that, compilation error goes off but NOT RUNNING the HijackBeforeMethod’s before() method.</p><p>Can anyone please help me in this regard&#8230;I get simple output not the advice output..</p><p>Pleaazzzzz</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-131657"><div id="dsq-comment-header-131657" class="dsq-comment-header"> <cite id="dsq-cite-131657"> <span id="dsq-author-user-131657">Colin Hilbert</span> </cite></div><div id="dsq-comment-body-131657" class="dsq-comment-body"><div id="dsq-comment-message-131657" class="dsq-comment-message"><p>I added aopalliance 1.0 jar to my build path and this error went away</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-136100"><div id="dsq-comment-header-136100" class="dsq-comment-header"> <cite id="dsq-cite-136100"> <span id="dsq-author-user-136100">Jaganathan</span> </cite></div><div id="dsq-comment-body-136100" class="dsq-comment-body"><div id="dsq-comment-message-136100" class="dsq-comment-message"><p>Hi Colin,<br /> I am not getting any compilation error. But while running, I am getting the below exception. I am using the main program name as MainApp.java. Rest of the info are same as in this article. I have already added aopalliance jar to the buildpath. I am using eclipse.</p><p>Exception in thread &#8220;main&#8221; org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#8216;customerServiceProxy&#8217;: FactoryBean threw exception on object creation; nested exception is java.lang.IncompatibleClassChangeError: org.springframework.asm.ClassVisitor<br /> at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:149)<br /> at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:102)<br /> at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1454)<br /> at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:249)<br /> at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)<br /> at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1117)<br /> at com.tutorialspoint.MainApp.main(MainApp.java:13)</p><p>Thanks in Advance<br /> Jagan</p></div></div><ul class="children"><li class="comment even depth-4" id="dsq-comment-138159"><div id="dsq-comment-header-138159" class="dsq-comment-header"> <cite id="dsq-cite-138159"> <span id="dsq-author-user-138159">TryCatch</span> </cite></div><div id="dsq-comment-body-138159" class="dsq-comment-body"><div id="dsq-comment-message-138159" class="dsq-comment-message"><p>Where u able to find the solution for the above problem? I am also facing the same error</p></div></div></li></ul></li><li class="comment odd alt depth-3" id="dsq-comment-138185"><div id="dsq-comment-header-138185" class="dsq-comment-header"> <cite id="dsq-cite-138185"> http://iSushantJain.blogspot.in <span id="dsq-author-user-138185">Sushant Jain</span> </cite></div><div id="dsq-comment-body-138185" class="dsq-comment-body"><div id="dsq-comment-message-138185" class="dsq-comment-message"><p>I also used that mentioned jar but still facing the same issue.<br /> Please tell me where to save &#8220;Spring-Customer.xml&#8221;<br /> I dont know how spring will find this Spring-Customer.xml in resource folder.<br /> Please help me.</p></div></div></li></ul></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-126311"><div id="dsq-comment-header-126311" class="dsq-comment-header"> <cite id="dsq-cite-126311"> <span id="dsq-author-user-126311">Pintu Debnath</span> </cite></div><div id="dsq-comment-body-126311" class="dsq-comment-body"><div id="dsq-comment-message-126311" class="dsq-comment-message"><p>Nicely described.. carry on&#8230;</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-125982"><div id="dsq-comment-header-125982" class="dsq-comment-header"> <cite id="dsq-cite-125982"> <span id="dsq-author-user-125982">arlahiru</span> </cite></div><div id="dsq-comment-body-125982" class="dsq-comment-body"><div id="dsq-comment-message-125982" class="dsq-comment-message"><p>really helpful practical guide for beginners. thx lot!</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-125582"><div id="dsq-comment-header-125582" class="dsq-comment-header"> <cite id="dsq-cite-125582"> <span id="dsq-author-user-125582">Test</span> </cite></div><div id="dsq-comment-body-125582" class="dsq-comment-body"><div id="dsq-comment-message-125582" class="dsq-comment-message"><p>Gr8 !! Super !!<br /> You Rock !!</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-124176"><div id="dsq-comment-header-124176" class="dsq-comment-header"> <cite id="dsq-cite-124176"> <span id="dsq-author-user-124176">Ravinder</span> </cite></div><div id="dsq-comment-body-124176" class="dsq-comment-body"><div id="dsq-comment-message-124176" class="dsq-comment-message"><p>This example has set the foundation for me.  It’s so simple and that’s all I needed to get started in AOP.  I can now start to look more in depth at AOP.</p><p>Fantastic work, keep it up.</p><p>Regards</p><p>Ravi</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-123107"><div id="dsq-comment-header-123107" class="dsq-comment-header"> <cite id="dsq-cite-123107"> <span id="dsq-author-user-123107">Karthick</span> </cite></div><div id="dsq-comment-body-123107" class="dsq-comment-body"><div id="dsq-comment-message-123107" class="dsq-comment-message"><p>I&#8217;m using Spring 3.1.2 and all my controllers are annotation driven. My spring context xml will not have any beans defines in that. How to achieve AOP in that case. i.e., is it possible to achieve AOP through annotations(not AspectJ though). Is it possible? If so, please let me know.</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-124254"><div id="dsq-comment-header-124254" class="dsq-comment-header"> <cite id="dsq-cite-124254"> <span id="dsq-author-user-124254">petro</span> </cite></div><div id="dsq-comment-body-124254" class="dsq-comment-body"><div id="dsq-comment-message-124254" class="dsq-comment-message"><p>Hi. Do you find the answer on your question?</p></div></div></li></ul></li><li class="comment even thread-even depth-1" id="dsq-comment-122594"><div id="dsq-comment-header-122594" class="dsq-comment-header"> <cite id="dsq-cite-122594"> <span id="dsq-author-user-122594">Ramakant</span> </cite></div><div id="dsq-comment-body-122594" class="dsq-comment-body"><div id="dsq-comment-message-122594" class="dsq-comment-message"><p>Hi,<br /> The example is nice. I am yet to read in depth about AOP but am wondering whether the AOP can be selective on methods. For ex, assuming a class has n methods in it and I want certain things to take place only when x methods are invoked (x&lt;n) and for the remaining (n-x) methods, nothing should happen (no AOP behavior). Please let me know if this is something which is possible?</p><p>Regards,<br /> Ramakant</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-132005"><div id="dsq-comment-header-132005" class="dsq-comment-header"> <cite id="dsq-cite-132005"> <span id="dsq-author-user-132005">khalil</span> </cite></div><div id="dsq-comment-body-132005" class="dsq-comment-body"><div id="dsq-comment-message-132005" class="dsq-comment-message"><p>Yes , that is what mkYong mentionned in the end of the tutorial.refer to the next tutorial about Pointcut and Adviser</p></div></div></li></ul></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-122200"><div id="dsq-comment-header-122200" class="dsq-comment-header"> <cite id="dsq-cite-122200"> <span id="dsq-author-user-122200">Rizvi</span> </cite></div><div id="dsq-comment-body-122200" class="dsq-comment-body"><div id="dsq-comment-message-122200" class="dsq-comment-message"><p>Great work! I am very much impressed&#8230;</p></div></div></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-122029"><div id="dsq-comment-header-122029" class="dsq-comment-header"> <cite id="dsq-cite-122029"> <span id="dsq-author-user-122029">Skumar</span> </cite></div><div id="dsq-comment-body-122029" class="dsq-comment-body"><div id="dsq-comment-message-122029" class="dsq-comment-message"><p>This is very Helpfull to a beginer and best practise..<br /> Thanks a lot &#8230;.</p></div></div></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-97128"><div id="dsq-comment-header-97128" class="dsq-comment-header"> <cite id="dsq-cite-97128"> <span id="dsq-author-user-97128">qazjvm</span> </cite></div><div id="dsq-comment-body-97128" class="dsq-comment-body"><div id="dsq-comment-message-97128" class="dsq-comment-message"><p>Hi,</p><p>My application context is:</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #ddbb00;">&amp;lt;</span>bean id=<span style="color: #ddbb00;">&amp;quot;</span>hijackAroundMethodBean<span style="color: #ddbb00;">&amp;quot;</span> class=<span style="color: #ddbb00;">&amp;quot;</span>org.poc.aspect.BusinessProfiler<span style="color: #ddbb00;">&amp;quot;</span> /<span style="color: #ddbb00;">&amp;gt;</span>
&nbsp;
	<span style="color: #ddbb00;">&amp;lt;</span>bean id=<span style="color: #ddbb00;">&amp;quot;</span>serviceProxy<span style="color: #ddbb00;">&amp;quot;</span> 
                class=<span style="color: #ddbb00;">&amp;quot;</span>org.springframework.aop.framework.ProxyFactoryBean<span style="color: #ddbb00;">&amp;quot;&amp;gt;</span>
&nbsp;
		<span style="color: #ddbb00;">&amp;lt;</span>property name=<span style="color: #ddbb00;">&amp;quot;</span>target<span style="color: #ddbb00;">&amp;quot;</span> ref=<span style="color: #ddbb00;">&amp;quot;</span>serviceImpl<span style="color: #ddbb00;">&amp;quot;</span> /<span style="color: #ddbb00;">&amp;gt;</span>
&nbsp;
		<span style="color: #ddbb00;">&amp;lt;</span>property name=<span style="color: #ddbb00;">&amp;quot;</span>interceptorNames<span style="color: #ddbb00;">&amp;quot;&amp;gt;</span>
			<span style="color: #ddbb00;">&amp;lt;</span>list<span style="color: #ddbb00;">&amp;gt;</span>
				<span style="color: #ddbb00;">&amp;lt;</span>value<span style="color: #ddbb00;">&amp;gt;</span>hijackAroundMethodBean<span style="color: #ddbb00;">&amp;lt;</span>/value<span style="color: #ddbb00;">&amp;gt;</span>
			<span style="color: #ddbb00;">&amp;lt;</span>/list<span style="color: #ddbb00;">&amp;gt;</span>
		<span style="color: #ddbb00;">&amp;lt;</span>/property<span style="color: #ddbb00;">&amp;gt;</span>
	<span style="color: #ddbb00;">&amp;lt;</span>/bean<span style="color: #ddbb00;">&amp;gt;</span></pre></div></div><p> This refers to my service bean which is declared using @Qualifier annotation in my controller class. Hence there is no bean entry with this id in application context.<br /> No error is thrown but spring aop feature is not working.<br /> Please suggest a workaround.</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-97154"><div id="dsq-comment-header-97154" class="dsq-comment-header"> <cite id="dsq-cite-97154"> <span id="dsq-author-user-97154">qazjvm</span> </cite></div><div id="dsq-comment-body-97154" class="dsq-comment-body"><div id="dsq-comment-message-97154" class="dsq-comment-message"><p>***** Updating my post below ******</p><p>In my web project, my service bean is declares as follows:</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;">@Controller
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> MyController<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#123;</span>
&nbsp;
@Qualifier<span style="color: #009900;">&#40;</span><span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span>serviceImpl<span style="color: #339933;">&amp;</span>quot<span style="color: #339933;">;</span><span style="color: #009900;">&#41;</span>
@Autowire
Service service<span style="color: #339933;">;</span>
&nbsp;
<span style="color: #666666; font-style: italic;">/*-- remaining code here */</span></pre></div></div><p>}</p></div></div></li></ul></li><li class="comment even thread-even depth-1" id="dsq-comment-93640"><div id="dsq-comment-header-93640" class="dsq-comment-header"> <cite id="dsq-cite-93640"> <span id="dsq-author-user-93640">Nicolas</span> </cite></div><div id="dsq-comment-body-93640" class="dsq-comment-body"><div id="dsq-comment-message-93640" class="dsq-comment-message"><p>Clear and simple like all the other spring demo.<br /> Dude seriously, thank you for your work :). I&#8217;m sure it&#8217;ll help a lot of beginer</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-91236"><div id="dsq-comment-header-91236" class="dsq-comment-header"> <cite id="dsq-cite-91236"> <span id="dsq-author-user-91236">Shiju</span> </cite></div><div id="dsq-comment-body-91236" class="dsq-comment-body"><div id="dsq-comment-message-91236" class="dsq-comment-message"><p>Hi<br /> I am getting a syntax error says<br /> The hierarchy of the type Hijack BeforeMethod is inconsistent<br /> at<br /> public class HijackBeforeMethod implements MethodBeforeAdvice{.</p><p>what could be wrong??</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-91257"><div id="dsq-comment-header-91257" class="dsq-comment-header"> <cite id="dsq-cite-91257"> <span id="dsq-author-user-91257">Shiju</span> </cite></div><div id="dsq-comment-body-91257" class="dsq-comment-body"><div id="dsq-comment-message-91257" class="dsq-comment-message"><p>its resolved adding AOP Alliance API 1.0.0</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-112529"><div id="dsq-comment-header-112529" class="dsq-comment-header"> <cite id="dsq-cite-112529"> <span id="dsq-author-user-112529">vipul</span> </cite></div><div id="dsq-comment-body-112529" class="dsq-comment-body"><div id="dsq-comment-message-112529" class="dsq-comment-message"><p>hi friend i feel same error that<br /> I am getting a syntax error says<br /> The hierarchy of the type Hijack BeforeMethod is inconsistent<br /> at<br /> public class HijackBeforeMethod implements MethodBeforeAdvice{.</p><p>how and where to add AOP Allianc API 1.0.0 and from where it download<br /> step by step<br /> plz answer me</p></div></div><ul class="children"><li class="comment even depth-4" id="dsq-comment-123962"><div id="dsq-comment-header-123962" class="dsq-comment-header"> <cite id="dsq-cite-123962"> <span id="dsq-author-user-123962">Jai</span> </cite></div><div id="dsq-comment-body-123962" class="dsq-comment-body"><div id="dsq-comment-message-123962" class="dsq-comment-message"><p><a href="http://ebr.springsource.com/repository/app/bundle/version/detail?name=com.springsource.org.aopalliance&#038;version=1.0.0" rel="nofollow">http://ebr.springsource.com/repository/app/bundle/version/detail?name=com.springsource.org.aopalliance&#038;version=1.0.0</a></p></div></div></li></ul></li></ul></li></ul></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-86082"><div id="dsq-comment-header-86082" class="dsq-comment-header"> <cite id="dsq-cite-86082"> <span id="dsq-author-user-86082">Joe Jarin</span> </cite></div><div id="dsq-comment-body-86082" class="dsq-comment-body"><div id="dsq-comment-message-86082" class="dsq-comment-message"><p>This article totally opened my mind :)</p></div></div></li></ul><div class="navigation"><div class="nav-previous"><a href="http://www.mkyong.com/spring/spring-aop-examples-advice/comment-page-1/#comments" ><span class="meta-nav">&larr;</span> Older Comments</a></div><div class="nav-next"></div></div></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/spring/spring-aop-examples-advice/';var disqus_identifier='3994 http://www.mkyong.com/?p=3994';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Spring AOP Example &#8211; Advice";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=3994';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Spring &#8211; Auto proxy creator example | Spring",'author_url':"http:\/\/www.mkyong.com\/spring\/spring-auto-proxy-creator-example\/",'date':"03\/28\/2010 01:45 AM",'excerpt':"[...] creator example  Written on March 28, 2010 at 1:44 am by mkyong       &hellip;",'type':"pingback"},{'author_name':"Spring Tutorials | Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/spring-tutorials\/",'date':"04\/01\/2010 11:10 AM",'excerpt':"[...] Spring AOP Example – Advice Examples and explanations about different types of Spring&#8217;s advices. [...] ",'type':"pingback"},{'author_name':"Spring AOP Example &#8211; Pointcut , Advisor",'author_url':"http:\/\/www.mkyong.com\/spring\/spring-aop-example-pointcut-advisor\/",'date':"04\/14\/2011 11:02 AM",'excerpt':"[...] last Spring AOP advice examples, all the methods in a class will be intercept automatically. But for most cases, &hellip;",'type':"pingback"},{'author_name':"Spring AOP + AspectJ annotation example",'author_url':"http:\/\/www.mkyong.com\/spring3\/spring-aop-aspectj-annotation-example\/",'date':"06\/21\/2011 05:28 PM",'excerpt':"[...] execution, combine all three advices above. Note For Spring AOP without AspectJ support, read this build-in Spring AOP examples.1. &hellip;",'type':"pingback"},{'author_name':"Spring interceptor problem integrated with JSF ?",'author_url':"http:\/\/javanullpointer.com\/spring\/205-spring-interceptor-problem-integrated-jsf.html#post370",'date':"04\/13\/2012 11:15 PM",'excerpt':"[...]          I think you are asking how to do Spring interceptors, &hellip;",'type':"pingback"},{'author_name':"spring??????????????? - ?????",'author_url':"http:\/\/www.w3c.com.cn\/spring%e5%89%8d%e7%bd%ae%e9%80%9a%e7%9f%a5%e5%8f%af%e5%90%a6%e9%98%bb%e6%ad%a2%e5%90%8e%e7%bb%ad%e4%bb%a3%e7%a0%81%e8%bf%90%e8%a1%8c%ef%bc%9f",'date':"04\/26\/2013 05:57 AM",'excerpt':"[...] http:\/\/www.mkyong.com\/spring\/spring-aop-examples-advice\/??? AroundAdive ??proceed?????????    ?????? 2011 ? 11 ? [...] ",'type':"pingback"},{'author_name':"(Java) AOP &#8211; Aspect Oriented Programming | Aeroid",'author_url':"http:\/\/aeroyid.wordpress.com\/2013\/04\/27\/java-aop-aspect-oriented-programming\/",'date':"04\/27\/2013 01:29 PM",'excerpt':"[...] http:\/\/www.mkyong.com\/spring\/spring-aop-examples-advice\/ [...] ",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/spring\/spring-aop-examples-advice\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="3994" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>