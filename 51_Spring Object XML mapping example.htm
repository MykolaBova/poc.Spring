<!DOCTYPE html><html lang="en"><title>Spring Object/XML mapping example</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='ClassNotFoundException: org.apache.xml.serialize.XMLSerializer' href='http://www.mkyong.com/spring3/classnotfoundexception-org-apache-xml-serialize-xmlserializer/' /><link rel='next' title='Top 5 free Java ebooks' href='http://www.mkyong.com/featured/top-5-free-java-ebooks/' /><link rel='shortlink' href='http://www.mkyong.com/?p=9382' /><meta name="keywords" content="oxm,spring3" /><link rel="canonical" href="http://www.mkyong.com/spring3/spring-objectxml-mapping-example/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-9382"><header><h1> Spring Object/XML mapping example</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2011-06-22T22:32:00+00:00">June 22, 2011</time><span> , &nbsp;&nbsp;&nbsp; Last modified : July 25, 2011 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><p>The Spring&#8217;s Object/XML Mapping, is converting Object to XML or vice verse. This process is also known as</p><ol><li><strong>XML Marshalling</strong> &#8211; Convert Object to XML.</li><li><strong>XML UnMarshalling</strong> &#8211; Convert XML to Object.</li></ol><p>In this tutorial, we show you how to use Spring&#8217;s oxm  to do the conversion, <strong>Object <--- Spring oxm ---> XML</strong>.</p><div class="note"> <strong>Note</strong><br /> No nonsense, for why and what benefits of using Spring&#8217;s oxm, read this <a href="http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/oxm.html" target="_blank">official Spring Object/XML mapping</a> article.</div><h4>1. Project Dependency</h4><p>Dependencies in this example.</p><div class="note"> <strong>Note</strong><br /> Spring&#8217;s oxm itself doesn&#8217;t handle the XML marshalling or UnMarshalling, it depends developer to inject their prefer XML binding framework. In this case, you will use Castor binding framework.</div><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;">	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;properties<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;spring.version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>3.0.5.RELEASE<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/spring.version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/properties<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependencies<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #808080; font-style: italic;">&lt;!-- Spring 3 dependencies --&gt;</span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>org.springframework<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>spring-core<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>${spring.version}<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>org.springframework<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>spring-context<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>${spring.version}<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #808080; font-style: italic;">&lt;!-- spring oxm --&gt;</span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>org.springframework<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>spring-oxm<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>${spring.version}<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #808080; font-style: italic;">&lt;!-- Uses Castor for XML --&gt;</span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>org.codehaus.castor<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>castor<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>1.2<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #808080; font-style: italic;">&lt;!-- Castor need this --&gt;</span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>xerces<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/groupId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>xercesImpl<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/artifactId<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>2.8.1<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/version<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependency<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/dependencies<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>2. Simple Object</h4><p>A simple object, later convert it into XML file.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.core.model</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Customer <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #003399;">String</span> name<span style="color: #339933;">;</span>
	<span style="color: #000066; font-weight: bold;">int</span> age<span style="color: #339933;">;</span>
	<span style="color: #000066; font-weight: bold;">boolean</span> flag<span style="color: #339933;">;</span>
	<span style="color: #003399;">String</span> address<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #666666; font-style: italic;">//standard getter, setter and toString() methods.</span>
<span style="color: #009900;">&#125;</span></pre></div></div><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>3. Marshaller and Unmarshaller</h4><p>This class will handle the conversion via Spring&#8217;s oxm interfaces : <code>Marshaller</code> and <code>Unmarshaller</code>.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.core</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.io.FileInputStream</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.io.FileOutputStream</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.io.IOException</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.xml.transform.stream.StreamResult</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">javax.xml.transform.stream.StreamSource</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.oxm.Marshaller</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.oxm.Unmarshaller</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> XMLConverter <span style="color: #009900;">&#123;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">private</span> Marshaller marshaller<span style="color: #339933;">;</span>
	<span style="color: #000000; font-weight: bold;">private</span> Unmarshaller unmarshaller<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Marshaller getMarshaller<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> marshaller<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setMarshaller<span style="color: #009900;">&#40;</span>Marshaller marshaller<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">marshaller</span> <span style="color: #339933;">=</span> marshaller<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> Unmarshaller getUnmarshaller<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> unmarshaller<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setUnmarshaller<span style="color: #009900;">&#40;</span>Unmarshaller unmarshaller<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">unmarshaller</span> <span style="color: #339933;">=</span> unmarshaller<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> convertFromObjectToXML<span style="color: #009900;">&#40;</span><span style="color: #003399;">Object</span> object, <span style="color: #003399;">String</span> filepath<span style="color: #009900;">&#41;</span>
		<span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">IOException</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #003399;">FileOutputStream</span> os <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span>
			os <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">FileOutputStream</span><span style="color: #009900;">&#40;</span>filepath<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
			getMarshaller<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">marshal</span><span style="color: #009900;">&#40;</span>object, <span style="color: #000000; font-weight: bold;">new</span> StreamResult<span style="color: #009900;">&#40;</span>os<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">finally</span> <span style="color: #009900;">&#123;</span>
			<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>os <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
				os.<span style="color: #006633;">close</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
			<span style="color: #009900;">&#125;</span>
		<span style="color: #009900;">&#125;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">Object</span> convertFromXMLToObject<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> xmlfile<span style="color: #009900;">&#41;</span> <span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">IOException</span> <span style="color: #009900;">&#123;</span>
&nbsp;
		<span style="color: #003399;">FileInputStream</span> is <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #339933;">;</span>
		<span style="color: #000000; font-weight: bold;">try</span> <span style="color: #009900;">&#123;</span>
			is <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">FileInputStream</span><span style="color: #009900;">&#40;</span>xmlfile<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
			<span style="color: #000000; font-weight: bold;">return</span> getUnmarshaller<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>.<span style="color: #006633;">unmarshal</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> StreamSource<span style="color: #009900;">&#40;</span>is<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span> <span style="color: #000000; font-weight: bold;">finally</span> <span style="color: #009900;">&#123;</span>
			<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>is <span style="color: #339933;">!=</span> <span style="color: #000066; font-weight: bold;">null</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
				is.<span style="color: #006633;">close</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
			<span style="color: #009900;">&#125;</span>
		<span style="color: #009900;">&#125;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #009900;">&#125;</span></pre></div></div><h4>4. Spring Configuration</h4><p>In Spring&#8217;s bean configuration file, inject <code>CastorMarshaller</code> as the XML binding framework.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;XMLConverter&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.core.XMLConverter&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;marshaller&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;castorMarshaller&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;unmarshaller&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;castorMarshaller&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;castorMarshaller&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.oxm.castor.CastorMarshaller&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>5. Test</h4><p>Run it.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.core</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">java.io.IOException</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.ApplicationContext</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.support.ClassPathXmlApplicationContext</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.core.model.Customer</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> App <span style="color: #009900;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">private</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000000; font-weight: bold;">final</span> <span style="color: #003399;">String</span> XML_FILE_NAME <span style="color: #339933;">=</span> <span style="color: #0000ff;">&quot;customer.xml&quot;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args<span style="color: #009900;">&#41;</span> <span style="color: #000000; font-weight: bold;">throws</span> <span style="color: #003399;">IOException</span> <span style="color: #009900;">&#123;</span>
		ApplicationContext appContext <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> ClassPathXmlApplicationContext<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;App.xml&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		XMLConverter converter <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>XMLConverter<span style="color: #009900;">&#41;</span> appContext.<span style="color: #006633;">getBean</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;XMLConverter&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		Customer customer <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> Customer<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		customer.<span style="color: #006633;">setName</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;mkyong&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		customer.<span style="color: #006633;">setAge</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">30</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		customer.<span style="color: #006633;">setFlag</span><span style="color: #009900;">&#40;</span><span style="color: #000066; font-weight: bold;">true</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		customer.<span style="color: #006633;">setAddress</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;This is address&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Convert Object to XML!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #666666; font-style: italic;">//from object to XML file</span>
		converter.<span style="color: #006633;">convertFromObjectToXML</span><span style="color: #009900;">&#40;</span>customer, XML_FILE_NAME<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Done <span style="color: #000099; font-weight: bold;">\n</span>&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Convert XML back to Object!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #666666; font-style: italic;">//from XML to object</span>
		Customer customer2 <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>Customer<span style="color: #009900;">&#41;</span>converter.<span style="color: #006633;">convertFromXMLToObject</span><span style="color: #009900;">&#40;</span>XML_FILE_NAME<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span>customer2<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Done&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Output</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;">Convert Object to XML<span style="color: #000000; font-weight: bold;">!</span>
Done 
&nbsp;
Convert XML back to Object<span style="color: #000000; font-weight: bold;">!</span>
Customer <span style="color: #7a0874; font-weight: bold;">&#91;</span><span style="color: #007800;">name</span>=mkyong, <span style="color: #007800;">age</span>=<span style="color: #000000;">30</span>, <span style="color: #007800;">flag</span>=<span style="color: #c20cb9; font-weight: bold;">true</span>, <span style="color: #007800;">address</span>=This is address<span style="color: #7a0874; font-weight: bold;">&#93;</span>
Done</pre></div></div><p>The following XML file &#8220;<strong>customer.xml</strong>&#8221; is generated in your project root folder.</p><p><em>File : customer.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span> <span style="color: #000066;">encoding</span>=<span style="color: #ff0000;">&quot;UTF-8&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;customer</span> <span style="color: #000066;">flag</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #000066;">age</span>=<span style="color: #ff0000;">&quot;30&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;address<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>This is address<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/address<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;name<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>mkyong<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/name<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/customer<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>Castor XML Mapping</h4><p>Wait, why flag and age are converted as attribute? Is that a way to control which field should use as attribute or element? Of course, you can use <a href="http://www.castor.org/xml-mapping.html target="_blank"">Castor XML mapping</a> to define the relationship between Object and XML.</p><p>Create following mapping file, and put it into your project classpath.</p><p><em>File : mapping.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;class</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;com.mkyong.core.model.Customer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;map-to</span> <span style="color: #000066;">xml</span>=<span style="color: #ff0000;">&quot;customer&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;field</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;age&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;integer&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bind-xml</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;age&quot;</span> <span style="color: #000066;">node</span>=<span style="color: #ff0000;">&quot;attribute&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/field<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;field</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;flag&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;boolean&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bind-xml</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;flag&quot;</span> <span style="color: #000066;">node</span>=<span style="color: #ff0000;">&quot;element&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/field<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;field</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;name&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bind-xml</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;name&quot;</span> <span style="color: #000066;">node</span>=<span style="color: #ff0000;">&quot;element&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/field<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;field</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;address&quot;</span> <span style="color: #000066;">type</span>=<span style="color: #ff0000;">&quot;string&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
			<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bind-xml</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;address&quot;</span> <span style="color: #000066;">node</span>=<span style="color: #ff0000;">&quot;element&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/field<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/class<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/mapping<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>In Spring bean configuration file, inject above <strong>mapping.xml</strong> into CastorMarshaller via &#8220;<strong>mappingLocation</strong>&#8220;.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;XMLConverter&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.core.XMLConverter&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;marshaller&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;castorMarshaller&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;unmarshaller&quot;</span> <span style="color: #000066;">ref</span>=<span style="color: #ff0000;">&quot;castorMarshaller&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;castorMarshaller&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;org.springframework.oxm.castor.CastorMarshaller&quot;</span> <span style="color: #000000; font-weight: bold;">&gt;</span></span>
		<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;property</span> <span style="color: #000066;">name</span>=<span style="color: #ff0000;">&quot;mappingLocation&quot;</span> <span style="color: #000066;">value</span>=<span style="color: #ff0000;">&quot;classpath:mapping.xml&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/bean<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Test it again, the XML file &#8220;<strong>customer.xml</strong>&#8221; will be updated.</p><p><em>File : customer.xml</em></p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;?xml</span> <span style="color: #000066;">version</span>=<span style="color: #ff0000;">&quot;1.0&quot;</span> <span style="color: #000066;">encoding</span>=<span style="color: #ff0000;">&quot;UTF-8&quot;</span><span style="color: #000000; font-weight: bold;">?&gt;</span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;customer</span> <span style="color: #000066;">age</span>=<span style="color: #ff0000;">&quot;30&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;flag<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>true<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/flag<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;name<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>mkyong<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/name<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
	<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;address<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>This is address<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/address<span style="color: #000000; font-weight: bold;">&gt;</span></span></span>
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/customer<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>Download Source Code</h4><div class="download"> Download it &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2011/06/Spring3-Object-XML-Mapping-Example.zip'>Spring3-Object-XML-Mapping-Example.zip</a> (7 KB)</div><h4>References</h4><ol><li><a href="http://www.castor.org/xml-mapping.html" target="_blank">Castor XML mapping</a></li><li><a href="http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/oxm.html" target="_blank">Spring Object/XML Mapping reference</a></li></ol><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/oxm/" rel="tag">oxm</a> <a href="http://www.mkyong.com/tag/spring3/" rel="tag">spring3</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/spring3/classnotfoundexception-org-apache-xml-serialize-xmlserializer/" title="ClassNotFoundException: org.apache.xml.serialize.XMLSerializer">ClassNotFoundException: org.apache.xml.serialize.XMLSerializer</a></li><li><a href="http://www.mkyong.com/spring3/classnotfoundexception-org-exolab-castor-xml-xmlexception/" title="ClassNotFoundException : org.exolab.castor.xml.XMLException">ClassNotFoundException : org.exolab.castor.xml.XMLException</a></li><li><a href="http://www.mkyong.com/spring3/spring-3-and-jsr-330-inject-and-named-example/" title="Spring 3 and JSR-330 @Inject and @Named example">Spring 3 and JSR-330 @Inject and @Named example</a></li><li><a href="http://www.mkyong.com/struts2/struts-2-spring-3-quartz-1-8-scheduler-example/" title="Struts 2 + Spring 3 + Quartz 1.8 Scheduler Example">Struts 2 + Spring 3 + Quartz 1.8 Scheduler Example</a></li><li><a href="http://www.mkyong.com/spring3/spring-3-mvc-hello-world-example/" title="Spring 3 MVC hello world example">Spring 3 MVC hello world example</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/java-mongodb-tutorials/' title='Java MongoDB Tutorials'><div class='images img-border img-mongodb'></div></a></li><li><a href='/tutorials/spring-mvc-tutorials/' title='Spring MVC Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/spring-security-tutorials/' title='Spring Security Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/spring-tutorials/' title='Spring Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/jsf-2-0-tutorials/' title='JSF 2 Tutorials'><div class='images img-border img-jsf2'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-139649"><div id="dsq-comment-header-139649" class="dsq-comment-header"> <cite id="dsq-cite-139649"> http://www.rubysolars.com <span id="dsq-author-user-139649">Ramesh</span> </cite></div><div id="dsq-comment-body-139649" class="dsq-comment-body"><div id="dsq-comment-message-139649" class="dsq-comment-message"><p>Thanks .. its very useful for me&#8230;.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-137229"><div id="dsq-comment-header-137229" class="dsq-comment-header"> <cite id="dsq-cite-137229"> <span id="dsq-author-user-137229">MSzczudlo</span> </cite></div><div id="dsq-comment-body-137229" class="dsq-comment-body"><div id="dsq-comment-message-137229" class="dsq-comment-message"><p>Hi!</p><p>I have one question.<br /> Is there any way to obtain object serialized to xml as pure string, not to file.<br /> Something like:</p><p>String xml = xmlConverter.getAsXml(obj)</p><p>Thanks</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-134332"><div id="dsq-comment-header-134332" class="dsq-comment-header"> <cite id="dsq-cite-134332"> <span id="dsq-author-user-134332">Abhijit</span> </cite></div><div id="dsq-comment-body-134332" class="dsq-comment-body"><div id="dsq-comment-message-134332" class="dsq-comment-message"><p>What if the xml file is nested?<br /> I mean if customer class has account as object and there is  element inside customer in xml file. Could you please suggest how would be the mapping in this particular case??</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-133935"><div id="dsq-comment-header-133935" class="dsq-comment-header"> <cite id="dsq-cite-133935"> <span id="dsq-author-user-133935">Saleem S</span> </cite></div><div id="dsq-comment-body-133935" class="dsq-comment-body"><div id="dsq-comment-message-133935" class="dsq-comment-message"><p>Hi mkyong,<br /> I&#8217;m getting following error when i run this project,<br /> Exception in thread &#8220;main&#8221; org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#8216;XMLConverter&#8217; defined in class path resource [App.xml]: Cannot resolve reference to bean &#8216;castorMarshaller&#8217; while setting bean property &#8216;marshaller&#8217;; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#8216;castorMarshaller&#8217; defined in class path resource [App.xml]: Instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/exolab/castor/xml/XMLException</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-132820"><div id="dsq-comment-header-132820" class="dsq-comment-header"> <cite id="dsq-cite-132820"> <span id="dsq-author-user-132820">Santhosh</span> </cite></div><div id="dsq-comment-body-132820" class="dsq-comment-body"><div id="dsq-comment-message-132820" class="dsq-comment-message"><p>Hi Mk,</p><p>Using Xtream from codehaus is made easy of conversion xml to object, json etc.<br /> <a href="http://xstream.codehaus.org/index.html" rel="nofollow">http://xstream.codehaus.org/index.html</a></p><p>Thanks,<br /> Santhosh</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-132455"><div id="dsq-comment-header-132455" class="dsq-comment-header"> <cite id="dsq-cite-132455"> <span id="dsq-author-user-132455">Nama</span> </cite></div><div id="dsq-comment-body-132455" class="dsq-comment-body"><div id="dsq-comment-message-132455" class="dsq-comment-message"><p>Hi, how can I use Castor and Xerces to marshall and unmarshall multiple objects? According to your example, what If i have multiple Customer objects and need multiple customer elements be generated in the XML file? Please advise.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-122984"><div id="dsq-comment-header-122984" class="dsq-comment-header"> <cite id="dsq-cite-122984"> <span id="dsq-author-user-122984">Subhakanta Nanda</span> </cite></div><div id="dsq-comment-body-122984" class="dsq-comment-body"><div id="dsq-comment-message-122984" class="dsq-comment-message"><p>Really you have explained very nicely.Thanks a lot :)</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-86151"><div id="dsq-comment-header-86151" class="dsq-comment-header"> <cite id="dsq-cite-86151"> <span id="dsq-author-user-86151">Nitin</span> </cite></div><div id="dsq-comment-body-86151" class="dsq-comment-body"><div id="dsq-comment-message-86151" class="dsq-comment-message"><p>Nice tutorial but I am not able to resolve the dependent jars .  Can you share the settings.xml or repository urls which I  can use to get the dependant jars.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-86176"><div id="dsq-comment-header-86176" class="dsq-comment-header"> <cite id="dsq-cite-86176"> http://www.mkyong.com <span id="dsq-author-user-86176">mkyong</span> </cite></div><div id="dsq-comment-body-86176" class="dsq-comment-body"><div id="dsq-comment-message-86176" class="dsq-comment-message"><p>Download the source code at the end of the article, it should contains everything you need.</p></div></div></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://poolborges.wordpress.com/2012/07/25/java-xml-binding-marshalling-unmarshaller/' rel='external nofollow' class='url'>Java XML Binding Marshalling UnMarshaller &laquo; Paulo Borges aka poolborges</a></p></li></li><li class="comment odd alt thread-even depth-1" id="dsq-comment-82277"><div id="dsq-comment-header-82277" class="dsq-comment-header"> <cite id="dsq-cite-82277"> <span id="dsq-author-user-82277">riz</span> </cite></div><div id="dsq-comment-body-82277" class="dsq-comment-body"><div id="dsq-comment-message-82277" class="dsq-comment-message"><p>Hey mkyong,</p><p>Thanks for all these awesome tutorials!!</p><p>In this example you are reading only one object from XML, but do you know how can I read a collection of customers from an XML file whose structure is as follows:</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"> <span style="color: #ddbb00;">&amp;lt;</span>?xml version=<span style="color: #ddbb00;">&amp;quot;</span>1.0<span style="color: #ddbb00;">&amp;quot;</span> encoding=<span style="color: #ddbb00;">&amp;quot;</span>UTF-8<span style="color: #ddbb00;">&amp;quot;</span>?<span style="color: #ddbb00;">&amp;gt;</span>
 <span style="color: #ddbb00;">&amp;lt;</span>customers<span style="color: #ddbb00;">&amp;gt;</span>
     <span style="color: #ddbb00;">&amp;lt;</span>customer age=<span style="color: #ddbb00;">&amp;quot;</span>26<span style="color: #ddbb00;">&amp;quot;&amp;gt;&amp;lt;</span>name<span style="color: #ddbb00;">&amp;gt;</span>user1<span style="color: #ddbb00;">&amp;lt;</span>/name<span style="color: #ddbb00;">&amp;gt;&amp;lt;</span>/customer<span style="color: #ddbb00;">&amp;gt;</span>
     <span style="color: #ddbb00;">&amp;lt;</span>customer age=<span style="color: #ddbb00;">&amp;quot;</span>27<span style="color: #ddbb00;">&amp;quot;&amp;gt;&amp;lt;</span>name<span style="color: #ddbb00;">&amp;gt;</span>user2<span style="color: #ddbb00;">&amp;lt;</span>/name<span style="color: #ddbb00;">&amp;gt;&amp;lt;</span>/customer<span style="color: #ddbb00;">&amp;gt;</span>
 <span style="color: #ddbb00;">&amp;lt;</span>/customers<span style="color: #ddbb00;">&amp;gt;</span></pre></div></div></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-126643"><div id="dsq-comment-header-126643" class="dsq-comment-header"> <cite id="dsq-cite-126643"> <span id="dsq-author-user-126643">@FlavioTroja</span> </cite></div><div id="dsq-comment-body-126643" class="dsq-comment-body"><div id="dsq-comment-message-126643" class="dsq-comment-message"><p>Me too.</p></div></div></li><li class="comment odd alt depth-2" id="dsq-comment-126646"><div id="dsq-comment-header-126646" class="dsq-comment-header"> <cite id="dsq-cite-126646"> <span id="dsq-author-user-126646">@FlavioTroja</span> </cite></div><div id="dsq-comment-body-126646" class="dsq-comment-body"><div id="dsq-comment-message-126646" class="dsq-comment-message"><p><a href="http://castor.codehaus.org/how-to-map-a-collection.html" rel="nofollow">http://castor.codehaus.org/how-to-map-a-collection.html</a></p></div></div></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/tutorials/spring-tutorials/' rel='external nofollow' class='url'>Spring Tutorial</a></p></li></li><li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-59885"><div id="dsq-comment-header-59885" class="dsq-comment-header"> <cite id="dsq-cite-59885"> <span id="dsq-author-user-59885">sudheer</span> </cite></div><div id="dsq-comment-body-59885" class="dsq-comment-body"><div id="dsq-comment-message-59885" class="dsq-comment-message"><p>Hi mkyong,</p><p>For the above Spring Object/XML mapping example ,it needs another dependency i.e</p><p> javax.xml.stream<br /> com.springsource.javax.xml.stream</p><p> 1.0.1</p><p>or else it showing the errors.</p><p>Thanks,</p><p>sudheer</p></div></div><ul class="children"><li class="comment odd alt depth-2" id="dsq-comment-83160"><div id="dsq-comment-header-83160" class="dsq-comment-header"> <cite id="dsq-cite-83160"> <span id="dsq-author-user-83160">Woolley</span> </cite></div><div id="dsq-comment-body-83160" class="dsq-comment-body"><div id="dsq-comment-message-83160" class="dsq-comment-message"><p>Hi mkyong,</p><p>Spring Object/XML mapping example Compile Fail</p><p>?this.unmarshaller.unmarshal(new StreamSource(is));?<br /> Caused by: org.xml.sax.SAXException: The class for the root element &#8216;customer&#8217; could not be found.</p></div></div></li><li class="comment even depth-2" id="dsq-comment-130187"><div id="dsq-comment-header-130187" class="dsq-comment-header"> <cite id="dsq-cite-130187"> <span id="dsq-author-user-130187">AquaDrehz</span> </cite></div><div id="dsq-comment-body-130187" class="dsq-comment-body"><div id="dsq-comment-message-130187" class="dsq-comment-message"><p>This example work fine in Eclipse Juno.<br /> I just need to configure project facet propeties into JBoss maven integration.<br /> After run as Goal: install<br /> Everything work fine.</p><p>Hope this help for beginner.</p></div></div></li></ul></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/spring3/spring-objectxml-mapping-example/';var disqus_identifier='9382 http://www.mkyong.com/?p=9382';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Spring Object\/XML mapping example";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=9382';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Spring Tutorial",'author_url':"http:\/\/www.mkyong.com\/tutorials\/spring-tutorials\/",'date':"07\/14\/2011 11:33 PM",'excerpt':"[...] 3.0, Object to XML mapping (OXM) is moved from the Spring Web Services to the core Spring Framework.Spring Object\/XML &hellip;",'type':"pingback"},{'author_name':"Java XML Binding Marshalling UnMarshaller &laquo; Paulo Borges aka poolborges",'author_url':"http:\/\/poolborges.wordpress.com\/2012\/07\/25\/java-xml-binding-marshalling-unmarshaller\/",'date':"07\/26\/2012 06:13 AM",'excerpt':"[...] Spring OXM Example - http:\/\/www.mkyong.com\/spring3\/spring-objectxml-mapping-example\/  (GOSTEI) [...] ",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/spring3\/spring-objectxml-mapping-example\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="9382" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>