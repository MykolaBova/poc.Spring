<!DOCTYPE html><html lang="en"><title>Spring bean scopes example</title><head><link rel="stylesheet" type="text/css" href="http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include.b22e3d.css" media="all" /><meta name="generator" content="WordPress 3.5.1" /><meta name="google-site-verification" content="VsVvSTVAouAluNodWeR30BeIWTr4c84HvN4Fn9WBsak" /><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/wp-content/themes/mkyong-ma/images/favicon.ico" /><script type='text/javascript' src='http://www.mkyong.com/wp-includes/js/comment-reply.min.js?ver=3.8.3'></script><link rel='prev' title='Spring AOP Example &#8211; Pointcut , Advisor' href='http://www.mkyong.com/spring/spring-aop-example-pointcut-advisor/' /><link rel='next' title='How to download JavaMail API from Maven' href='http://www.mkyong.com/maven/how-to-download-javamail-api-from-maven/' /><link rel='shortlink' href='http://www.mkyong.com/?p=3877' /><meta name="keywords" content="spring" /><link rel="canonical" href="http://www.mkyong.com/spring/spring-bean-scopes-examples/" /></head><body><div id="header-top"><div class="container"><div id="header-top-container"><ul><li><a href="/advertise-on-mkyong/" rel="nofollow">Advertise</a></li><li><a href="/contact-mkyong/" rel="nofollow">Contact Us</a></li><li><a href="/write-for-us/" rel="nofollow">Write For Us</a></li><li> <a href="http://feeds.feedburner.com/FeedForMkyong" rel="nofollow" title="RSS feed">RSS feed</a></li><li><a href="/blog/donate-to-charity/" rel="nofollow">Donate</a></li></ul></div></div></div><div id="header"><div class="container"><div id="header-logo"> <a href="/" title="mkyong.com"><div id="logo" ></div> </a></div><div id="header-banner"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div><div id="menu"><div class="container"><ul><li class="menu-allround"> <a href="/">Home</a></li><li class="menu-allround"> <a href="/all-tutorials-on-mkyong-com/">All Tutorials</a></li><li class="menu-topround"> <a href="#">Java Core</a><div id="java-menu" class="dropdown"><div class="tut-title">Java Core Tutorials</div><div class="dropdown-item"> <a href="/tag/java/"><div class="images img-border img-java img-holder"></div> </a><div>1. <a href="/tutorials/java-io-tutorials/">Java I/O</a></div><div>2. <a href="/tutorials/java-xml-tutorials/">Java XML</a></div><div>3. <a href="/tutorials/java-json-tutorials/">Java JSON</a></div><div>4. <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a></div><div>5. <a href="/tutorials/jdbc-tutorials/">JDBC</a></div><div>6. <a href="/tag/java/">Java Misc</a></div></div></div></li><li class="menu-topround"> <a href="#">JSF</a><div id="jsf-menu" class="dropdown"><div class="tut-title">JSF Tutorials</div><div class="dropdown-item"><a href="/tutorials/jsf-2-0-tutorials/"><div class="images img-border img-jsf2 img-holder"></div> </a><div>1. <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a></div></div></div></li><li class="menu-topround"> <a href="#">Spring</a><div id="spring-menu" class="dropdown"><div class="tut-title">Spring Tutorials</div><div class="dropdown-item"> <a href="/tutorials/spring-tutorials/"><div class="images img-border img-spring img-holder"></div> </a><div>1. <a href="/tutorials/spring-tutorials/">Spring Core</a></div><div>2. <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a></div><div>3. <a href="/tutorials/spring-security-tutorials/">Spring Security</a></div><div>4. <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a></div><div>5. <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a></div></div></div></li><li class="menu-topround"> <a href="#">Hibernate</a><div id="hibernate-menu" class="dropdown"><div class="tut-title">Hibernate Tutorials</div><div class="dropdown-item"> <a href="/tutorials/hibernate-tutorials/"><div class="images img-border img-hibernate img-holder"></div> </a><div>1. <a href="/tutorials/hibernate-tutorials/">Hibernate Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Struts</a><div id="struts-menu" class="dropdown"><div class="tut-title">Struts Tutorials</div><div class="dropdown-item"><a href="/tutorials/struts-2-tutorials/"><div class="images img-border img-struts img-holder"></div> </a><div>1. <a href="/tutorials/struts-tutorials/">Struts 1</a></div><div>2. <a href="/tutorials/struts-2-tutorials/">Struts 2</a></div></div></div></li><li class="menu-topround"> <a href="#">Android</a><div id="android-menu" class="dropdown"><div class="tut-title">Android Tutorials</div><div class="dropdown-item"> <a href="/tutorials/android-tutorial/"><div class="images img-border img-android img-holder"></div> </a><div>1. <a href="/tutorials/android-tutorial/">Android Core</a></div></div></div></li><li class="menu-topround"> <a href="#">Others</a><div id="misc-menu" class="dropdown"><div class="dropdown-item"><ol><li><a href="/tutorials/wicket-tutorials/">Apache Wicket</a></li><li><a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a></li><li><a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></li><li><a href="/tutorials/maven-tutorials/">Maven</a></li><li><a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a></li><li><a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a></li><li><a href="/tutorials/junit-tutorials/">jUnit</a></li><li><a href="/tutorials/testng-tutorials/">TestNG</a></li><li><a href="/tutorials/jquery-tutorials/">jQuery</a></li><li><a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></li></ol></div></div></li></ul><div style="float:right;margin:4px 0"><form action="/search/" id="cse-search-box"><div> <input type="hidden" name="cx" value="partner-pub-2836379775501347:3714346998" /> <input type="hidden" name="cof" value="FORID:10" /> <input type="hidden" name="ie" value="UTF-8" /> <input type="text" name="q" size="30" style="height:20px;font-size:10pt;" /> <input type="submit" name="sa" value="Search" style="height:25px;"  /></div></form></div></div></div><div class="container"><div class="row"><div class="span10"><!-- google_ad_section_start(name=mkyongregion) --><div id="post-container"> <article class="post" id="post-3877"><header><h1> Spring bean scopes example</h1><div class='post-meta'><div id="small-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=40&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div><div> Posted on <time datetime="2010-03-26T12:09:34+00:00">March 26, 2010</time><span> , &nbsp;&nbsp;&nbsp; Last modified : January 6, 2012 </span><div> By <a href="http://www.mkyong.com/author/mkyong/" rel="author">mkyong</a></div></div></div> </header><div class="post-content"><div id='dd_light_ajax_float'><div id='dd_content_wrap'><div class='dd_light_button'><div class='dd-loading' id='dd-google' ></div><div class='g-plusone' data-size='tall'></div></div><div class='dd_light_button'><div class='dd-loading' id='dd-fblike' ></div><iframe id='dd-fblike-iframe' src='' height='0' width='0' scrolling='no' frameborder='0'></iframe></div><div class='dd_light_button'><div class='dd-loading' id='dd-twitter' ></div><a href='https://twitter.com/share' class='twitter-share-button' data-via='mkyong' data-count='vertical'></a></div></div></div><p>In Spring, bean scope is used to decide which type of bean instance should be return from Spring container back to the caller.</p><p>5 types of bean scopes supported :</p><ol><li>singleton &#8211; Return a single bean instance per Spring IoC container</li><li>prototype &#8211; Return a new bean instance each time when requested</li><li>request &#8211; Return a single bean instance per HTTP request. *</li><li>session &#8211; Return a single bean instance per HTTP session. *</li><li>globalSession &#8211; Return a single bean instance per global HTTP session. *</li></ol><p>In most cases, you may only deal with the Spring&#8217;s core scope &#8211; singleton and prototype, and the default scope is singleton.</p><p><em>P.S * means only valid in the context of a web-aware Spring ApplicationContext</em></p><h3>Singleton vs Prototype</h3><p>Here&#8217;s an example to show you what&#8217;s the different between bean scope : <strong>singleton</strong> and <strong>prototype</strong>.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.customer.services</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> CustomerService 
<span style="color: #009900;">&#123;</span>
	<span style="color: #003399;">String</span> message<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getMessage<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> message<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setMessage<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> message<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">message</span> <span style="color: #339933;">=</span> message<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><h4>1. Singleton example</h4><p>If no bean scope is specified in bean configuration file, default to singleton.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
       <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> </span>
<span style="color: #009900;">            <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.services.CustomerService&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Run it</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.common</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.ApplicationContext</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.support.ClassPathXmlApplicationContext</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">com.mkyong.customer.services.CustomerService</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> App 
<span style="color: #009900;">&#123;</span>
    <span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">void</span> main<span style="color: #009900;">&#40;</span> <span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> args <span style="color: #009900;">&#41;</span>
    <span style="color: #009900;">&#123;</span>
    	ApplicationContext context <span style="color: #339933;">=</span> 
    	 <span style="color: #000000; font-weight: bold;">new</span> ClassPathXmlApplicationContext<span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #003399;">String</span><span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span> <span style="color: #009900;">&#123;</span><span style="color: #0000ff;">&quot;Spring-Customer.xml&quot;</span><span style="color: #009900;">&#125;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    	CustomerService custA <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>CustomerService<span style="color: #009900;">&#41;</span>context.<span style="color: #006633;">getBean</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;customerService&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    	custA.<span style="color: #006633;">setMessage</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Message by custA&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    	<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Message : &quot;</span> <span style="color: #339933;">+</span> custA.<span style="color: #006633;">getMessage</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
    	<span style="color: #666666; font-style: italic;">//retrieve it again</span>
    	CustomerService custB <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span>CustomerService<span style="color: #009900;">&#41;</span>context.<span style="color: #006633;">getBean</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;customerService&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    	<span style="color: #003399;">System</span>.<span style="color: #006633;">out</span>.<span style="color: #006633;">println</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;Message : &quot;</span> <span style="color: #339933;">+</span> custB.<span style="color: #006633;">getMessage</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Output</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;">Message : Message by custA
Message : Message by custA</pre></div></div><p>Since the bean &#8216;customerService&#8217; is in singleton scope, the second retrieval by &#8216;custB&#8217; will display the message set by &#8216;custA&#8217; also, even it&#8217;s retrieve by a new getBean() method. In singleton, only a single instance per Spring IoC container, no matter how many time you retrieve it with getBean(), it will always return the same instance.</p><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7391621200" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>2. Prototype example</h4><p>If you want a new &#8216;customerService&#8217; bean instance, every time you call it, use prototype instead.</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
   <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;bean</span> <span style="color: #000066;">id</span>=<span style="color: #ff0000;">&quot;customerService&quot;</span> <span style="color: #000066;">class</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer.services.CustomerService&quot;</span> </span>
<span style="color: #009900;">         <span style="color: #000066;">scope</span>=<span style="color: #ff0000;">&quot;prototype&quot;</span><span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><p>Run it again</p><div class="wp_syntax"><div class="code"><pre class="bash" style="font-family:monospace;">Message : Message by custA
Message : null</pre></div></div><p>In prototype scope, you will have a new instance for each <code>getBean()</code> method called.</p><div><div style="margin:20px 0;"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="3642936086" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div></div><h4>3. Bean scopes annotation</h4><p>You can also use annotation to define your bean scope.</p><div class="wp_syntax"><div class="code"><pre class="java" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">package</span> <span style="color: #006699;">com.mkyong.customer.services</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.context.annotation.Scope</span><span style="color: #339933;">;</span>
<span style="color: #000000; font-weight: bold;">import</span> <span style="color: #006699;">org.springframework.stereotype.Service</span><span style="color: #339933;">;</span>
&nbsp;
@Service
@Scope<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;prototype&quot;</span><span style="color: #009900;">&#41;</span>
<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000000; font-weight: bold;">class</span> CustomerService 
<span style="color: #009900;">&#123;</span>
	<span style="color: #003399;">String</span> message<span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #003399;">String</span> getMessage<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">return</span> message<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #000000; font-weight: bold;">public</span> <span style="color: #000066; font-weight: bold;">void</span> setMessage<span style="color: #009900;">&#40;</span><span style="color: #003399;">String</span> message<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">this</span>.<span style="color: #006633;">message</span> <span style="color: #339933;">=</span> message<span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></div></div><p>Enable auto component scanning</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;beans</span> <span style="color: #000066;">xmlns</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:xsi</span>=<span style="color: #ff0000;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xmlns:context</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/context&quot;</span></span>
<span style="color: #009900;">	<span style="color: #000066;">xsi:schemaLocation</span>=<span style="color: #ff0000;">&quot;http://www.springframework.org/schema/beans</span>
<span style="color: #009900;">	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</span>
<span style="color: #009900;">	http://www.springframework.org/schema/context</span>
<span style="color: #009900;">	http://www.springframework.org/schema/context/spring-context-2.5.xsd&quot;</span><span style="color: #000000; font-weight: bold;">&gt;</span></span>
&nbsp;
       <span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;context:component-scan</span> <span style="color: #000066;">base-package</span>=<span style="color: #ff0000;">&quot;com.mkyong.customer&quot;</span> <span style="color: #000000; font-weight: bold;">/&gt;</span></span>
&nbsp;
<span style="color: #009900;"><span style="color: #000000; font-weight: bold;">&lt;/beans<span style="color: #000000; font-weight: bold;">&gt;</span></span></span></pre></div></div><h4>Download Source Code</h4><div class="download"> Download It &#8211; <a href='http://www.mkyong.com/wp-content/uploads/2010/03/Spring-Bean-Scopes-Example.zip'>Spring-Bean-Scopes-Example.zip</a> (7 KB)</div><h4>Reference</h4><ol><li><a href="http://static.springsource.org/spring/docs/2.0.x/reference/beans.html#beans-factory-scopes" target="_blank">http://static.springsource.org/spring/docs/2.0.x/reference/beans.html#beans-factory-scopes</a></li></ol><div id="post-meta-extra"> Tags : <span class="post-tag"><a href="http://www.mkyong.com/tag/spring/" rel="tag">spring</a></span></div><div style="margin:20px 0;"><center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7146814087" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></center></div><div id="author-info"><div id="big-author-avatar"> <img alt='' src='http://0.gravatar.com/avatar/622c70d2908e68ecc070ca6754245bb2?s=100&amp;d=http%3A%2F%2Fwww.mkyong.com%2Fwp-content%2Fthemes%2Fmkyongnew%2Fimages%2Favatar-guest.jpg%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div><div id="author-description"><div id="author-link"> <a href="http://www.mkyong.com/author/mkyong/" rel="author"> mkyong </a></div> Founder of Mkyong.com, love Java and open source stuff. Follow him on <a href="https://twitter.com/mkyong">Twitter</a>, or befriend him on <a href="http://www.facebook.com/java.tutorial">Facebook</a> or <a href="https://plus.google.com/110948163568945735692?rel=author">Google Plus</a>. If you like my tutorials, consider making a <a href="http://www.mkyong.com/blog/donate-to-charity/">donation to the charity</a>, thanks.</div><div class="clearboth"></div></div><div id="post-after-related-post"><h4  class="related_post_title">Related Posts</h4><ul class="related_post"><li><a href="http://www.mkyong.com/spring/how-to-autowire-datasource-in-jdbcdaosupport/" title="How to autowire DataSource in JdbcDaoSupport">How to autowire DataSource in JdbcDaoSupport</a></li><li><a href="http://www.mkyong.com/unittest/testng-spring-integration-example/" title="TestNG + Spring Integration Example">TestNG + Spring Integration Example</a></li><li><a href="http://www.mkyong.com/spring/spring-and-java-thread-example/" title="Spring and Java Thread example">Spring and Java Thread example</a></li><li><a href="http://www.mkyong.com/jsf2/spring-autowired-into-jsf-custom-validator/" title="Spring @Autowired into JSF custom validator">Spring @Autowired into JSF custom validator</a></li><li><a href="http://www.mkyong.com/spring3/spring-3-and-jsr-330-inject-and-named-example/" title="Spring 3 and JSR-330 @Inject and @Named example">Spring 3 and JSR-330 @Inject and @Named example</a></li></ul></div><div id="post-after-popular-post"><h4>Popular Posts</h4><ul><li><a href="/featured/top-8-java-people-you-should-know/">Top 8 Java People You Should Know</a></li><li><a href="/featured/top-20-java-websites/">Top 20 Java Websites</a></li><li><a href="/featured/top-5-free-java-ebooks/">Top 5 Free Java eBooks</a></li><li><a href="/regular-expressions/10-java-regular-expression-examples-you-should-know/">Top 10 Java Regular Expression Examples</a></li><li><a href="/featured/top-5-open-source-qa-systems/">Top 5 Open Source Q&A Systems</a></li></ul></div><div class="clearboth"></div></div></article><div id='st-tutorial-list'><div id='st-tutorial-title'> You might also like following tutorials :</div><ul><li><a href='/tutorials/spring-tutorials/' title='Spring Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/java-json/' title='Java JSON Tutorials'><div class='images img-border img-json'></div></a></li><li><a href='/tutorials/hibernate-tutorials/' title='Hibernate Tutorials'><div class='images img-border img-hibernate'></div></a></li><li><a href='/tutorials/spring-security-tutorials/' title='Spring Security Tutorials'><div class='images img-border img-spring'></div></a></li><li><a href='/tutorials/google-app-engine-tutorial/' title='GAE Tutorials'><div class='images img-border img-gae'></div></a></li></ul><div class='clearboth'></div></div><div style="padding:0 20px 20px 0"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="728x90" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><div id="post-comments"><div id="disqus_thread"><div id="dsq-content"><ul id="dsq-comments"><li class="comment even thread-even depth-1" id="dsq-comment-139188"><div id="dsq-comment-header-139188" class="dsq-comment-header"> <cite id="dsq-cite-139188"> <span id="dsq-author-user-139188">dhruva</span> </cite></div><div id="dsq-comment-body-139188" class="dsq-comment-body"><div id="dsq-comment-message-139188" class="dsq-comment-message"><p>Good tutorials!<br /> valuable links too I see in comments. Thank you folks.<br /> but where are we setting message property values in code eg singleton case? :)</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-137766"><div id="dsq-comment-header-137766" class="dsq-comment-header"> <cite id="dsq-cite-137766"> <span id="dsq-author-user-137766">Ivan</span> </cite></div><div id="dsq-comment-body-137766" class="dsq-comment-body"><div id="dsq-comment-message-137766" class="dsq-comment-message"><p>Gracias mkyong, excelentes informacion</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-131926"><div id="dsq-comment-header-131926" class="dsq-comment-header"> <cite id="dsq-cite-131926"> http://www.defrog.it <span id="dsq-author-user-131926">Luca</span> </cite></div><div id="dsq-comment-body-131926" class="dsq-comment-body"><div id="dsq-comment-message-131926" class="dsq-comment-message"><p>You saved my life man!!! :)</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-131714"><div id="dsq-comment-header-131714" class="dsq-comment-header"> <cite id="dsq-cite-131714"> <span id="dsq-author-user-131714">Jack</span> </cite></div><div id="dsq-comment-body-131714" class="dsq-comment-body"><div id="dsq-comment-message-131714" class="dsq-comment-message"><p>How do you access the annotation defined bean?</p><p>I followed the above steps to make the CustomerService class @Service and @Scope(&#8220;prototype&#8221;). However, in the App.java&#8217;s main method I use the same CustomerService custA = (CustomerService)context.getBean(&#8220;customerService&#8221;);<br /> custA.setMessage(&#8220;Message by custA&#8221;);<br /> System.out.println(&#8220;Message : &#8221; + custA.getMessage());</p><p>It gives me the runtime exception : org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named &#8216;CustomerServiceAnnotation&#8217; is defined</p></div></div><ul class="children"><li class="comment even depth-2" id="dsq-comment-131715"><div id="dsq-comment-header-131715" class="dsq-comment-header"> <cite id="dsq-cite-131715"> <span id="dsq-author-user-131715">Jack</span> </cite></div><div id="dsq-comment-body-131715" class="dsq-comment-body"><div id="dsq-comment-message-131715" class="dsq-comment-message"><p>After second thought, looks like ClassPathXmlApplicationContext is not appropriate to be context for annotation bean. Hence context.getBean(“customerService”); does not make any sense. So which context class should I use in this case?</p><p>Many thanks</p></div></div><ul class="children"><li class="comment odd alt depth-3" id="dsq-comment-133541"><div id="dsq-comment-header-133541" class="dsq-comment-header"> <cite id="dsq-cite-133541"> <span id="dsq-author-user-133541">Sagar Dahagamwar</span> </cite></div><div id="dsq-comment-body-133541" class="dsq-comment-body"><div id="dsq-comment-message-133541" class="dsq-comment-message"><p>You have to use : AnnotationConfigApplicationContext instead of ClassPathXmlApplicationContext. This will solve your problem</p></div></div></li></ul></li></ul></li><li class="comment even thread-even depth-1" id="dsq-comment-131674"><div id="dsq-comment-header-131674" class="dsq-comment-header"> <cite id="dsq-cite-131674"> http://<a class="__cf_email__" href="http://www.cloudflare.com/email-protection" data-cfemail="72141b1c161f1705131e1e1732151f131b1e5c111d1f">[email&nbsp;protected]</a><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();
/* ]]> */
</script> <span id="dsq-author-user-131674"><a class="__cf_email__" href="http://www.cloudflare.com/email-protection" data-cfemail="a3c5cacdc7cec6d4c2cfcfc6e3c4cec2cacf8dc0ccce">[email&nbsp;protected]</a><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();
/* ]]> */
</script></span> </cite></div><div id="dsq-comment-body-131674" class="dsq-comment-body"><div id="dsq-comment-message-131674" class="dsq-comment-message"><p>Great explanation sire .</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-128986"><div id="dsq-comment-header-128986" class="dsq-comment-header"> <cite id="dsq-cite-128986"> <span id="dsq-author-user-128986">Ahmed</span> </cite></div><div id="dsq-comment-body-128986" class="dsq-comment-body"><div id="dsq-comment-message-128986" class="dsq-comment-message"><p>This link clarifies the use of</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #ddbb00;">&amp;lt;</span>context:annotation-config /<span style="color: #ddbb00;">&amp;gt;</span></pre></div></div><p> and</p><div class="wp_syntax"><div class="code"><pre class="xml" style="font-family:monospace;"><span style="color: #ddbb00;">&amp;lt;</span>context:component-scan<span style="color: #ddbb00;">&amp;gt;</span></pre></div></div><p>with a good simple example:</p><p><a href="http://stackoverflow.com/questions/7414794/difference-between-contextannotation-config-vs-contextcomponent-scan" rel="nofollow">http://stackoverflow.com/questions/7414794/difference-between-contextannotation-config-vs-contextcomponent-scan</a></p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-128985"><div id="dsq-comment-header-128985" class="dsq-comment-header"> <cite id="dsq-cite-128985"> <span id="dsq-author-user-128985">Ahmed</span> </cite></div><div id="dsq-comment-body-128985" class="dsq-comment-body"><div id="dsq-comment-message-128985" class="dsq-comment-message"><p>This link clarifies the use of   and<br /> with a good simple example:</p><p><a href="http://stackoverflow.com/questions/7414794/difference-between-contextannotation-config-vs-contextcomponent-scan" rel="nofollow">http://stackoverflow.com/questions/7414794/difference-between-contextannotation-config-vs-contextcomponent-scan</a></p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://wp.mlab.tw/?p=447' rel='external nofollow' class='url'>??????you cannot access components belong to other desktop | MLab</a></p></li></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-123439"><div id="dsq-comment-header-123439" class="dsq-comment-header"> <cite id="dsq-cite-123439"> http://abdennour-insat.blogspot.com/ <span id="dsq-author-user-123439">Abdennour</span> </cite></div><div id="dsq-comment-body-123439" class="dsq-comment-body"><div id="dsq-comment-message-123439" class="dsq-comment-message"><p>another Scope which is thread<br /> <a href="http://abdennour-insat.blogspot.com/2012/11/spring-bean-thread-scope.html" rel="nofollow">http://abdennour-insat.blogspot.com/2012/11/spring-bean-thread-scope.html</a></p></div></div></li><li class="post pingback"><p>Pingback: <a href='http://tsangsaicheong.wordpress.com/2012/10/29/spring-bean-singleton-default-vs-prototype/' rel='external nofollow' class='url'>Spring bean singleton (default )vs prototype | fatkwong14&#039;s Blog</a></p></li></li><li class="comment even thread-even depth-1" id="dsq-comment-122082"><div id="dsq-comment-header-122082" class="dsq-comment-header"> <cite id="dsq-cite-122082"> <span id="dsq-author-user-122082">mike</span> </cite></div><div id="dsq-comment-body-122082" class="dsq-comment-body"><div id="dsq-comment-message-122082" class="dsq-comment-message"><p>Thanks)</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-86313"><div id="dsq-comment-header-86313" class="dsq-comment-header"> <cite id="dsq-cite-86313"> <span id="dsq-author-user-86313">Naidu</span> </cite></div><div id="dsq-comment-body-86313" class="dsq-comment-body"><div id="dsq-comment-message-86313" class="dsq-comment-message"><p>hi young good job .can u provide GWT And hadoop tutorials</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-84136"><div id="dsq-comment-header-84136" class="dsq-comment-header"> <cite id="dsq-cite-84136"> <span id="dsq-author-user-84136">ida</span> </cite></div><div id="dsq-comment-body-84136" class="dsq-comment-body"><div id="dsq-comment-message-84136" class="dsq-comment-message"><p>Hi,<br /> What if I want to dispose a singleton scope bean. is that possible?<br /> thanks.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-84080"><div id="dsq-comment-header-84080" class="dsq-comment-header"> <cite id="dsq-cite-84080"> <span id="dsq-author-user-84080">Narayan</span> </cite></div><div id="dsq-comment-body-84080" class="dsq-comment-body"><div id="dsq-comment-message-84080" class="dsq-comment-message"><p>I facing some design challenge :-</p><p>I have to instantiate a scoped bean after server start-up. It being a scoped bean doesn&#8217;t come up automatically.<br /> It is subscriber class and needs to be instantiated as soon as the server starts and it has to be scoped for the processing further.</p><p>Thanks in advance.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-83184"><div id="dsq-comment-header-83184" class="dsq-comment-header"> <cite id="dsq-cite-83184"> <span id="dsq-author-user-83184">Anonymous</span> </cite></div><div id="dsq-comment-body-83184" class="dsq-comment-body"><div id="dsq-comment-message-83184" class="dsq-comment-message"><p>Spring 3.0 has another scope called thread Scope<br /> source: <a href="http://javarevisited.blogspot.sg/2012/05/what-is-bean-scope-in-spring-mvc.html" rel="nofollow">http://javarevisited.blogspot.sg/2012/05/what-is-bean-scope-in-spring-mvc.html</a></p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-80963"><div id="dsq-comment-header-80963" class="dsq-comment-header"> <cite id="dsq-cite-80963"> <span id="dsq-author-user-80963">mty</span> </cite></div><div id="dsq-comment-body-80963" class="dsq-comment-body"><div id="dsq-comment-message-80963" class="dsq-comment-message"><p>request – Return a single bean instance per HTTP request. *?</p><p>It&#8217;s like prototype.</p></div></div></li><li class="comment even thread-even depth-1" id="dsq-comment-79919"><div id="dsq-comment-header-79919" class="dsq-comment-header"> <cite id="dsq-cite-79919"> <span id="dsq-author-user-79919">Anand</span> </cite></div><div id="dsq-comment-body-79919" class="dsq-comment-body"><div id="dsq-comment-message-79919" class="dsq-comment-message"><p>Many thanks MKyong for posting great tutorials.</p></div></div></li><li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-75778"><div id="dsq-comment-header-75778" class="dsq-comment-header"> <cite id="dsq-cite-75778"> <span id="dsq-author-user-75778">belun</span> </cite></div><div id="dsq-comment-body-75778" class="dsq-comment-body"><div id="dsq-comment-message-75778" class="dsq-comment-message"><p>typos here:</p><p> * what’s the diffreent between bean scopr singleton and prototype.</p></div></div><ul class="children"><li class="comment byuser comment-author-mkyong bypostauthor even depth-2" id="dsq-comment-75862"><div id="dsq-comment-header-75862" class="dsq-comment-header"> <cite id="dsq-cite-75862"> http://www.mkyong.com <span id="dsq-author-user-75862">mkyong</span> </cite></div><div id="dsq-comment-body-75862" class="dsq-comment-body"><div id="dsq-comment-message-75862" class="dsq-comment-message"><p>Thanks, article is updated.</p></div></div></li></ul></li><li class="post pingback"><p>Pingback: <a href='http://www.mkyong.com/tutorials/spring-tutorials/' rel='external nofollow' class='url'>Spring Tutorials | Tutorials</a></p></li></li></ul></div></div><script type="text/javascript">/*<![CDATA[*/var disqus_url='http://www.mkyong.com/spring/spring-bean-scopes-examples/';var disqus_identifier='3877 http://www.mkyong.com/?p=3877';var disqus_container_id='disqus_thread';var disqus_domain='disqus.com';var disqus_shortname='mkyong';var disqus_title="Spring bean scopes example";var disqus_config=function(){var config=this;config.language='';config.callbacks.preData.push(function(){document.getElementById(disqus_container_id).innerHTML='';});config.callbacks.onReady.push(function(){var script=document.createElement('script');script.async=true;script.src='?cf_action=sync_comments&post_id=3877';var firstScript=document.getElementsByTagName("script")[0];firstScript.parentNode.insertBefore(script,firstScript);});};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/var DsqLocal={'trackbacks':[{'author_name':"Spring Tutorials | Tutorials",'author_url':"http:\/\/www.mkyong.com\/tutorials\/spring-tutorials\/",'date':"05\/02\/2010 09:52 PM",'excerpt':"[...] Bean Scopes examples Bean scope is used to decide which type of bean instance should be return to the &hellip;",'type':"pingback"},{'author_name':"Spring bean singleton (default )vs prototype | fatkwong14&#039;s Blog",'author_url':"http:\/\/tsangsaicheong.wordpress.com\/2012\/10\/29\/spring-bean-singleton-default-vs-prototype\/",'date':"10\/31\/2012 03:11 PM",'excerpt':"[...] http:\/\/www.mkyong.com\/spring\/spring-bean-scopes-examples\/ Share this:TwitterFacebookLike this:LikeBe the first to like this. [...] ",'type':"pingback"},{'author_name':"??????you cannot access components belong to other desktop | MLab",'author_url':"http:\/\/wp.mlab.tw\/?p=447",'date':"02\/03\/2013 03:48 PM",'excerpt':"[...] ?????  ?Spring Bean scope Example? [...] ",'type':"pingback"}],'trackback_url':"http:\/\/www.mkyong.com\/spring\/spring-bean-scopes-examples\/trackback\/"};/*]]>*/</script><script type="text/javascript">/*<![CDATA[*/(function(){var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+disqus_shortname+'.'+'disqus.com'+'/embed.js?pname=wordpress&pver=2.74';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);})();/*]]>*/</script></div></div><!-- google_ad_section_end --></div><div class="span4"><div id="sidebar"><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7072877400" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="5738517670" data-ad-region="mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" id="sidebar-fb"><div class='dd-loading' id='dd-fbpage'></div><iframe id='dd-fbpage-iframe' src='' height='0' width='0' scrolling='no' frameborder='0' style="border:none;overflow:hidden;" allowTransparency="true" ></iframe></div><div class="sidebar-ads"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="300x250" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div><h2>Recent Posts</h2><div class="block"><ul><li><img width="32" height="17" src="http://www.mkyong.com/wp-content/uploads/2014/07/jsf-log4j-logo-150x80.jpg" class="attachment-32x32 wp-post-image" alt="jsf log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/jsf2/jsf-2-log4j-integration-example/">JSF 2 + Log4j Integration Example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-hello-world-example/">Log4j hello world example </a></div><div class="clearboth"></div></li><li><img width="32" height="29" src="http://www.mkyong.com/wp-content/uploads/2014/07/logo-150x139.jpg" class="attachment-32x32 wp-post-image" alt="log4j logo" /><div class="rt-label"><a href="http://www.mkyong.com/logging/log4j-xml-example/">log4j.xml Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/">Spring Security + Hibernate Annotation Example </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/spring-logo.png" class="attachment-32x32 wp-post-image" alt="spring-logo" /><div class="rt-label"><a href="http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/">Spring Security + Hibernate XML Example </a></div><div class="clearboth"></div></li></ul></div><h2>Popular Tutorials</h2><div class="block"><ul><li><img width="29" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/03/android.png" class="attachment-32x32 wp-post-image" alt="android" /><div class="rt-label"><a rel="tooltip" title="Created : 2012-03-22 14:48:53" href="http://www.mkyong.com/tutorials/android-tutorial/">Android Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="32" src="http://www.mkyong.com/wp-content/uploads/2012/07/jsf2-logo.png" class="attachment-32x32 wp-post-image" alt="jsf2-logo" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-12-12 10:56:54" href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">JSF 2.0 Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/04/Spring-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Spring tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-04-01 11:09:26" href="http://www.mkyong.com/tutorials/spring-tutorials/">Spring Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/maven-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Maven tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:24:51" href="http://www.mkyong.com/tutorials/maven-tutorials/">Maven Tutorial </a></div><div class="clearboth"></div></li><li><img width="32" height="21" src="http://www.mkyong.com/wp-content/uploads/2010/03/Hibernate-tutorials-150x100.png" class="attachment-32x32 wp-post-image" alt="Hibernate tutorials" /><div class="rt-label"><a rel="tooltip" title="Created : 2010-03-31 08:18:30" href="http://www.mkyong.com/tutorials/hibernate-tutorials/">Hibernate Tutorial </a></div><div class="clearboth"></div></li></ul></div><div class="sidebar-ads"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-2836379775501347" data-ad-slot="7953295395" data-ad-region = "mkyongregion"></ins><script>(adsbygoogle=window.adsbygoogle||[]).push({});</script></div><div class="sidebar-ads" style="text-align: center"><div data-type="ad" data-publisher="lqm.j2ee.site" data-zone="ron" data-format="160x600" data-tags="Java%2cSpring%2cAndroid%2cMobile%2cjQuery%2cUnit%20Test%2cASP.NET%20MVC%2cDI%2cTDD"></div></div></div></div></div></div> <script type='text/javascript'>var _wpcf7={"loaderUrl":"http:\/\/www.mkyong.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};</script><footer><div id="footer-container"><div class="container"><div class="row"><div class="span4" id="footer-all-tut"><h3>All Available Tutorials</h3><ul class="unstyled"><li>Java Core Technologies :<div> <a href="/tutorials/java-io-tutorials/">Java I/O</a>, <a href="/tutorials/java-regular-expression-tutorials/">Java RegEx</a>, <a href="/tutorials/java-xml-tutorials/">Java XML</a>, <a href="/tutorials/java-json-tutorials/">Java JSON</a>, <a href="/tutorials/jdbc-tutorials/">JDBC</a>, <a href="/category/java/">Java Misc</a></div></li><li>J2EE Frameworks :<div> <a href="/tutorials/hibernate-tutorials/">Hibernate</a>, <a href="/tutorials/jsf-2-0-tutorials/">JSF 2.0</a>, <a href="/tutorials/spring-tutorials/">Spring Core</a>, <a href="/tutorials/spring-mvc-tutorials/">Spring MVC</a>, <a href="/tutorials/spring-security-tutorials/">Spring Security</a>, <a href="/tutorials/java-mongodb-tutorials/#spring-mongodb">Spring MongoDB</a>, <a href="/tutorials/spring-batch-tutorial/">Spring Batch</a><a href="/tutorials/wicket-tutorials/">Apache Wicket</a>, <a href="/tutorials/struts-tutorials/">Struts 1.x</a>, <a href="/tutorials/struts-2-tutorials/">Struts 2.x</a></div></li><li>Web Service :<div> <a href="/tutorials/jax-ws-tutorials/">JAX-WS (SOAP)</a>, <a href="/tutorials/jax-rs-tutorials/">JAX-RS (REST)</a></div></li><li>Build Tools :<div> <a href="/tutorials/maven-tutorials/">Maven</a>, <a href="/tutorials/apache-archiva-tutorials/">Archiva</a></div></li><li>Unit Test Frameworks :<div> <a href="/tutorials/junit-tutorials/">jUnit</a>, <a href="/tutorials/testng-tutorials/">TestNG</a></div></li><li>Others :<div> <a href="/tutorials/android-tutorial/">Android</a>, <a href="/tutorials/google-app-engine-tutorial/">Google App Engine</a>, <a href="/tutorials/jquery-tutorials/">jQuery</a>, <a href="/tutorials/java-mongodb-tutorials/">Java MongoDB</a>, <a href="/tutorials/quartz-scheduler-tutorial/">Quartz Scheduler</a></div></li></ul></div><div class="span3"><h3>Favorites Links</h3><ul class="unstyled"><li><a href="http://developer.android.com/training/index.html" target="_blank" rel="nofollow">Android Getting Started</a></li><li><a href="https://developers.google.com/appengine/docs/java/gettingstarted/" target="_blank" rel="nofollow">Google App Engine - Java</a></li><li><a href="http://www.dzone.com/" target="_blank" rel="nofollow">DZone - Fresh Links</a></li><li><a href="http://docs.oracle.com/javaee/5/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 5 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/6/tutorial/doc/docinfo.html" target="_blank" rel="nofollow">Official Java EE 6 Tutorial</a></li><li><a href="http://docs.oracle.com/javaee/7/tutorial/doc/" target="_blank" rel="nofollow">Official Java EE 7 Tutorial</a></li><li><a href="http://docs.spring.io/spring/docs/2.5.x/reference/index.html" target="_blank" rel="nofollow">Spring 2.5.x documentation</a></li><li><a href="http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/" target="_blank" rel="nofollow">Spring 3.2.x documentation</a></li><li><a href="http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/" target="_blank">Spring Security 3.2.x documentation</a></li><li><a href="http://docs.jboss.org/hibernate/core/4.3/manual/en-US/html_single/" target="_blank" rel="nofollow">Hibernate core 4.3 documentation</a></li><li><a href="http://download.oracle.com/javase/6/docs/api/overview-summary.html" target="_blank" rel="nofollow">Java SE 6.0 API documentation</a></li><li><a href="http://jsp.java.net/" target="_blank" rel="nofollow">JSP home page</a></li><li><a href="http://javaserverfaces.java.net/" target="_blank" rel="nofollow">JSF home page</a></li><li><a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">Eclipse IDE for Java developer</a></li><li><a href="http://struts.apache.org/release/1.3.x/userGuide/index.html" target="_blank" rel="nofollow">Struts 1.3.x documentation</a></li><li><a href="http://struts.apache.org/release/2.3.x/docs/home.html" target="_blank" rel="nofollow">Struts 2.3.x documentation</a></li><li><a href="http://maven.apache.org/" target="_blank" rel="nofollow">Maven home page</a></li><li><a href="http://search.maven.org/" target="_blank" rel="nofollow">Maven central repository Search</a></li><li><a href="http://ant.apache.org/" target="_blank" rel="nofollow">Ant home page</a></li><li><a href="http://jax-ws.java.net/" target="_blank" rel="nofollow">JAX-WS Official Website</a></li><li><a href="http://jersey.java.net/" target="_blank" rel="nofollow">JAX-RS Official Website (Jersey)</a></li></ul></div><div class="span3"><h3>Friends &amp; Links</h3><ul class="unstyled"><input type="hidden" name="activepost" id="activepost" value="3877" /><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.videophpblog.com" target="_blank">PHP Tutorials</a></li><li><a href="http://www.tenthofmarch.com/" target="_blank">TenthOfMarch</a></li><li><a href="http://www.web2secure.com" target="_blank">Web Security Blog</a></li><li><a href="http://www.fromdev.com" target="_blank">Web Development</a></li><li><a href="http://beust.com" target="_blank">Cédric Beust (TestNG)</a></li></ul></div><div class="span4"><h3>About Us</h3><p> Mkyong.com is a weblog dedicated to Java/J2EE developers and Web Developers. We constantly publish useful tricks, tutorials on J2EE or web development.</p><p> All examples are simple, easy to read, and full source code available, and of course well tested in our development environment.</p> <strong>We're Social</strong><ol><li>Twitter - <a href="http://twitter.com/#!/mkyong" target="_blank">Follow Me</a></li><li>Facebook - <a href="http://www.facebook.com/java.tutorial" target="_blank">Like Me</a></li><li>Google Plus - <a href="https://plus.google.com/110948163568945735692" target="_blank">Add Me</a></li><li>RSS - <a href="http://feeds.feedburner.com/FeedForMkyong" target="_blank">Subscribe Me</a></li></ol></div></div></div></div><div id="footer-copyright"><div class="container"> Copyright &copy; 2008-2014 Mkyong.com, all rights reserved.</div></div></footer><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-752408-5','mkyong.com');ga('send','pageview');</script><script type='text/javascript'>function _dmBootstrap(file){var _dma=document.createElement('script');_dma.type='text/javascript';_dma.async=true;_dma.src=('https:'==document.location.protocol?'https://':'http://')+file;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(_dma);}
function _dmFollowup(file){if(typeof DMAds==='undefined')_dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
(function(){_dmBootstrap('cdn1.DeveloperMedia.com/a.min.js');setTimeout(_dmFollowup,2000);})();</script><script type="text/javascript" src="/wp-content/themes/mkyong-ma/js/core-latest.js?v=2013"></script><script type="text/javascript">function w3tc_load_js(u){var d=document,p=d.getElementsByTagName('HEAD')[0],c=d.createElement('script');c.type='text/javascript';c.src=u;p.appendChild(c);}</script><script type="text/javascript">w3tc_load_js('http://www.mkyong.com/wp-content/cache/minify/000000/481ba/default.include-footer.15c8b4.js');</script></body></html>